{"version":3,"sources":["webpack://mobalytics-builds-widget/./src/widget/app/components/content-square/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-skill-order-mapped-skills/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-skills-skills-map/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-skill-order-abilities/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-skill-order-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-skills/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/right-arrow/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/content-square/index.js"],"names":["ContentSquareLetterSpan","tw","letter","wh","children","loading","noBg","rest","FullSkillOrderMappedSkillsStyles","FlexRow","FullSkillOrderDisplayStyles","styled","FlexCol","leftSpace","keyHeight","FullSkillOrderNumberCol","FullSkillOrderKeyCol","FullSkillOrderDisplayNumberSmallPurpleText","SmallPurpleText","skillOrder","skillMap","map","s","i","number","key","FullSkillOrderSkillsMapStyles","FullSkillOrderContentSquareStyles","ContentSquare","rightSpace","rawSkillMap","length","filter","rightArrowOutput","FullSkillOrderAbilitiesStyles","abilities","slug","topSpace","bottomSpace","type","a","flatData","activationKey","FullSkillOrderStyles","FullSkillOrderSmallWhiteText","SmallWhiteText","FullSkillOrderRow","pt","dataApiBuildData","data","lol","champion","build","squidexApiBuildData","championCommonInfo","abilitiesRaw","isLoading","useContext","BuildContext","reduce","push","className","name","LoadingText","width","height"],"mappings":"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","file":"870.bundle.js","sourcesContent":["import tw from 'twin.macro';\nimport ContentSquareStyles from '../../styles/components/content-square';\n\nconst ContentSquareLetterSpan = tw.span`flex justify-center items-center h-full`;\n\nconst ContentSquare = ({ letter = false, wh = 16, children, loading = true, noBg = false, ...rest }) => {\n\n    return (\n        <ContentSquareStyles letter={letter} wh={wh} loading={loading} noBg={noBg} {...rest}>\n            <ContentSquareLetterSpan>{children}</ContentSquareLetterSpan>\n        </ContentSquareStyles>\n    );\n};\n\nexport default ContentSquare;","import ContentSquare from '../content-square';\nimport tw, { styled } from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst FullSkillOrderMappedSkillsStyles = tw(FlexRow)``;\nconst FullSkillOrderDisplayStyles = styled(FlexCol)(({ leftSpace, keyHeight = 0 }) => [\n    tw`items-center ml-2.5 relative before:(absolute z-0 inset-1/3 left-49p content block w-0.25 h-full bg-widget-purple-text bg-opacity-5)`,\n    0 === keyHeight ? tw`items-center ml-2.5 relative before:(absolute z-0 inset-36p left-49p content block w-0.25 h-22-24p bg-widget-purple-text-25 bg-opacity-5)` : tw``,\n    1 === keyHeight ? tw`items-center ml-2.5 relative before:(absolute z-0 inset-36p left-49p content block w-0.25 h-111-15p bg-widget-purple-text-25 bg-opacity-5)` : tw``,\n    2 === keyHeight ? tw`items-center ml-2.5 relative before:(absolute z-0 inset-36p left-49p content block w-0.25 h-200p bg-widget-purple-text-25 bg-opacity-5)` : tw``,\n    3 === keyHeight ? tw`items-center ml-2.5 relative before:(absolute z-0 inset-36p left-49p content block w-0.25 h-289p bg-widget-purple-text-25 bg-opacity-5)` : tw``,\n    'large' === leftSpace ? tw`md:(ml-3)` : tw``,\n    'normal' === leftSpace ? tw`md:(ml-2.5)` : tw``,\n    'small' === leftSpace ? tw`md:(ml-2)` : tw``,\n    'very-small' === leftSpace ? tw`md:(ml-0-76)` : tw``,\n]);\nconst FullSkillOrderNumberCol = tw(FlexRow)`mb-1`;\nconst FullSkillOrderKeyCol = styled(FlexRow)(({ keyHeight = 0 }) => [\n    tw`relative`,\n    0 === keyHeight ? tw`top-1.6` : tw``,\n    1 === keyHeight ? tw`top-9.6` : tw``,\n    2 === keyHeight ? tw`top-17.6` : tw``,\n    3 === keyHeight ? tw`top-25.5` : tw``,\n]);\nconst FullSkillOrderDisplayNumberSmallPurpleText = tw(SmallPurpleText)`capitalize text-xs leading-none`;\n\nconst FullSkillOrderMappedSkills = ({ skillOrder, skillMap, loading = true }) => {\n\n    return (\n        <FullSkillOrderMappedSkillsStyles>\n            {skillOrder.map((s, i) => {\n                const number = i + 1;\n                const key = skillMap[s - 1];\n                const leftSpace = i !== 0 ? 'very-small' : 'small';\n\n                return (\n                    <FullSkillOrderDisplayStyles keyHeight={s - 1} key={number} leftSpace={leftSpace}>\n                        <FullSkillOrderNumberCol>\n                            <FullSkillOrderDisplayNumberSmallPurpleText>{number}</FullSkillOrderDisplayNumberSmallPurpleText>\n                        </FullSkillOrderNumberCol>\n                        <FullSkillOrderKeyCol keyHeight={s - 1}>\n                            <ContentSquare letter={key} wh={20} loading={loading}>\n                                {key}\n                            </ContentSquare>\n                        </FullSkillOrderKeyCol>\n                    </FullSkillOrderDisplayStyles>\n                );\n            })}\n        </FullSkillOrderMappedSkillsStyles>\n    );\n};\n\nexport default FullSkillOrderMappedSkills;","import ContentSquare from '../content-square';\nimport RightArrow from '../right-arrow';\nimport tw, { styled } from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\n\nconst FullSkillOrderSkillsMapStyles = tw(FlexRow)`ml-2`;\nconst FullSkillOrderContentSquareStyles = styled(ContentSquare)(({ leftSpace = false, rightSpace = false }) => [\n    'normal' === leftSpace ? tw`ml-2` : tw``,\n    'normal' === rightSpace ? tw`mr-2` : tw``\n]);\n\nconst FullSkillOrderSkillsMap = ({ skillMap: rawSkillMap = [], loading = true }) => {\n\n    const skillMap = rawSkillMap.length > 0 ? rawSkillMap.filter(s => s !== 'R') : [\n        0, 1, 2\n    ];\n\n    return (\n        <FullSkillOrderSkillsMapStyles>\n            {skillMap && skillMap.map((s, i) => {\n\n                const rightArrowOutput = i !== skillMap.length - 1 ? (\n                    <RightArrow />\n                ) : false;\n\n                const leftSpace = i !== 0 ? 'normal' : false;\n                const rightSpace = i !== skillMap.length - 1 ? 'normal' : false;\n\n                return (\n                    <>\n                        <FullSkillOrderContentSquareStyles leftSpace={leftSpace} rightSpace={rightSpace} letter={s} key={s} wh={16} loading={loading} noBg={true}>\n                            {s}\n                        </FullSkillOrderContentSquareStyles>\n                        {rightArrowOutput}\n                    </>\n                );\n            })}\n        </FullSkillOrderSkillsMapStyles>\n    );\n};\n\nexport default FullSkillOrderSkillsMap;","import SpellItem from '../spell-item';\nimport tw from 'twin.macro';\nimport FlexCol from '../../styles/components/flex-col';\n\nconst FullSkillOrderAbilitiesStyles = tw(FlexCol)``;\n\nconst FullSkillOrderAbilities = ({ loading = true, abilities = [] }) => {\n    return (\n        <FullSkillOrderAbilitiesStyles>\n            {\n                loading && (\n                    <>\n                        <SpellItem slug={false} wh={24} topSpace=\"large\" bottomSpace=\"small\" type=\"skill\" />\n                        <SpellItem slug={false} wh={24} bottomSpace=\"small\" type=\"skill\" />\n                        <SpellItem slug={false} wh={24} bottomSpace=\"small\" type=\"skill\" />\n                        <SpellItem slug={false} wh={24} bottomSpace=\"small\" type=\"skill\" />\n                    </>\n                )\n            }\n            {\n                !loading && abilities.map((a, i) => {\n\n                    const { flatData } = a;\n                    const { activationKey = false, slug = false } = flatData;\n                    const topSpace = i === 0 ? 'large' : false;\n\n                    return (\n                        <>\n                            <SpellItem key={activationKey} slug={slug} wh={24} topSpace={topSpace} bottomSpace=\"small\" type=\"skill\" />\n                        </>\n                    );\n                })\n            }\n        </FullSkillOrderAbilitiesStyles>\n    );\n};\n\nexport default FullSkillOrderAbilities;","import FullSkillOrderAbilities from '../full-skill-order-abilities';\nimport FullSkillOrderMappedSkills from '../full-skill-order-mapped-skills';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\n\nconst FullSkillOrderDisplayStyles = tw(FlexRow)`items-start`;\n\nconst FullSkillOrderDisplay = ({ abilities, skillOrder, skillMap, loading = true }) => {\n\n    return (\n        <FullSkillOrderDisplayStyles>\n            <FullSkillOrderAbilities abilities={abilities} loading={loading} />\n            <FullSkillOrderMappedSkills skillOrder={skillOrder} skillMap={skillMap} loading={loading} />\n        </FullSkillOrderDisplayStyles>\n    );\n};\n\nexport default FullSkillOrderDisplay;","import FullSkillOrderSkillsMap from '../full-skills-skills-map';\nimport FullSkillOrderDisplay from '../full-skill-order-display';\nimport { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport tw, { styled } from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst FullSkillOrderStyles = tw(FlexCol)`hidden md:(flex pt-4) lg:(pt-5) xl:(pt-0)`;\nconst FullSkillOrderSmallWhiteText = tw(SmallWhiteText)`uppercase`;\nconst FullSkillOrderRow = styled(FlexRow)(({ pt = false }) => [\n    tw``,\n    'normal' === pt ? tw`pt-3` : tw``,\n]);\n\nconst FullSkills = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion: { build: { skillOrder = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] } = {} } = {} } = {} } = {} } = {}, squidexApiBuildData: { data: { championCommonInfo: [{ flatData: { abilities: abilitiesRaw = [] } = {} } = {}] = [] } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n\n    const abilities = abilitiesRaw.filter(a => a.flatData.activationKey !== 'PASSIVE') || [];\n    const skillMap = abilities.length > 0 ? abilities.reduce((a, i) => {\n        a.push(i.flatData.activationKey);\n        return a;\n    }, []) : [];\n\n    const loading = isLoading || (skillMap.length === 0);\n\n    return (\n        <FullSkillOrderStyles>\n            <FullSkillOrderRow>\n                <FullSkillOrderSmallWhiteText>Skill order</FullSkillOrderSmallWhiteText>\n                <FullSkillOrderSkillsMap skillMap={skillMap} loading={loading} />\n            </FullSkillOrderRow>\n            <FullSkillOrderRow pt=\"normal\">\n                <FullSkillOrderDisplay abilities={abilities} skillOrder={skillOrder} skillMap={skillMap} loading={loading} />\n            </FullSkillOrderRow>\n        </FullSkillOrderStyles>\n    );\n};\n\nexport default FullSkills;","import DynamicSvg from '../dynamic-svg';\n\nconst RightArrow = ({ className }) => {\n\n    return (\n        <DynamicSvg name=\"right-arrow\" className={className} />\n    );\n}\n\nexport default RightArrow;","import tw, { styled } from 'twin.macro';\nimport LoadingText from '../../utils/loading-text';\n\nconst ContentSquareStyles = styled.div(({ wh = 16, letter = false, loading = true, noBg = false }) => [\n    tw`text-white font-bold text-xs bg-widget-purple-overlay rounded-sm`,\n    'W' === letter ? tw`text-widget-keys-W!` : tw``,\n    'Q' === letter ? tw`text-widget-keys-Q!` : tw``,\n    'E' === letter ? tw`text-widget-keys-E!` : tw``,\n    'R' === letter ? tw`text-widget-keys-R!` : tw``,\n    true === noBg ? tw`bg-transparent` : tw``,\n    loading && (LoadingText),\n    { width: `${wh}px`, height: `${wh}px` }\n]);\n\nexport default ContentSquareStyles;"],"sourceRoot":""}