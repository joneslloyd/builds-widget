{"version":3,"sources":["webpack://mobalytics-builds-widget/./src/widget/app/components/full-skill-order-mapped-skills/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-skills-skills-map/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-skill-order-abilities/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-skill-order-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-skills/index.js"],"names":["skillOrder","skillMap","loading","styled","useStyled","FullSkillOrderMappedSkillsStyles","FlexRow","FullSkillOrderDisplayStyles","FlexCol","leftSpace","keyHeight","FullSkillOrderNumberCol","FullSkillOrderKeyCol","FullSkillOrderDisplayNumberSmallPurpleText","SmallPurpleText","map","s","i","number","key","letter","wh","rawSkillMap","FullSkillOrderSkillsMapStyles","FullSkillOrderContentSquareStyles","ContentSquare","rightSpace","length","filter","rightArrowOutput","noBg","abilities","FullSkillOrderAbilitiesStyles","slug","topSpace","bottomSpace","type","a","flatData","activationKey","by","identifier","cursor","memo","FullSkillOrderStyles","FullSkillOrderSmallWhiteText","SmallWhiteText","FullSkillOrderRow","pt","daData","data","lol","champion","build","useDataApi","sqData","championCommonInfo","abilitiesRaw","useSquidexApi","isLoading","useLoading","useMemo","reduce","push"],"mappings":"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","file":"870.bundle.js","sourcesContent":["import ContentSquare from '../content-square';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst FullSkillOrderMappedSkills = ({ skillOrder, skillMap, loading = true }) => {\n\n    const styled = useStyled();\n\n    const FullSkillOrderMappedSkillsStyles = styled(FlexRow)(() => [\n        tw``,\n    ]);\n    const FullSkillOrderDisplayStyles = styled(FlexCol)(({ leftSpace, keyHeight = 0 }) => [\n        tw`items-center ml-2.5 relative before:(absolute z-0 inset-1/3 left-49p content block w-0.25 h-full bg-widget-purple-text bg-opacity-5)`,\n        0 === keyHeight ? tw`items-center ml-2.5 relative before:(absolute z-0 inset-36p left-49p content block w-0.25 h-22-24p bg-widget-purple-text-25 bg-opacity-5)` : tw``,\n        1 === keyHeight ? tw`items-center ml-2.5 relative before:(absolute z-0 inset-36p left-49p content block w-0.25 h-111-15p bg-widget-purple-text-25 bg-opacity-5)` : tw``,\n        2 === keyHeight ? tw`items-center ml-2.5 relative before:(absolute z-0 inset-36p left-49p content block w-0.25 h-200p bg-widget-purple-text-25 bg-opacity-5)` : tw``,\n        3 === keyHeight ? tw`items-center ml-2.5 relative before:(absolute z-0 inset-36p left-49p content block w-0.25 h-289p bg-widget-purple-text-25 bg-opacity-5)` : tw``,\n        'large' === leftSpace ? tw`md:(ml-3)` : tw``,\n        'normal' === leftSpace ? tw`md:(ml-2.5)` : tw``,\n        'small' === leftSpace ? tw`md:(ml-2)` : tw``,\n        'very-small' === leftSpace ? tw`md:(ml-0-76)` : tw``,\n    ]);\n    const FullSkillOrderNumberCol = styled(FlexRow)(() => [\n        tw`mb-1`,\n    ]);\n    const FullSkillOrderKeyCol = styled(FlexRow)(({ keyHeight = 0 }) => [\n        tw`relative`,\n        0 === keyHeight ? tw`top-1.6` : tw``,\n        1 === keyHeight ? tw`top-9.6` : tw``,\n        2 === keyHeight ? tw`top-17.6` : tw``,\n        3 === keyHeight ? tw`top-25.5` : tw``,\n    ]);\n    const FullSkillOrderDisplayNumberSmallPurpleText = styled(SmallPurpleText)(() => [\n        tw`capitalize text-xs leading-none`,\n    ]);\n\n    return (\n        <FullSkillOrderMappedSkillsStyles>\n            {skillOrder.map((s, i) => {\n                const number = i + 1;\n                const key = skillMap[s - 1];\n                const leftSpace = i !== 0 ? 'very-small' : 'small';\n\n                return (\n                    <FullSkillOrderDisplayStyles keyHeight={s - 1} key={number} leftSpace={leftSpace}>\n                        <FullSkillOrderNumberCol>\n                            <FullSkillOrderDisplayNumberSmallPurpleText>{number}</FullSkillOrderDisplayNumberSmallPurpleText>\n                        </FullSkillOrderNumberCol>\n                        <FullSkillOrderKeyCol keyHeight={s - 1}>\n                            <ContentSquare letter={key} wh={20} loading={loading}>\n                                {key}\n                            </ContentSquare>\n                        </FullSkillOrderKeyCol>\n                    </FullSkillOrderDisplayStyles>\n                );\n            })}\n        </FullSkillOrderMappedSkillsStyles>\n    );\n};\n\nexport default FullSkillOrderMappedSkills;","import ContentSquare from '../content-square';\nimport RightArrow from '../right-arrow';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\n\nconst FullSkillOrderSkillsMap = ({ skillMap: rawSkillMap = [], loading = true }) => {\n\n    const styled = useStyled();\n\n    const FullSkillOrderSkillsMapStyles = styled(FlexRow)(() => [\n        tw`ml-2`,\n    ]);\n    const FullSkillOrderContentSquareStyles = styled(ContentSquare)(({ leftSpace = false, rightSpace = false }) => [\n        'normal' === leftSpace ? tw`ml-2` : tw``,\n        'normal' === rightSpace ? tw`mr-2` : tw``\n    ]);\n\n    const skillMap = rawSkillMap.length > 0 ? rawSkillMap.filter(s => s !== 'R') : [\n        0, 1, 2\n    ];\n\n    return (\n        <FullSkillOrderSkillsMapStyles>\n            {skillMap && skillMap.map((s, i) => {\n\n                const rightArrowOutput = i !== skillMap.length - 1 ? (\n                    <RightArrow />\n                ) : false;\n\n                const leftSpace = i !== 0 ? 'normal' : false;\n                const rightSpace = i !== skillMap.length - 1 ? 'normal' : false;\n\n                return (\n                    <>\n                        <FullSkillOrderContentSquareStyles leftSpace={leftSpace} rightSpace={rightSpace} letter={s} key={s} wh={16} loading={loading} noBg={true}>\n                            {s}\n                        </FullSkillOrderContentSquareStyles>\n                        {rightArrowOutput}\n                    </>\n                );\n            })}\n        </FullSkillOrderSkillsMapStyles>\n    );\n};\n\nexport default FullSkillOrderSkillsMap;","import SpellItem from '../spell-item';\nimport ChampionSkillTooltipWrapper from '../tooltips/champion-skill-tooltip-wrapper';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexCol from '../../styles/components/flex-col';\n\nconst FullSkillOrderAbilities = ({ loading = true, abilities = [] }) => {\n\n    const styled = useStyled();\n\n    const FullSkillOrderAbilitiesStyles = styled(FlexCol)(() => [\n        tw``,\n    ]);\n\n    return (\n        <FullSkillOrderAbilitiesStyles>\n            {\n                loading && (\n                    <>\n                        <SpellItem slug={false} wh={24} topSpace=\"large\" bottomSpace=\"small\" type=\"skill\" />\n                        <SpellItem slug={false} wh={24} bottomSpace=\"small\" type=\"skill\" />\n                        <SpellItem slug={false} wh={24} bottomSpace=\"small\" type=\"skill\" />\n                        <SpellItem slug={false} wh={24} bottomSpace=\"small\" type=\"skill\" />\n                    </>\n                )\n            }\n            {\n                !loading && abilities.map((a, i) => {\n\n                    const { flatData } = a;\n                    const { activationKey = false, slug = false } = flatData;\n                    const topSpace = i === 0 ? 'large' : false;\n\n                    return (\n                        <>\n                            <ChampionSkillTooltipWrapper by=\"slug\" identifier={slug}>\n                                <SpellItem cursor=\"help\" key={activationKey} slug={slug} wh={24} topSpace={topSpace} bottomSpace=\"small\" type=\"skill\" />\n                            </ChampionSkillTooltipWrapper>\n                        </>\n                    );\n                })\n            }\n        </FullSkillOrderAbilitiesStyles>\n    );\n};\n\nexport default FullSkillOrderAbilities;","import FullSkillOrderAbilities from '../full-skill-order-abilities';\nimport FullSkillOrderMappedSkills from '../full-skill-order-mapped-skills';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\n\nconst FullSkillOrderDisplay = ({ abilities, skillOrder, skillMap, loading = true }) => {\n\n    const styled = useStyled();\n\n    const FullSkillOrderDisplayStyles = styled(FlexRow)(() => [\n        tw`items-start`,\n    ]);\n\n    return (\n        <FullSkillOrderDisplayStyles>\n            <FullSkillOrderAbilities abilities={abilities} loading={loading} />\n            <FullSkillOrderMappedSkills skillOrder={skillOrder} skillMap={skillMap} loading={loading} />\n        </FullSkillOrderDisplayStyles>\n    );\n};\n\nexport default FullSkillOrderDisplay;","import { memo } from 'preact/compat';\nimport { useMemo } from 'preact/hooks';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport { useLoading } from '../../lib/context/loading';\nimport FullSkillOrderSkillsMap from '../full-skills-skills-map';\nimport FullSkillOrderDisplay from '../full-skill-order-display';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst FullSkills = () => {\n\n    const styled = useStyled();\n\n    const FullSkillOrderStyles = styled(FlexCol)(() => [\n        tw`hidden md:(flex pt-4) lg:(pt-5) xl:(pt-0)`,\n    ]);\n    const FullSkillOrderSmallWhiteText = styled(SmallWhiteText)(() => [\n        tw`uppercase`,\n    ]);\n    const FullSkillOrderRow = styled(FlexRow)(({ pt = false }) => [\n        tw``,\n        'normal' === pt ? tw`pt-3` : tw``,\n    ]);\n\n    const { daData: { data: { lol: { champion: { build: { skillOrder = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { sqData: { data: { championCommonInfo: [{ flatData: { abilities: abilitiesRaw = [] } = {} } = {}] = [] } = {} } = {} } = useSquidexApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const abilities = useMemo(() => {\n        return abilitiesRaw.filter(a => a.flatData.activationKey !== 'PASSIVE') || [];\n    }, [abilitiesRaw]);\n\n    const skillMap = useMemo(() => {\n        return abilities.length > 0 ? abilities.reduce((a, i) => {\n            a.push(i.flatData.activationKey);\n            return a;\n        }, []) : []\n    }, [abilities]);\n\n    const loading = isLoading || (skillMap.length === 0);\n\n    return (\n        <FullSkillOrderStyles>\n            <FullSkillOrderRow>\n                <FullSkillOrderSmallWhiteText>Skill order</FullSkillOrderSmallWhiteText>\n                <FullSkillOrderSkillsMap skillMap={skillMap} loading={loading} />\n            </FullSkillOrderRow>\n            <FullSkillOrderRow pt=\"normal\">\n                <FullSkillOrderDisplay abilities={abilities} skillOrder={skillOrder} skillMap={skillMap} loading={loading} />\n            </FullSkillOrderRow>\n        </FullSkillOrderStyles>\n    );\n};\n\nexport default memo(FullSkills);"],"sourceRoot":""}