{"version":3,"sources":["webpack://mobalytics-builds-widget/webpack/universalModuleDefinition","webpack://mobalytics-builds-widget/webpack/bootstrap","webpack://mobalytics-builds-widget/webpack/runtime/make namespace object","webpack://mobalytics-builds-widget/./node_modules/preact/dist/preact.module.js","webpack://mobalytics-builds-widget/./node_modules/preact-habitat/dist/preact-habitat.es.js","webpack://mobalytics-builds-widget/./node_modules/goober/dist/goober.modern.js","webpack://mobalytics-builds-widget/./node_modules/goober/global/dist/goober-global.modern.js","webpack://mobalytics-builds-widget/./node_modules/preact/jsx-runtime/dist/jsxRuntime.module.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/global-styles/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/rounded-gold-border/index.js","webpack://mobalytics-builds-widget/./node_modules/preact/hooks/dist/hooks.module.js","webpack://mobalytics-builds-widget/./src/widget/app/components/image/index.js","webpack://mobalytics-builds-widget/./node_modules/wonka/dist/wonka.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/jsutils/isObjectLike.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/polyfills/symbols.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/location.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/printLocation.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/error/GraphQLError.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/kinds.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/error/syntaxError.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/jsutils/defineInspect.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/jsutils/invariant.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/ast.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/tokenKind.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/jsutils/inspect.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/jsutils/devAssert.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/source.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/directiveLocation.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/blockString.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/lexer.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/parser.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/visitor.mjs","webpack://mobalytics-builds-widget/./node_modules/graphql/language/printer.mjs","webpack://mobalytics-builds-widget/./node_modules/@urql/core/dist/2c01d8b2.mjs","webpack://mobalytics-builds-widget/./node_modules/@urql/core/dist/urql-core.mjs","webpack://mobalytics-builds-widget/./src/widget/app/lib/helpers.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/graphql/client/index.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/context/index.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/data/index.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/graphql/queries/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/avatar/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/standard-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/loading-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/normal-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/name/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/flex-row/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/small-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/small-purple-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/role/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/small-white-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/patch/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/win-rate/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/matches/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/flex-col/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/header/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/rune/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/runes-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/runes-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/runes/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/spell-item/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/spells-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/spells-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/spells/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/item-set/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/items-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/items-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/items/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/skill-priority/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/skill-order/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/body/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/platinum-plus-icon/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/games-analyzed/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/more-builds/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/more-builds-icon/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/powered-by/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/mobalytics-logo/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/footer/index.js","webpack://mobalytics-builds-widget/./src/widget/app/index.js","webpack://mobalytics-builds-widget/./src/widget/index.js"],"names":["root","factory","exports","module","define","amd","a","i","self","Symbol","toStringTag","Object","defineProperty","value","u","t","o","r","f","e","c","n","l","s","parentNode","removeChild","arguments","length","push","children","defaultProps","v","type","props","key","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","y","p","this","context","d","indexOf","_","base","k","b","__r","debounceRendering","sort","some","__P","I","__n","ownerSVGElement","T","m","h","w","A","P","Array","isArray","g","x","L","z","appendChild","nextSibling","insertBefore","setProperty","test","C","style","cssText","replace","toLowerCase","slice","addEventListener","H","$","removeEventListener","setAttribute","removeAttribute","event","contextType","__E","prototype","render","M","sub","state","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","j","diffed","call","localName","nodeType","document","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","name","__html","innerHTML","firstChild","checked","current","unmount","componentWillUnmount","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","bind","resolve","setTimeout","widgetDOMHostElements","scripts","selector","inline","clientSpecified","hostNodes","currentScript","getElementsByTagName","scriptTagAttrs","keys","hasOwnProperty","nodeValue","getHabitatSelectorFromClient","querySelectorAll","queriedTag","preactRender","widget","hostElements","cleanRoot","elm","hostNode","_habitat","element","attrs","assign","dataAttrName","propName","split","pop","all","letter","toUpperCase","propValue","scrp","propsObj","hasAttribute","getAttribute","JSON","parse","Error","collectPropsFromElement","window","querySelector","_goober","head","id","reduce","charCodeAt","exec","shift","unshift","className","raw","target","theme","apply","as","__source","__self","CustomStyles","createGlobalStyles","borderWidth","rest","styled","__H","F","clearTimeout","cancelAnimationFrame","requestAnimationFrame","filter","src","alt","title","width","height","rounded","bgColor","loading","setLoading","useState","ImageLoadingStyles","ImageStyles","onLoad","tag","D","concat","E","J","unsubscribe","filter$1","fromValue$1","map$1","merge$1","onStart$1","share$1","take$1","takeUntil$1","_typeof","obj","iterator","observable","asyncIterator","SYMBOL_TO_STRING_TAG","getLocation","source","position","match","lineRegexp","line","column","body","index","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","printPrefixedLines","map","subLine","existingLines","_ref","undefined","padLen","max","_ref2","_ref3","str","prefix","join","len","_defineProperties","descriptor","enumerable","configurable","writable","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Map","fn","Function","toString","TypeError","has","get","set","Wrapper","_construct","_getPrototypeOf","create","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","instance","sham","Proxy","Date","setPrototypeOf","__proto__","getPrototypeOf","GraphQLError","_Error","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","Constructor","protoProps","_super","result","Super","NewTarget","message","nodes","positions","path","originalError","extensions","_locations2","_source2","_positions2","_extensions2","_this","_classCallCheck","_nodes$0$loc","_nodes","_source","loc","_locations","_positions","list","node","pos","_extensions","originalExtensions","defineProperties","locations","stack","captureStackTrace","error","output","_i2","_error$nodes2","_i4","_error$locations2","printError","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","syntaxError","description","for","defineInspect","classObject","toJSON","condition","Boolean","invariant","inspect","Location","startToken","endToken","end","Token","kind","prev","next","isNode","maybeNode","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","formatValue","seenValues","stringify","previouslySeenValues","customInspectFn","object","String","getCustomFn","customValue","array","min","remaining","items","formatArray","getObjectTag","formatObject","formatObjectValue","devAssert","Source","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","dedentBlockStringValue","rawString","commonIndent","_commonIndent","isFirstLine","isEmptyLine","indent","getBlockStringIndentation","startLine","isBlank","endLine","Lexer","startOfFileToken","lastToken","token","lineStart","_proto","advance","lookahead","_token$next","readToken","printCharCode","code","isNaN","fromCharCode","lexer","bodyLength","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","firstCode","isFloat","readDigits","isNameStart","chunkStart","charCode","uniCharCode","invalidSequence","rawValue","char2hex","Parser","options","sourceObj","isSource","_lexer","_options","parseName","expectToken","parseDocument","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","parseTypeReference","defaultValue","expectOptionalToken","parseValueLiteral","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","_this$_options2","allowLegacySDLImplementsInterfaces","types","delimitedMany","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","delimiterKind","isPunctuatorTokenKind","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","visit","visitor","visitorKeys","inArray","edits","parent","ancestors","newRoot","isLeaving","isEdited","clone","_Object$keys2","editOffset","ii","editKey","editValue","splice","_visitorKeys$node$kin","visitFn","getVisitFn","kindVisitor","kindSpecificVisitor","leave","enter","specificVisitor","specificKindVisitor","ast","printDocASTReducer","U","op","varDefs","wrap","argsLine","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","indentation","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","hasTrailingSlash","printAsMultipleLines","printBlockString","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","addDescription","_ref20","_ref21","_ref22","_ref23","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","cb","maybeArray","_maybeArray$filter$jo","separator","maybeString","isMultiline","random","add","delete","clear","trim","__key","createRequest","query","variables","toPromise","meta","requestPolicy","cacheOutcome","reexecuteOperation","dispatchDebug","V","activeOperations","queue","createOperationContext","url","fetchOptions","fetch","preferGetMethod","suspense","createRequestOperation","executeQuery","executeRequestOperation","executeSubscription","executeMutation","maskTypename","complete","operations$","dispatchOperation","client","reduceRight","forward","exchanges","results$","W","createClient","networkError","response","graphQLErrors","Set","WeakMap","stale","additionalTypenames","operationName","makeFetchBody","encodeURIComponent","makeFetchURL","method","headers","makeFetchOptions","AbortController","signal","status","redirect","json","errors","catch","statusText","abort","makeFetchSource","onOperationStart","onOperationEnd","readQuery","subscription","mutation","getEnvVar","namePart","vars","VARIABLES","getLineColorFromIcon","iconCode","commaNumber","num","apiData","apiDataToken","apiSquidex","apiSquidexToken","dataApiClient","authorization","squidexApiClient","BuildContext","Consumer","Provider","createContext","champion","dataApiBuildData","setDataApiBuildData","squidexApiBuildData","setSquidexApiBuildData","store","buildData","setBuildData","getDataApiData","championFilter","roleDataFilter","matchupsDataFilter","buildDataFilter","comboFilter","combosListFilter","matchupSpecificDataFilter","withCommonData","withBuildData","withCountersData","withCombosData","withMatchupSpecificCountersData","withProBuildsData","getSquidexApiData","useEffect","AvatarStyles","tw","lol","build","championSlug","squidexData","useContext","championCommonInfo","flatData","avatarUrl","slug","cdnUrl","championImage","altTitle","StandardText","LoadingText","NameStyles","SmallText","RoleStyles","FlexRow","RoleSmallPurpleText","SmallPurpleText","role","rawRole","isLoading","roleIcon","rolename","rolenameIcon","PatchStyles","PatchSmallPurpleText","PatchSmallWhiteText","SmallWhiteText","patch","WinRateStyles","WinRateSmallPurpleText","WinRateSmallGreenText","stats","winRateHistory","latestWinRateHistoryItem","winRateRaw","winRate","precision","multiplier","pow","round","roundWinRate","MatchesStyles","MatchesSmallPurpleText","MatchesSmallWhiteText","matchCount","matchCountRaw","HeaderStyles","NamePatchStyles","FlexCol","RoundedGoldBorderStyles","RoundedGoldBorder","NoWrapStyles","wh","gold","leftSpace","wrapComponents","none","WrapComponentStyles","perk","perkImage","RunesDisplayU","RunesStyles","RunesSmallWhiteText","RunesDisplayStyles","RunesDisplay","RuneGroup","perks","IDs","iDs","primaryId","subStyle","secondaryId","primaryLine","secondaryLine","SpellItemStyles","summonerSpellIcon","gameItemIcon","SpellsDisplayU","SpellsStyles","SpellsSmallWhiteText","SpellsDisplayStyles","SpellsDisplay","spells","querySummonersSpellsV1Contents","squidexSpells","spellData","includes","parseInt","riotId","ItemSetStyles","ItemSetSmallPurpleText","ItemSetDisplayStyles","ItemsDisplayU","ItemsStyles","ItemsSmallWhiteText","ItemsDisplayStyles","ItemsDisplay","dummyData","SkillPriorityStyles","SkillPrioritySmallWhiteText","console","log","SkillOrderStyles","SkillOrderSmallWhiteText","BodyStyles","BodyRow","pt","xmlns","fill","viewBox","fillRule","clipRule","GamesAnalyzedStyles","GamesAnalyzedSmallLightestPurpleText","GamesAnalyzedSmallPurpleText","MoreBuildsStyles","MoreBuildsLoading","MoreBuildsSmallGoldText","MoreBuildsIconStyled","moreBuildsLinkText","moreBuildsLinkHref","href","PoweredByStyles","PoweredBySmallPurpleText","PoweredByLogo","clipPath","FooterStyles","Container","setup","clean","elements","loaded","elements$1"],"mappings":"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","file":"index.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var n,l,u,i,t,o,r={},f=[],e=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function c(n,l){for(var u in l)n[u]=l[u];return n}function s(n){var l=n.parentNode;l&&l.removeChild(n)}function a(n,l,u){var i,t,o,r=arguments,f={};for(o in l)\"key\"==o?i=l[o]:\"ref\"==o?t=l[o]:f[o]=l[o];if(arguments.length>3)for(u=[u],o=3;o<arguments.length;o++)u.push(r[o]);if(null!=u&&(f.children=u),\"function\"==typeof n&&null!=n.defaultProps)for(o in n.defaultProps)void 0===f[o]&&(f[o]=n.defaultProps[o]);return v(n,f,i,t,null)}function v(l,u,i,t,o){var r={type:l,props:u,key:i,ref:t,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==o?++n.__v:o};return null!=n.vnode&&n.vnode(r),r}function h(){return{current:null}}function y(n){return n.children}function p(n,l){this.props=n,this.context=l}function d(n,l){if(null==l)return n.__?d(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?d(n):null}function _(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return _(n)}}function k(l){(!l.__d&&(l.__d=!0)&&u.push(l)&&!b.__r++||t!==n.debounceRendering)&&((t=n.debounceRendering)||i)(b)}function b(){for(var n;b.__r=u.length;)n=u.sort(function(n,l){return n.__v.__b-l.__v.__b}),u=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=c({},t)).__v=t.__v+1,I(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?d(t):o,t.__h),T(u,t),t.__e!=o&&_(t)))})}function m(n,l,u,i,t,o,e,c,s,a){var h,p,_,k,b,m,w,A=i&&i.__k||f,P=A.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(y,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(_=A[h])||_&&k.key==_.key&&k.type===_.type)A[h]=void 0;else for(p=0;p<P;p++){if((_=A[p])&&k.key==_.key&&k.type===_.type){A[p]=void 0;break}_=null}I(n,k,_=_||r,t,o,e,c,s,a),b=k.__e,(p=k.ref)&&_.ref!=p&&(w||(w=[]),_.ref&&w.push(_.ref,null,k),w.push(p,k.__c||b,k)),null!=b?(null==m&&(m=b),\"function\"==typeof k.type&&null!=k.__k&&k.__k===_.__k?k.__d=s=g(k,s,n):s=x(n,k,_,A,b,s),a||\"option\"!==u.type?\"function\"==typeof u.type&&(u.__d=s):n.value=\"\"):s&&_.__e==s&&s.parentNode!=n&&(s=d(_))}for(u.__e=m,h=P;h--;)null!=A[h]&&(\"function\"==typeof u.type&&null!=A[h].__e&&A[h].__e==u.__d&&(u.__d=d(i,h+1)),L(A[h],A[h]));if(w)for(h=0;h<w.length;h++)z(w[h],w[++h],w[++h])}function g(n,l,u){var i,t;for(i=0;i<n.__k.length;i++)(t=n.__k[i])&&(t.__=n,l=\"function\"==typeof t.type?g(t,l,u):x(u,t,t,n.__k,t.__e,l));return l}function w(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){w(n,l)}):l.push(n)),l}function x(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function A(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||C(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||C(n,o,l[o],u[o],i)}function P(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||e.test(l)?u:u+\"px\"}function C(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||P(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||P(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?H:$,o):n.removeEventListener(l,o?H:$,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink[H:h]/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function $(l){this.l[l.type+!1](n.event?n.event(l):l)}function H(l){this.l[l.type+!0](n.event?n.event(l):l)}function I(l,u,i,t,o,r,f,e,s){var a,v,h,d,_,k,b,g,w,x,A,P=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(s=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=n.__b)&&a(u);try{n:if(\"function\"==typeof P){if(g=u.props,w=(a=P.contextType)&&t[a.__c],x=a?w?w.props.value:a.__:t,i.__c?b=(v=u.__c=i.__c).__=v.__E:(\"prototype\"in P&&P.prototype.render?u.__c=v=new P(g,x):(u.__c=v=new p(g,x),v.constructor=P,v.render=M),w&&w.sub(v),v.props=g,v.state||(v.state={}),v.context=x,v.__n=t,h=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&(v.__s==v.state&&(v.__s=c({},v.__s)),c(v.__s,P.getDerivedStateFromProps(g,v.__s))),d=v.props,_=v.state,h)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&v.__h.push(v.componentDidMount);else{if(null==P.getDerivedStateFromProps&&g!==d&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(g,x),!v.__e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(g,v.__s,x)||u.__v===i.__v){v.props=g,v.state=v.__s,u.__v!==i.__v&&(v.__d=!1),v.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),v.__h.length&&f.push(v);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(g,v.__s,x),null!=v.componentDidUpdate&&v.__h.push(function(){v.componentDidUpdate(d,_,k)})}v.context=x,v.props=g,v.state=v.__s,(a=n.__r)&&a(u),v.__d=!1,v.__v=u,v.__P=l,a=v.render(v.props,v.state,v.context),v.state=v.__s,null!=v.getChildContext&&(t=c(c({},t),v.getChildContext())),h||null==v.getSnapshotBeforeUpdate||(k=v.getSnapshotBeforeUpdate(d,_)),A=null!=a&&a.type===y&&null==a.key?a.props.children:a,m(l,Array.isArray(A)?A:[A],u,i,t,o,r,f,e,s),v.base=u.__e,u.__h=null,v.__h.length&&f.push(v),b&&(v.__E=v.__=null),v.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=j(i.__e,u,i,t,o,r,f,s);(a=n.diffed)&&a(u)}catch(l){u.__v=null,(s||null!=r)&&(u.__e=e,u.__h=!!s,r[r.indexOf(e)]=null),n.__e(l,u,i)}}function T(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u)})}catch(l){n.__e(l,u.__v)}})}function j(n,l,u,i,t,o,e,c){var a,v,h,y,p=u.props,d=l.props,_=l.type,k=0;if(\"svg\"===_&&(t=!0),null!=o)for(;k<o.length;k++)if((a=o[k])&&(a===n||(_?a.localName==_:3==a.nodeType))){n=a,o[k]=null;break}if(null==n){if(null===_)return document.createTextNode(d);n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",_):document.createElement(_,d.is&&d),o=null,c=!1}if(null===_)p===d||c&&n.data===d||(n.data=d);else{if(o=o&&f.slice.call(n.childNodes),v=(p=u.props||r).dangerouslySetInnerHTML,h=d.dangerouslySetInnerHTML,!c){if(null!=o)for(p={},y=0;y<n.attributes.length;y++)p[n.attributes[y].name]=n.attributes[y].value;(h||v)&&(h&&(v&&h.__html==v.__html||h.__html===n.innerHTML)||(n.innerHTML=h&&h.__html||\"\"))}if(A(n,d,p,t,c),h)l.__k=[];else if(k=l.props.children,m(n,Array.isArray(k)?k:[k],l,u,i,t&&\"foreignObject\"!==_,o,e,n.firstChild,c),null!=o)for(k=o.length;k--;)null!=o[k]&&s(o[k]);c||(\"value\"in d&&void 0!==(k=d.value)&&(k!==n.value||\"progress\"===_&&!k)&&C(n,\"value\",k,p.value,!1),\"checked\"in d&&void 0!==(k=d.checked)&&k!==n.checked&&C(n,\"checked\",k,p.checked,!1))}return n}function z(l,u,i){try{\"function\"==typeof l?l(u):l.current=u}catch(l){n.__e(l,i)}}function L(l,u,i){var t,o,r;if(n.unmount&&n.unmount(l),(t=l.ref)&&(t.current&&t.current!==l.__e||z(t,null,u)),i||\"function\"==typeof l.type||(i=null!=(o=l.__e)),l.__e=l.__d=void 0,null!=(t=l.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(l){n.__e(l,u)}t.base=t.__P=null}if(t=l.__k)for(r=0;r<t.length;r++)t[r]&&L(t[r],u,i);null!=o&&s(o)}function M(n,l,u){return this.constructor(n,u)}function N(l,u,i){var t,o,e;n.__&&n.__(l,u),o=(t=\"function\"==typeof i)?null:i&&i.__k||u.__k,e=[],I(u,l=(!t&&i||u).__k=a(y,null,[l]),o||r,r,void 0!==u.ownerSVGElement,!t&&i?[i]:o?null:u.firstChild?f.slice.call(u.childNodes):null,e,!t&&i?i:o?o.__e:u.firstChild,t),T(e,l)}function O(n,l){N(n,l,O)}function S(n,l,u){var i,t,o,r=arguments,f=c({},n.props);for(o in l)\"key\"==o?i=l[o]:\"ref\"==o?t=l[o]:f[o]=l[o];if(arguments.length>3)for(u=[u],o=3;o<arguments.length;o++)u.push(r[o]);return null!=u&&(f.children=u),v(n.type,f,i||n.key,t||n.ref,null)}function q(n,l){var u={__c:l=\"__cC\"+o++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(k)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n={__e:function(n,l){for(var u,i,t;l=l.__;)if((u=l.__c)&&!u.__)try{if((i=u.constructor)&&null!=i.getDerivedStateFromError&&(u.setState(i.getDerivedStateFromError(n)),t=u.__d),null!=u.componentDidCatch&&(u.componentDidCatch(n),t=u.__d),t)return u.__E=u}catch(l){n=l}throw n},__v:0},l=function(n){return null!=n&&void 0===n.constructor},p.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=c({},this.state),\"function\"==typeof n&&(n=n(c({},u),this.props)),n&&c(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),k(this))},p.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),k(this))},p.prototype.render=y,u=[],i=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,b.__r=0,o=0;export{N as render,O as hydrate,a as createElement,a as h,y as Fragment,h as createRef,l as isValidElement,p as Component,S as cloneElement,q as createContext,w as toChildArray,n as options};\n//# sourceMappingURL=preact.module.js.map\n","import { h, render } from 'preact';\n\n/**\n * Removes `-` fron a string and capetalize the letter after\n * example: data-props-hello-world =>  dataPropsHelloWorld\n * Used for props passed from host DOM element\n * @param  {String} str string\n * @return {String} Capetalized string\n */\nvar camelcasize = function (str) {\n  return str.replace(/-([a-z])/gi, function (all, letter) {\n    return letter.toUpperCase();\n  });\n};\n\n/**\n * [getExecutedScript internal widget to provide the currently executed script]\n * @param  {document} document [Browser document object]\n * @return {HTMLElement}     [script Element]\n */\nvar getExecutedScript = function () {\n  return (\n    document.currentScript ||\n    (function () {\n      var scripts = document.getElementsByTagName(\"script\");\n      return scripts[scripts.length - 1];\n    })()\n  );\n};\n\n/**\n * Get the props from a host element's data attributes\n * @param  {Element} tag The host element\n * @return {Object}  props object to be passed to the component\n */\nvar collectPropsFromElement = function (element, defaultProps) {\n  if ( defaultProps === void 0 ) defaultProps = {};\n\n  var attrs = element.attributes;\n\n  var props = Object.assign({}, defaultProps);\n\n  // collect from element\n  Object.keys(attrs).forEach(function (key) {\n    if (attrs.hasOwnProperty(key)) {\n      var dataAttrName = attrs[key].name;\n      if (!dataAttrName || typeof dataAttrName !== \"string\") {\n        return false;\n      }\n      var propName = dataAttrName.split(/(data-props?-)/).pop() || '';\n      propName = camelcasize(propName);\n      if (dataAttrName !== propName) {\n        var propValue = attrs[key].nodeValue;\n        props[propName] = propValue;\n      }\n    }\n  });\n\n  // check for child script text/props or application/json\n  [].forEach.call(element.getElementsByTagName('script'), function (scrp) {\n    var propsObj = {};\n    if(scrp.hasAttribute('type')) {\n      if (\n        scrp.getAttribute(\"type\") !== \"text/props\" &&\n        scrp.getAttribute(\"type\") !== \"application/json\"\n      )\n        { return; }\n      try {\n        propsObj = JSON.parse(scrp.innerHTML);\n      } catch(e) {\n        throw new Error(e)\n      }\n      Object.assign(props, propsObj);\n    }\n  });  \n\n  return props;\n};\n\nvar getHabitatSelectorFromClient = function (currentScript) {\n  var scriptTagAttrs = currentScript.attributes;\n  var selector = null;\n  // check for another props attached to the tag\n  Object.keys(scriptTagAttrs).forEach(function (key) {\n    if (scriptTagAttrs.hasOwnProperty(key)) {\n      var dataAttrName = scriptTagAttrs[key].name;\n      if (dataAttrName === 'data-mount-in') {\n        selector = scriptTagAttrs[key].nodeValue;\n      }\n    }\n  });\n  return selector\n};\n\n/**\n * Return array of 0 or more elements that will host our widget\n * @param  {id} attrId the data widget id attribute the host should have\n * @param  {document} scope  Docuemnt object or DOM Element as a scope\n * @return {Array}        Array of matching habitats\n */\nvar widgetDOMHostElements = function (\n  ref\n) {\n  var selector = ref.selector;\n  var inline = ref.inline;\n  var clientSpecified = ref.clientSpecified;\n\n  var hostNodes = [];\n  var currentScript = getExecutedScript();\n\n  if (inline === true) {\n    var parentNode = currentScript.parentNode;\n    hostNodes.push(parentNode);\n  }\n  if (clientSpecified === true && !selector) {\n    // user did not specify where to mount - get it from script tag attributes\n    selector = getHabitatSelectorFromClient(currentScript);\n  }\n  if (selector) {\n    [].forEach.call(document.querySelectorAll(selector), function (queriedTag) {\n      hostNodes.push(queriedTag);\n    });\n  }\n  return hostNodes;\n};\n\n/**\n * preact render function that will be queued if the DOM is not ready\n * and executed immeidatly if DOM is ready\n */\nvar preactRender = function (widget, hostElements, root, cleanRoot, defaultProps) {\n  hostElements.forEach(function (elm) {\n    var hostNode = elm;\n    if (hostNode._habitat) {\n      return; \n    }\n    hostNode._habitat = true;\n    var props = collectPropsFromElement(elm, defaultProps) || defaultProps;\n    if(cleanRoot) {\n      hostNode.innerHTML = \"\";\n    }\n    return render(h(widget, props), hostNode, root);\n  });\n};\n\nvar habitat = function (Widget) {\n  // Widget represents the Preact component we need to mount\n  var widget = Widget;\n  // preact root render helper\n  var root = null;\n\n  var render$$1 = function (\n    ref\n  ) {\n    if ( ref === void 0 ) ref = {};\n    var selector = ref.selector; if ( selector === void 0 ) selector = null;\n    var inline = ref.inline; if ( inline === void 0 ) inline = false;\n    var clean = ref.clean; if ( clean === void 0 ) clean = false;\n    var clientSpecified = ref.clientSpecified; if ( clientSpecified === void 0 ) clientSpecified = false;\n    var defaultProps = ref.defaultProps; if ( defaultProps === void 0 ) defaultProps = {};\n\n    var elements = widgetDOMHostElements({\n      selector: selector,\n      inline: inline,\n      clientSpecified: clientSpecified\n    });\n    var loaded = function () {\n      if (elements.length > 0) {\n        var elements$1 = widgetDOMHostElements({\n          selector: selector,\n          inline: inline,\n          clientSpecified: clientSpecified\n        });\n\n        return preactRender(widget, elements$1, root, clean, defaultProps);\n      }\n    };\n    loaded();\n    document.addEventListener(\"DOMContentLoaded\", loaded);\n    document.addEventListener(\"load\", loaded);\n  };\n\n  return { render: render$$1 };\n};\n\nexport default habitat;\n//# sourceMappingURL=preact-habitat.es.js.map\n","let e={data:\"\"},t=t=>{if(\"undefined\"!=typeof window){let e=t?t.querySelector(\"#_goober\"):window._goober;return e||(e=(t||document.head).appendChild(document.createElement(\"style\")),e.innerHTML=\" \",e.id=\"_goober\"),e.firstChild}return t||e},r=e=>{let r=t(e),l=r.data;return r.data=\"\",l},l=/(?:([A-Z0-9-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(})/gi,a=/\\/\\*[\\s\\S]*?\\*\\/|\\s{2,}|\\n/gm,n=(e,t)=>{let r,l=\"\",a=\"\",o=\"\";for(let c in e){let s=e[c];\"object\"==typeof s?(r=t?t.replace(/([^,])+/g,e=>c.replace(/([^,])+/g,t=>/&/g.test(t)?t.replace(/&/g,e):e?e+\" \"+t:t)):c,a+=\"@\"==c[0]?\"f\"==c[1]?n(s,c):c+\"{\"+n(s,\"k\"==c[1]?\"\":t)+\"}\":n(s,r)):\"@\"==c[0]&&\"i\"==c[1]?l=c+\" \"+s+\";\":o+=n.p?n.p(c.replace(/[A-Z]/g,\"-$&\").toLowerCase(),s):c.replace(/[A-Z]/g,\"-$&\").toLowerCase()+\":\"+s+\";\"}return o[0]?(r=t?t+\"{\"+o+\"}\":o,l+r+a):l+a},o={},c=e=>{let t=\"\";for(let r in e)t+=r+(\"object\"==typeof e[r]?c(e[r]):e[r]);return t},s=(e,t,r,s,i)=>{let p=\"object\"==typeof e?c(e):e,u=o[p]||(o[p]=\"go\"+p.split(\"\").reduce((e,t)=>101*e+t.charCodeAt(0)>>>0,11));if(!o[u]){let t=\"object\"==typeof e?e:(e=>{let t,r=[{}];for(;t=l.exec(e.replace(a,\"\"));)t[4]&&r.shift(),t[3]?r.unshift(r[0][t[3]]=r[0][t[3]]||{}):t[4]||(r[0][t[1]]=t[2]);return r[0]})(e);o[u]=n(i?{[\"@keyframes \"+u]:t}:t,r?\"\":\".\"+u)}return((e,t,r)=>{-1==t.data.indexOf(e)&&(t.data=r?e+t.data:t.data+e)})(o[u],t,s),u},i=(e,t,r)=>e.reduce((e,l,a)=>{let o=t[a];if(o&&o.call){let e=o(r),t=e&&e.props&&e.props.className||/^go/.test(e)&&e;o=t?\".\"+t:e&&\"object\"==typeof e?e.props?\"\":n(e,\"\"):e}return e+l+(null==o?\"\":o)},\"\");function p(e){let r=this||{},l=e.call?e(r.p):e;return s(l.unshift?l.raw?i(l,[].slice.call(arguments,1),r.p):l.reduce((e,t)=>t?Object.assign(e,t.call?t(r.p):t):e,{}):l,t(r.target),r.g,r.o,r.k)}let u,d,f,g=p.bind({g:1}),b=p.bind({k:1});function h(e,t,r,l){n.p=t,u=e,d=r,f=l}function m(e,t){let r=this||{};return function(){let l=arguments;function a(n,o){let c=Object.assign({},n),s=c.className||a.className;r.p=Object.assign({theme:d&&d()},c),r.o=/ *go\\d+/g.test(s),c.className=p.apply(r,l)+(s?\" \"+s:\"\"),t&&(c.ref=o);let i=c.as||e;return f&&i[0]&&f(c),u(i,c)}return t?t(a):a}}export{p as css,r as extractCss,g as glob,b as keyframes,h as setup,m as styled};\n","import{css as n,styled as l}from\"goober\";let o=n.bind({g:1});function r(){const n=l.call({g:1},\"div\").apply(null,arguments);return function(l){return n(l),null}}export{r as createGlobalStyles,o as glob};\n","import{options as r,Fragment as _}from\"preact\";export{Fragment}from\"preact\";function o(_,o,e,n,t){var f={};for(var l in o)\"ref\"!=l&&(f[l]=o[l]);var s,u,a={type:_,props:f,key:e,ref:o&&o.ref,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:++r.__v,__source:n,__self:t};if(\"function\"==typeof _&&(s=_.defaultProps))for(u in s)void 0===f[u]&&(f[u]=s[u]);return r.vnode&&r.vnode(a),a}export{o as jsx,o as jsxs,o as jsxDEV};\n//# sourceMappingURL=jsxRuntime.module.js.map\n","import { createGlobalStyles } from 'goober/global';\nimport tw, { theme, GlobalStyles as BaseStyles } from 'twin.macro';\n\nconst CustomStyles = createGlobalStyles`\n  body {\n    -webkit-tap-highlight-color: ${theme`colors.purple.500`};\n    @font-face {\n      font-family: 'RobotoSlab';\n      src: url('data:font/truetype;charset=utf-8;base64,') format('ttf');\n    }\n    ${tw`antialiased`}\n  }\n`;\n\nconst GlobalStyles = () => (\n  <>\n    <BaseStyles />\n    <CustomStyles />\n  </>\n);\n\nexport default GlobalStyles;","import tw, { styled } from 'twin.macro';\n\nconst RoundedGoldBorder = ({ children, borderWidth = '2px', ...rest }) => {\n\n    const RoundedGoldBorderStyles = styled('div')(({ borderWidth }) => [\n        tw`border-solid border-2 border-widget-gold rounded-full`,\n        { 'border-width': borderWidth }\n    ]);\n\n    return (\n        <RoundedGoldBorderStyles borderWidth={borderWidth} {...rest}>\n            {children}\n        </RoundedGoldBorderStyles>\n    );\n};\n\nexport default RoundedGoldBorder;","import{options as n}from\"preact\";var t,u,r,o=0,i=[],c=n.__b,f=n.__r,e=n.diffed,a=n.__c,v=n.unmount;function m(t,r){n.__h&&n.__h(u,t,o||r),o=0;var i=u.__H||(u.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({}),i.__[t]}function l(n){return o=1,p(w,n)}function p(n,r,o){var i=m(t++,2);return i.t=n,i.__c||(i.__=[o?o(r):w(void 0,r),function(n){var t=i.t(i.__[0],n);i.__[0]!==t&&(i.__=[t,i.__[1]],i.__c.setState({}))}],i.__c=u),i.__}function y(r,o){var i=m(t++,3);!n.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__H.__h.push(i))}function h(r,o){var i=m(t++,4);!n.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__h.push(i))}function s(n){return o=5,d(function(){return{current:n}},[])}function _(n,t,u){o=6,h(function(){\"function\"==typeof n?n(t()):n&&(n.current=t())},null==u?u:u.concat(n))}function d(n,u){var r=m(t++,7);return k(r.__H,u)&&(r.__=n(),r.__H=u,r.__h=n),r.__}function A(n,t){return o=8,d(function(){return n},t)}function F(n){var r=u.context[n.__c],o=m(t++,9);return o.__c=n,r?(null==o.__&&(o.__=!0,r.sub(u)),r.props.value):n.__}function T(t,u){n.useDebugValue&&n.useDebugValue(u?u(t):t)}function q(n){var r=m(t++,10),o=l();return r.__=n,u.componentDidCatch||(u.componentDidCatch=function(n){r.__&&r.__(n),o[1](n)}),[o[0],function(){o[1](void 0)}]}function x(){i.forEach(function(t){if(t.__P)try{t.__H.__h.forEach(g),t.__H.__h.forEach(j),t.__H.__h=[]}catch(u){t.__H.__h=[],n.__e(u,t.__v)}}),i=[]}n.__b=function(n){u=null,c&&c(n)},n.__r=function(n){f&&f(n),t=0;var r=(u=n.__c).__H;r&&(r.__h.forEach(g),r.__h.forEach(j),r.__h=[])},n.diffed=function(t){e&&e(t);var o=t.__c;o&&o.__H&&o.__H.__h.length&&(1!==i.push(o)&&r===n.requestAnimationFrame||((r=n.requestAnimationFrame)||function(n){var t,u=function(){clearTimeout(r),b&&cancelAnimationFrame(t),setTimeout(n)},r=setTimeout(u,100);b&&(t=requestAnimationFrame(u))})(x)),u=void 0},n.__c=function(t,u){u.some(function(t){try{t.__h.forEach(g),t.__h=t.__h.filter(function(n){return!n.__||j(n)})}catch(r){u.some(function(n){n.__h&&(n.__h=[])}),u=[],n.__e(r,t.__v)}}),a&&a(t,u)},n.unmount=function(t){v&&v(t);var u=t.__c;if(u&&u.__H)try{u.__H.__.forEach(g)}catch(t){n.__e(t,u.__v)}};var b=\"function\"==typeof requestAnimationFrame;function g(n){var t=u;\"function\"==typeof n.__c&&n.__c(),u=t}function j(n){var t=u;n.__c=n.__(),u=t}function k(n,t){return!n||n.length!==t.length||t.some(function(t,u){return t!==n[u]})}function w(n,t){return\"function\"==typeof t?t(n):t}export{l as useState,p as useReducer,y as useEffect,h as useLayoutEffect,s as useRef,_ as useImperativeHandle,d as useMemo,A as useCallback,F as useContext,T as useDebugValue,q as useErrorBoundary};\n//# sourceMappingURL=hooks.module.js.map\n","import { useState } from 'preact/hooks';\nimport tw, { styled } from 'twin.macro';\n\nconst Image = ({ src = false, alt, title, width, height, rounded = false, bgColor = true }) => {\n\n    const [loading, setLoading] = useState(true);\n\n    const setLoadingFalse = () => {\n        if (src && loading) {\n            setLoading(false);\n        }\n    };\n\n    const ImageLoadingStyles = styled.div(({ rounded }) => [\n        tw`flex bg-widget-gold-light animate-pulse`,\n        rounded === true && tw`rounded-full`,\n        { 'width': `${width}px`, 'height': `${height}px` },\n        !loading && { 'display': 'none' },\n    ]);\n\n    const ImageStyles = styled.img(({ rounded }) => [\n        tw`flex`,\n        bgColor === true && tw`bg-widget-gold-light`,\n        rounded === true && tw`rounded-full`,\n        loading && { 'object-position': '-99999px 99999px' },\n    ]);\n\n    return (\n        <>\n            <ImageLoadingStyles rounded={rounded} />\n            {src && (\n                <ImageStyles src={src} alt={alt} title={title} width={width} height={height} rounded={rounded} onLoad={setLoadingFalse} />\n            )}\n        </>\n    );\n};\n\nexport default Image;","function l(a, b) {\n  b.tag = a;\n  return b;\n}\n\nfunction m() {}\n\nfunction p(a) {\n  return function (b) {\n    var c = a.length;\n    let d = !1,\n      e = !1,\n      f = !1,\n      g = 0;\n    b(\n      l(0, [\n        function (h) {\n          if (h) {\n            d = !0;\n          } else if (e) {\n            f = !0;\n          } else {\n            for (e = f = !0; f && !d; ) {\n              g < c ? ((h = a[g]), (g = (g + 1) | 0), (f = !1), b(l(1, [h]))) : ((d = !0), b(0));\n            }\n            e = !1;\n          }\n        },\n      ])\n    );\n  };\n}\n\nfunction r() {}\n\nfunction t(a) {\n  a(0);\n}\n\nfunction u(a) {\n  let b = !1;\n  a(\n    l(0, [\n      function (c) {\n        c ? (b = !0) : b || a(0);\n      },\n    ])\n  );\n}\n\nfunction w(a) {\n  if (void 0 === a) {\n    return ((a = [v, 0]).tag = 256), a;\n  }\n  if (null === a || a[0] !== v) {\n    return a;\n  }\n  (a = [v, (a[1] + 1) | 0]).tag = 256;\n  return a;\n}\n\nfunction x(a) {\n  if (null === a || a[0] !== v) {\n    return a;\n  }\n  if (0 !== (a = a[1])) {\n    return [v, (a - 1) | 0];\n  }\n}\n\nfunction z(a) {\n  return function (b) {\n    return function (c) {\n      function d(b) {\n        'number' == typeof b\n          ? k &&\n            ((k = !1),\n            void 0 !== (b = e.shift())\n              ? ((b = a(x(b))), (k = !0), b(d))\n              : q\n              ? c(0)\n              : g || ((g = !0), f(0)))\n          : b.tag\n          ? k && (c(b), n ? (n = !1) : h(0))\n          : ((h = b = b[0]), (n = !1), b(0));\n      }\n      let e = [],\n        f = m,\n        g = !1,\n        h = m,\n        k = !1,\n        n = !1,\n        q = !1;\n      b(function (b) {\n        'number' == typeof b\n          ? q || ((q = !0), k || 0 !== e.length || c(0))\n          : b.tag\n          ? q || ((b = b[0]), (g = !1), k ? e.push(b) : ((b = a(b)), (k = !0), b(d)))\n          : (f = b[0]);\n      });\n      c(\n        l(0, [\n          function (c) {\n            if (c) {\n              if ((q || ((q = !0), f(1)), k)) {\n                return (k = !1), h(1);\n              }\n            } else {\n              q || g || ((g = !0), f(0)), k && !n && ((n = !0), h(0));\n            }\n          },\n        ])\n      );\n    };\n  };\n}\n\nfunction A(a) {\n  return a;\n}\n\nfunction B(a) {\n  return a;\n}\n\nfunction C(a) {\n  return a(0);\n}\n\nfunction D(a) {\n  return function (b) {\n    return function (c) {\n      let e = m,\n        f = !1,\n        g = [],\n        h = !1;\n      b(function (b) {\n        'number' == typeof b\n          ? h || ((h = !0), 0 === g.length && c(0))\n          : b.tag\n          ? h ||\n            ((f = !1),\n            (function (a) {\n              function b(a) {\n                'number' == typeof a\n                  ? 0 !== g.length &&\n                    ((g = g.filter(d)),\n                    (a = 0 === g.length),\n                    h && a ? c(0) : !f && a && ((f = !0), e(0)))\n                  : a.tag\n                  ? 0 !== g.length && (c(l(1, [a[0]])), k(0))\n                  : ((k = a = a[0]), (g = g.concat(a)), a(0));\n              }\n              function d(a) {\n                return a !== k;\n              }\n              let k = m;\n              1 === a.length ? a(b) : a.bind(null, b);\n            })(a(b[0])),\n            f || ((f = !0), e(0)))\n          : (e = b[0]);\n      });\n      c(\n        l(0, [\n          function (a) {\n            a\n              ? (h || ((h = !0), e(a)),\n                g.forEach(function (c) {\n                  return c(a);\n                }),\n                (g = []))\n              : (f || h ? (f = !1) : ((f = !0), e(0)), g.forEach(C));\n          },\n        ])\n      );\n    };\n  };\n}\n\nfunction E(a) {\n  return a;\n}\n\nfunction F(a) {\n  return a;\n}\n\nfunction G(a) {\n  return D(F)(a);\n}\n\nfunction H(a) {\n  return function (b) {\n    return function (c) {\n      let d = !1;\n      return b(function (e) {\n        if ('number' == typeof e) {\n          d || ((d = !0), c(e));\n        } else if (e.tag) {\n          d || (a(e[0]), c(e));\n        } else {\n          var g = e[0];\n          c(\n            l(0, [\n              function (a) {\n                if (!d) {\n                  return a && (d = !0), g(a);\n                }\n              },\n            ])\n          );\n        }\n      });\n    };\n  };\n}\n\nfunction J(a) {\n  a(0);\n}\n\nfunction K(a) {\n  return function (b) {\n    return function (c) {\n      function d(a) {\n        h &&\n          ('number' == typeof a\n            ? ((h = !1), n ? c(a) : f || ((f = !0), e(0)))\n            : a.tag\n            ? (c(a), k ? (k = !1) : g(0))\n            : ((g = a = a[0]), (k = !1), a(0)));\n      }\n      let e = m,\n        f = !1,\n        g = m,\n        h = !1,\n        k = !1,\n        n = !1;\n      b(function (b) {\n        'number' == typeof b\n          ? n || ((n = !0), h || c(0))\n          : b.tag\n          ? n ||\n            (h && (g(1), (g = m)), f ? (f = !1) : ((f = !0), e(0)), (b = a(b[0])), (h = !0), b(d))\n          : (e = b[0]);\n      });\n      c(\n        l(0, [\n          function (a) {\n            if (a) {\n              if ((n || ((n = !0), e(1)), h)) {\n                return (h = !1), g(1);\n              }\n            } else {\n              n || f || ((f = !0), e(0)), h && !k && ((k = !0), g(0));\n            }\n          },\n        ])\n      );\n    };\n  };\n}\n\nfunction L(a) {\n  return a;\n}\n\nfunction M(a) {\n  return function (b) {\n    return function (c) {\n      let d = [],\n        e = m;\n      return b(function (b) {\n        'number' == typeof b\n          ? p(d)(c)\n          : b.tag\n          ? (d.length >= a && 0 < a && d.shift(), d.push(b[0]), e(0))\n          : ((b = b[0]), 0 >= a ? (b(1), u(c)) : ((e = b), b(0)));\n      });\n    };\n  };\n}\n\nfunction N(a) {\n  return function (b) {\n    let c = m,\n      d = !1;\n    b(function (e) {\n      'number' == typeof e ? (d = !0) : e.tag ? d || (a(e[0]), c(0)) : ((c = e = e[0]), e(0));\n    });\n    return {\n      unsubscribe: function () {\n        if (!d) {\n          return (d = !0), c(1);\n        }\n      },\n    };\n  };\n}\n\nfunction O() {}\n\nfunction Q() {}\n\nfunction R() {}\n\nfunction S() {}\n\nfunction buffer$1(a) {\n  return function (b) {\n    return function (c) {\n      function d(a) {\n        'number' == typeof a\n          ? k || ((k = !0), f(1), 0 < e.length && c(l(1, [e])), c(0))\n          : a.tag\n          ? !k && 0 < e.length && ((a = e), (e = []), c(l(1, [a])))\n          : (g = a[0]);\n      }\n      let e = [],\n        f = m,\n        g = m,\n        h = !1,\n        k = !1;\n      b(function (b) {\n        'number' == typeof b\n          ? k || ((k = !0), g(1), 0 < e.length && c(l(1, [e])), c(0))\n          : b.tag\n          ? k || (e.push(b[0]), h ? (h = !1) : ((h = !0), f(0), g(0)))\n          : ((f = b[0]), a(d));\n      });\n      c(\n        l(0, [\n          function (a) {\n            if (!k) {\n              if (a) {\n                return (k = !0), f(1), g(1);\n              }\n              if (!h) {\n                return (h = !0), f(0), g(0);\n              }\n            }\n          },\n        ])\n      );\n    };\n  };\n}\n\nfunction combine$1(a, b) {\n  return (function (a, b) {\n    return function (c) {\n      let d = m,\n        e = m,\n        f = void 0,\n        g = void 0,\n        h = !1,\n        k = 0,\n        n = !1;\n      a(function (a) {\n        var b = g;\n        'number' == typeof a\n          ? 1 > k\n            ? (k = (k + 1) | 0)\n            : n || ((n = !0), c(0))\n          : a.tag\n          ? ((a = a[0]),\n            void 0 !== b\n              ? n || ((f = w(a)), (h = !1), c(l(1, [[a, x(b)]])))\n              : ((f = w(a)), h ? (h = !1) : e(0)))\n          : (d = a[0]);\n      });\n      b(function (a) {\n        var b = f;\n        'number' == typeof a\n          ? 1 > k\n            ? (k = (k + 1) | 0)\n            : n || ((n = !0), c(0))\n          : a.tag\n          ? ((a = a[0]),\n            void 0 !== b\n              ? n || ((g = w(a)), (h = !1), c(l(1, [[x(b), a]])))\n              : ((g = w(a)), h ? (h = !1) : d(0)))\n          : (e = a[0]);\n      });\n      c(\n        l(0, [\n          function (c) {\n            if (!n) {\n              if (c) {\n                return (n = !0), d(1), e(1);\n              }\n              if (!h) {\n                return (h = !0), d(c), e(c);\n              }\n            }\n          },\n        ])\n      );\n    };\n  })(a, b);\n}\n\nfunction concat$1(a) {\n  return z(B)(p(a));\n}\n\nfunction concatAll$1(a) {\n  return z(A)(a);\n}\n\nfunction debounce$1(a) {\n  return function (b) {\n    return function (c) {\n      function d() {\n        var a = e;\n        void 0 !== a && ((e = void 0), clearTimeout(x(a)));\n      }\n      let e = void 0,\n        f = !1,\n        g = !1;\n      return b(function (b) {\n        if ('number' == typeof b) {\n          g || ((g = !0), void 0 !== e ? (f = !0) : c(0));\n        } else if (b.tag) {\n          g ||\n            (d(),\n            (e = w(\n              setTimeout(function () {\n                e = void 0;\n                c(b);\n                f && c(0);\n              }, a(b[0]))\n            )));\n        } else {\n          var n = b[0];\n          c(\n            l(0, [\n              function (a) {\n                if (!g) {\n                  return a ? ((g = !0), (f = !1), d(), n(1)) : n(0);\n                }\n              },\n            ])\n          );\n        }\n      });\n    };\n  };\n}\n\nfunction delay$1(a) {\n  return function (b) {\n    return function (c) {\n      let d = 0;\n      return b(function (b) {\n        'number' == typeof b || b.tag\n          ? ((d = (d + 1) | 0),\n            setTimeout(function () {\n              0 !== d && ((d = (d - 1) | 0), c(b));\n            }, a))\n          : c(b);\n      });\n    };\n  };\n}\n\nfunction filter$1(a) {\n  return function (b) {\n    return function (c) {\n      let d = m;\n      return b(function (b) {\n        'number' == typeof b ? c(b) : b.tag ? (a(b[0]) ? c(b) : d(0)) : ((d = b[0]), c(b));\n      });\n    };\n  };\n}\n\nfunction forEach$1(a) {\n  return function (b) {\n    N(a)(b);\n  };\n}\n\nfunction fromCallbag$2(a) {\n  return function (b) {\n    function c(a, c) {\n      switch (a) {\n        case 0:\n          b(\n            l(0, [\n              function (a) {\n                return a ? c(2) : c(1);\n              },\n            ])\n          );\n          break;\n\n        case 1:\n          b(l(1, [c]));\n          break;\n\n        case 2:\n          b(0);\n      }\n    }\n    return 2 === a.length ? a(0, c) : a.bind(null, 0, c);\n  };\n}\n\nfunction fromDomEvent$1(a, b) {\n  return (function (a, b) {\n    return function (c) {\n      function d(a) {\n        c(l(1, [a]));\n      }\n      c(\n        l(0, [\n          function (c) {\n            c && a.removeEventListener(b, d);\n          },\n        ])\n      );\n      a.addEventListener(b, d);\n    };\n  })(a, b);\n}\n\nfunction fromList$1(a) {\n  return function (b) {\n    let c = !1,\n      d = !1,\n      e = !1,\n      f = a;\n    b(\n      l(0, [\n        function (a) {\n          if (a) {\n            c = !0;\n          } else if (d) {\n            e = !0;\n          } else {\n            for (d = e = !0; e && !c; ) {\n              (a = f) ? ((f = a[1]), (e = !1), b(l(1, [a[0]]))) : ((c = !0), b(0));\n            }\n            d = !1;\n          }\n        },\n      ])\n    );\n  };\n}\n\nfunction fromObservable$2(a) {\n  var b = void 0 !== a[P] ? a[P]() : a;\n  return function (a) {\n    var c = b.subscribe({\n      next: function (c) {\n        a(l(1, [c]));\n      },\n      complete: function () {\n        a(0);\n      },\n      error: Q,\n    });\n    a(\n      l(0, [\n        function (a) {\n          if (a) {\n            return c.unsubscribe();\n          }\n        },\n      ])\n    );\n  };\n}\n\nfunction fromPromise$1(a) {\n  return function (b) {\n    let c = !1;\n    a.then(function (a) {\n      c || (b(l(1, [a])), b(0));\n      return Promise.resolve(void 0);\n    });\n    b(\n      l(0, [\n        function (a) {\n          a && (c = !0);\n        },\n      ])\n    );\n  };\n}\n\nfunction fromValue$1(a) {\n  return function (b) {\n    let c = !1;\n    b(\n      l(0, [\n        function (d) {\n          d ? (c = !0) : c || ((c = !0), b(l(1, [a])), b(0));\n        },\n      ])\n    );\n  };\n}\n\nfunction interval$1(a) {\n  return function (b) {\n    let c = 0;\n    var d = setInterval(function () {\n      var a = c;\n      c = (c + 1) | 0;\n      b(l(1, [a]));\n    }, a);\n    b(\n      l(0, [\n        function (a) {\n          a && clearInterval(d);\n        },\n      ])\n    );\n  };\n}\n\nfunction make$1(a) {\n  return function (b) {\n    let c = r,\n      d = !1;\n    c = a({\n      next: function (a) {\n        d || b(l(1, [a]));\n      },\n      complete: function () {\n        d || ((d = !0), b(0));\n      },\n    });\n    b(\n      l(0, [\n        function (a) {\n          if (a && !d) {\n            return (d = !0), c();\n          }\n        },\n      ])\n    );\n  };\n}\n\nfunction makeSubject$1() {\n  let a = [],\n    b = !1;\n  return {\n    source: function (c) {\n      function b(a) {\n        return a !== c;\n      }\n      a = a.concat(c);\n      c(\n        l(0, [\n          function (c) {\n            c && (a = a.filter(b));\n          },\n        ])\n      );\n    },\n    next: function (c) {\n      b ||\n        a.forEach(function (a) {\n          a(l(1, [c]));\n        });\n    },\n    complete: function () {\n      b || ((b = !0), a.forEach(t));\n    },\n  };\n}\n\nfunction map$1(a) {\n  return function (b) {\n    return function (c) {\n      return b(function (b) {\n        b = 'number' == typeof b ? 0 : b.tag ? l(1, [a(b[0])]) : l(0, [b[0]]);\n        c(b);\n      });\n    };\n  };\n}\n\nfunction merge$1(a) {\n  return D(E)(p(a));\n}\n\nfunction never$1(a) {\n  a(l(0, [m]));\n}\n\nfunction onEnd$1(a) {\n  return function (b) {\n    return function (c) {\n      let d = !1;\n      return b(function (b) {\n        if ('number' == typeof b) {\n          if (d) {\n            return;\n          }\n          d = !0;\n          c(b);\n          return a();\n        }\n        if (b.tag) {\n          d || c(b);\n        } else {\n          var e = b[0];\n          c(\n            l(0, [\n              function (c) {\n                if (!d) {\n                  return c ? ((d = !0), e(c), a()) : e(c);\n                }\n              },\n            ])\n          );\n        }\n      });\n    };\n  };\n}\n\nfunction onStart$1(a) {\n  return function (b) {\n    return function (c) {\n      return b(function (b) {\n        'number' == typeof b ? c(b) : b.tag ? c(b) : (c(b), a());\n      });\n    };\n  };\n}\n\nfunction pipe() {\n  for (var a = arguments, b = arguments[0], c = 1, d = arguments.length; c < d; c++) {\n    b = a[c](b);\n  }\n  return b;\n}\n\nfunction publish$1(a) {\n  return N(O)(a);\n}\n\nfunction sample$1(a) {\n  return function (b) {\n    return function (c) {\n      let d = m,\n        e = m,\n        f = void 0,\n        g = !1,\n        h = !1;\n      b(function (a) {\n        'number' == typeof a\n          ? h || ((h = !0), e(1), c(0))\n          : a.tag\n          ? ((f = w(a[0])), g ? (g = !1) : ((g = !0), e(0), d(0)))\n          : (d = a[0]);\n      });\n      a(function (a) {\n        var b = f;\n        'number' == typeof a\n          ? h || ((h = !0), d(1), c(0))\n          : a.tag\n          ? void 0 === b || h || ((f = void 0), c(l(1, [x(b)])))\n          : (e = a[0]);\n      });\n      c(\n        l(0, [\n          function (a) {\n            if (!h) {\n              if (a) {\n                return (h = !0), d(1), e(1);\n              }\n              if (!g) {\n                return (g = !0), d(0), e(0);\n              }\n            }\n          },\n        ])\n      );\n    };\n  };\n}\n\nfunction scan$1(a, b) {\n  return (function (a, b) {\n    return function (c) {\n      return function (d) {\n        let e = b;\n        return c(function (c) {\n          'number' == typeof c\n            ? (c = 0)\n            : c.tag\n            ? ((e = a(e, c[0])), (c = l(1, [e])))\n            : (c = l(0, [c[0]]));\n          d(c);\n        });\n      };\n    };\n  })(a, b);\n}\n\nfunction share$1(a) {\n  function b(a) {\n    'number' == typeof a\n      ? (c.forEach(J), (c = []))\n      : a.tag\n      ? ((e = !1),\n        c.forEach(function (b) {\n          b(a);\n        }))\n      : (d = a[0]);\n  }\n  let c = [],\n    d = m,\n    e = !1;\n  return function (f) {\n    function g(a) {\n      return a !== f;\n    }\n    c = c.concat(f);\n    1 === c.length && a(b);\n    f(\n      l(0, [\n        function (a) {\n          if (a) {\n            if (((c = c.filter(g)), 0 === c.length)) {\n              return d(1);\n            }\n          } else {\n            e || ((e = !0), d(a));\n          }\n        },\n      ])\n    );\n  };\n}\n\nfunction skip$1(a) {\n  return function (b) {\n    return function (c) {\n      let d = m,\n        e = a;\n      return b(function (a) {\n        'number' == typeof a\n          ? c(a)\n          : a.tag\n          ? 0 < e\n            ? ((e = (e - 1) | 0), d(0))\n            : c(a)\n          : ((d = a[0]), c(a));\n      });\n    };\n  };\n}\n\nfunction skipUntil$1(a) {\n  return function (b) {\n    return function (c) {\n      function d(a) {\n        'number' == typeof a\n          ? g && ((k = !0), e(1))\n          : a.tag\n          ? ((g = !1), f(1))\n          : ((f = a = a[0]), a(0));\n      }\n      let e = m,\n        f = m,\n        g = !0,\n        h = !1,\n        k = !1;\n      b(function (b) {\n        'number' == typeof b\n          ? (g && f(1), (k = !0), c(0))\n          : b.tag\n          ? g || k\n            ? h\n              ? (h = !1)\n              : ((h = !0), e(0), f(0))\n            : ((h = !1), c(b))\n          : ((e = b[0]), a(d));\n      });\n      c(\n        l(0, [\n          function (a) {\n            if (!k) {\n              if (a) {\n                if (((k = !0), e(1), g)) {\n                  return f(1);\n                }\n              } else {\n                h || ((h = !0), g && f(0), e(0));\n              }\n            }\n          },\n        ])\n      );\n    };\n  };\n}\n\nfunction skipWhile$1(a) {\n  return function (b) {\n    return function (c) {\n      let d = m,\n        e = !0;\n      return b(function (b) {\n        'number' == typeof b\n          ? c(b)\n          : b.tag\n          ? e\n            ? a(b[0])\n              ? d(0)\n              : ((e = !1), c(b))\n            : c(b)\n          : ((d = b[0]), c(b));\n      });\n    };\n  };\n}\n\nfunction switchAll$1(a) {\n  return K(L)(a);\n}\n\nfunction take$1(a) {\n  return function (b) {\n    return function (c) {\n      let d = !1,\n        e = 0,\n        f = m;\n      b(function (b) {\n        'number' == typeof b\n          ? d || ((d = !0), c(0))\n          : b.tag\n          ? e < a && !d && ((e = (e + 1) | 0), c(b), !d && e >= a && ((d = !0), c(0), f(1)))\n          : ((b = b[0]), 0 >= a ? ((d = !0), c(0), b(1)) : (f = b));\n      });\n      c(\n        l(0, [\n          function (b) {\n            if (!d) {\n              if (b) {\n                return (d = !0), f(1);\n              }\n              if (e < a) {\n                return f(0);\n              }\n            }\n          },\n        ])\n      );\n    };\n  };\n}\n\nfunction takeUntil$1(a) {\n  return function (b) {\n    return function (c) {\n      function d(a) {\n        'number' != typeof a && (a.tag ? ((e = !0), f(1), c(0)) : ((g = a = a[0]), a(0)));\n      }\n      let e = !1,\n        f = m,\n        g = m;\n      b(function (b) {\n        'number' == typeof b ? e || ((e = !0), g(1), c(0)) : b.tag ? e || c(b) : ((f = b[0]), a(d));\n      });\n      c(\n        l(0, [\n          function (a) {\n            if (!e) {\n              return a ? ((e = !0), f(1), g(1)) : f(0);\n            }\n          },\n        ])\n      );\n    };\n  };\n}\n\nfunction takeWhile$1(a) {\n  return function (b) {\n    return function (c) {\n      let d = m,\n        e = !1;\n      return b(function (b) {\n        'number' == typeof b\n          ? e || ((e = !0), c(0))\n          : b.tag\n          ? e || (a(b[0]) ? c(b) : ((e = !0), c(0), d(1)))\n          : ((d = b[0]), c(b));\n      });\n    };\n  };\n}\n\nfunction throttle$1(a) {\n  return function (b) {\n    return function (c) {\n      function d() {\n        void 0 !== g && clearTimeout(x(g));\n      }\n      function e() {\n        g = void 0;\n        f = !1;\n      }\n      let f = !1,\n        g = void 0;\n      return b(function (b) {\n        if ('number' == typeof b) {\n          d(), c(0);\n        } else if (b.tag) {\n          f || ((f = !0), d(), (g = w(setTimeout(e, a(b[0])))), c(b));\n        } else {\n          var h = b[0];\n          c(\n            l(0, [\n              function (a) {\n                return a ? (d(), h(1)) : h(a);\n              },\n            ])\n          );\n        }\n      });\n    };\n  };\n}\n\nfunction toArray$1(a) {\n  let b = [],\n    c = m,\n    d = !1;\n  a(function (a) {\n    'number' == typeof a ? (d = !0) : a.tag ? (b.push(a[0]), c(0)) : ((c = a = a[0]), a(0));\n  });\n  d || c(1);\n  return b;\n}\n\nfunction toCallbag$2(a) {\n  return function (b, c) {\n    if (0 === b) {\n      return a(function (a) {\n        function b(a) {\n          switch (a) {\n            case 1:\n              d(0);\n              break;\n\n            case 2:\n              d(1);\n          }\n        }\n        if ('number' == typeof a) {\n          return 2 === c.length ? c(2, void 0) : c.bind(null, 2, void 0);\n        }\n        if (a.tag) {\n          return (a = a[0]), 2 === c.length ? c(1, a) : c.bind(null, 1, a);\n        }\n        var d = a[0];\n        return 2 === c.length ? c(0, b) : c.bind(null, 0, b);\n      });\n    }\n  };\n}\n\nfunction toObservable$2(a) {\n  var b = {\n    subscribe: function (b, d, e) {\n      var c = ('object' == typeof b ? b.next.bind(b) : b) || R,\n        g = ('object' == typeof b ? b.complete.bind(b) : e) || S;\n      let h = m,\n        k = !1;\n      a(function (a) {\n        if ('number' == typeof a) {\n          return (k = !0), g();\n        }\n        if (a.tag) {\n          if (k) {\n            return;\n          }\n          c(a[0]);\n          return h(0);\n        }\n        h = a = a[0];\n        a(0);\n      });\n      return {\n        unsubscribe: function () {\n          if (!k) {\n            return (this.closed = !1), (k = !0), h(1);\n          }\n        },\n        closed: !1,\n      };\n    },\n  };\n  b[P] = function () {\n    return b;\n  };\n  return b;\n}\n\nfunction toPromise$1(a) {\n  return new Promise(function (b) {\n    M(1)(a)(function (a) {\n      if ('number' != typeof a) {\n        if (a.tag) {\n          b(a[0]);\n        } else {\n          a[0](0);\n        }\n      }\n    });\n  });\n}\n\nvar v = [],\n  P =\n    'function' == typeof Symbol\n      ? Symbol.observable || (Symbol.observable = Symbol('observable'))\n      : '@@observable';\n\nexport {\n  buffer$1 as buffer,\n  combine$1 as combine,\n  concat$1 as concat,\n  concatAll$1 as concatAll,\n  z as concatMap,\n  debounce$1 as debounce,\n  delay$1 as delay,\n  u as empty,\n  filter$1 as filter,\n  G as flatten,\n  forEach$1 as forEach,\n  p as fromArray,\n  fromCallbag$2 as fromCallbag,\n  fromDomEvent$1 as fromDomEvent,\n  fromList$1 as fromList,\n  fromObservable$2 as fromObservable,\n  fromPromise$1 as fromPromise,\n  fromValue$1 as fromValue,\n  interval$1 as interval,\n  make$1 as make,\n  makeSubject$1 as makeSubject,\n  map$1 as map,\n  merge$1 as merge,\n  G as mergeAll,\n  D as mergeMap,\n  never$1 as never,\n  onEnd$1 as onEnd,\n  H as onPush,\n  onStart$1 as onStart,\n  pipe,\n  publish$1 as publish,\n  sample$1 as sample,\n  scan$1 as scan,\n  share$1 as share,\n  skip$1 as skip,\n  skipUntil$1 as skipUntil,\n  skipWhile$1 as skipWhile,\n  N as subscribe,\n  switchAll$1 as switchAll,\n  K as switchMap,\n  take$1 as take,\n  M as takeLast,\n  takeUntil$1 as takeUntil,\n  takeWhile$1 as takeWhile,\n  H as tap,\n  throttle$1 as throttle,\n  toArray$1 as toArray,\n  toCallbag$2 as toCallbag,\n  toObservable$2 as toObservable,\n  toPromise$1 as toPromise,\n};\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' && Symbol.iterator != null ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = typeof Symbol === 'function' && Symbol.asyncIterator != null ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = typeof Symbol === 'function' && Symbol.toStringTag != null ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || devAssert(0, \"Body must be a string. Received: \".concat(inspect(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nexport function getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n","function k(a) {\n  return \"string\" == typeof a ? new GraphQLError(a) : \"object\" == typeof a && a.message ? new GraphQLError(a.message, a.nodes, a.source, a.positions, a.path, a, a.extensions || {}) : a;\n}\n\nfunction l() {\n  return this.message;\n}\n\nfunction n(a, b) {\n  a |= 0;\n  for (var c = 0, d = 0 | b.length; c < d; c++) {\n    a = (a << 5) + a + b.charCodeAt(c);\n  }\n  return a;\n}\n\nfunction t(a) {\n  var b, c, d, e, f, g;\n  if (null === a || q.has(a)) {\n    return \"null\";\n  }\n  if (\"object\" != typeof a) {\n    return JSON.stringify(a) || \"\";\n  }\n  if (a.toJSON) {\n    return t(a.toJSON());\n  }\n  if (Array.isArray(a)) {\n    for (b = \"[\", c = 0, d = a.length; c < d; c++) {\n      0 < c && (b += \",\");\n      b += 0 < (e = t(a[c])).length ? e : \"null\";\n    }\n    return b + \"]\";\n  }\n  if (!(b = Object.keys(a).sort()).length && a.constructor && a.constructor !== Object) {\n    return b = r.get(a) || Math.random().toString(36).slice(2), r.set(a, b), '{\"__key\":\"' + b + '\"}';\n  }\n  q.add(a);\n  c = \"{\";\n  d = 0;\n  for (e = b.length; d < e; d++) {\n    (g = t(a[f = b[d]])) && (1 < c.length && (c += \",\"), c += t(f) + \":\" + g);\n  }\n  q.delete(a);\n  return c + \"}\";\n}\n\nfunction u(a) {\n  q.clear();\n  return t(a);\n}\n\nfunction v(a) {\n  var b = (\"string\" != typeof a ? a.loc && a.loc.source.body || print(a) : a).replace(/([\\s,]|#[^\\n\\r]+)+/g, \" \").trim();\n  \"string\" != typeof a && (a.loc ? (a = \"definitions\" in a && w(a)) && (b = \"# \" + a + \"\\n\" + b) : a.loc = {\n    start: 0,\n    end: b.length,\n    source: {\n      body: b,\n      name: \"gql\",\n      locationOffset: {\n        line: 1,\n        column: 1\n      }\n    }\n  });\n  return b;\n}\n\nfunction y(a) {\n  if (\"string\" == typeof a) {\n    var b = n(5381, v(a)) >>> 0;\n    a = x.get(b) || parse(a, {\n      noLocation: !0\n    });\n  } else {\n    b = a.__key || n(5381, v(a)) >>> 0, a = x.get(b) || a;\n  }\n  a.loc || v(a);\n  a.__key = b;\n  x.set(b, a);\n  return a;\n}\n\nfunction w(a) {\n  var b, c, d;\n  for (b = 0, c = a.definitions.length; b < c; b++) {\n    if ((d = a.definitions[b]).kind === Kind.OPERATION_DEFINITION && d.name) {\n      return d.name.value;\n    }\n  }\n}\n\nfunction z(a, b, c) {\n  return {\n    operation: a,\n    data: b.data,\n    error: Array.isArray(b.errors) ? new m({\n      graphQLErrors: b.errors,\n      response: c\n    }) : void 0,\n    extensions: \"object\" == typeof b.extensions && b.extensions || void 0\n  };\n}\n\nfunction A(a, b, c) {\n  return {\n    operation: a,\n    data: void 0,\n    error: new m({\n      networkError: b,\n      response: c\n    }),\n    extensions: void 0\n  };\n}\n\nfunction B() {\n  return (B = Object.assign || function(a) {\n    var b, c, d;\n    for (b = 1; b < arguments.length; b++) {\n      c = arguments[b];\n      for (d in c) {\n        Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d]);\n      }\n    }\n    return a;\n  }).apply(this, arguments);\n}\n\nfunction makeFetchBody(a) {\n  return {\n    query: print(a.query),\n    operationName: w(a.query),\n    variables: a.variables || void 0,\n    extensions: void 0\n  };\n}\n\nfunction makeFetchURL(a, b) {\n  var c = a.context.url;\n  if (\"query\" !== a.kind || !a.context.preferGetMethod || !b) {\n    return c;\n  }\n  a = [];\n  b.operationName && a.push(\"operationName=\" + encodeURIComponent(b.operationName));\n  b.query && a.push(\"query=\" + encodeURIComponent(b.query.replace(/([\\s,]|#[^\\n\\r]+)+/g, \" \").trim()));\n  b.variables && a.push(\"variables=\" + encodeURIComponent(u(b.variables)));\n  b.extensions && a.push(\"extensions=\" + encodeURIComponent(u(b.extensions)));\n  return c + \"?\" + a.join(\"&\");\n}\n\nfunction makeFetchOptions(a, b) {\n  var c = \"query\" === a.kind && !!a.context.preferGetMethod;\n  return B({}, a = \"function\" == typeof a.context.fetchOptions ? a.context.fetchOptions() : a.context.fetchOptions || {}, {\n    body: !c && b ? JSON.stringify(b) : void 0,\n    method: c ? \"GET\" : \"POST\",\n    headers: c ? a.headers : B({}, {\n      \"content-type\": \"application/json\"\n    }, a.headers)\n  });\n}\n\nfunction makeFetchSource(a, b, c) {\n  return make((function(d) {\n    var e = d.next, f = d.complete, g = \"undefined\" != typeof AbortController ? new AbortController : null, p = !1;\n    Promise.resolve().then((function() {\n      if (!p) {\n        return g && (c.signal = g.signal), function C(a, b, c) {\n          var e, d = !1;\n          return (a.context.fetch || fetch)(b, c).then((function(a) {\n            e = a;\n            d = 200 > a.status || a.status >= (\"manual\" === c.redirect ? 400 : 300);\n            return a.json();\n          })).then((function(b) {\n            if (!(\"data\" in b) && !(\"errors\" in b)) {\n              throw Error(\"No Content\");\n            }\n            return z(a, b, e);\n          })).catch((function(b) {\n            if (\"AbortError\" !== b.name) {\n              return A(a, d ? Error(e.statusText) : b, e);\n            }\n          }));\n        }(a, b, c);\n      }\n    })).then((function(a) {\n      p || (p = !0, a && e(a), f());\n    }));\n    return function() {\n      p = !0;\n      g && g.abort();\n    };\n  }));\n}\n\nfunction createRequest(a, b) {\n  a = y(a);\n  return {\n    key: b ? n(a.__key, u(b)) >>> 0 : a.__key,\n    query: a,\n    variables: b || {}\n  };\n}\n\nvar m, q, r, x;\n\nimport { make } from \"wonka\";\n\nimport { GraphQLError } from \"graphql/error/GraphQLError.mjs\";\n\nimport { Kind } from \"graphql/language/kinds.mjs\";\n\nimport { parse } from \"graphql/language/parser.mjs\";\n\nimport { print } from \"graphql/language/printer.mjs\";\n\nm = function(a) {\n  function b(b) {\n    var f, c = b.networkError, e = b.response;\n    f = function h(a, b) {\n      var d = \"\";\n      if (void 0 !== a) {\n        return d = \"[Network] \" + a.message;\n      }\n      void 0 !== b && b.forEach((function c(a) {\n        d += \"[GraphQL] \" + a.message + \"\\n\";\n      }));\n      return d.trim();\n    }(c, b = (b.graphQLErrors || []).map(k));\n    a.call(this, f);\n    this.name = \"CombinedError\";\n    this.message = f;\n    this.graphQLErrors = b;\n    this.networkError = c;\n    this.response = e;\n  }\n  a && (b.__proto__ = a);\n  (b.prototype = Object.create(a && a.prototype)).constructor = b;\n  b.prototype.toString = l;\n  return b;\n}(Error);\n\nq = new Set, r = new WeakMap;\n\nx = new Map;\n\nexport { m as C, B as _, A as a, makeFetchBody as b, makeFetchURL as c, makeFetchOptions as d, makeFetchSource as e, createRequest as f, u as g, w as h, y as k, z as m, v as s };\n//# sourceMappingURL=2c01d8b2.mjs.map\n","function n(a, b) {\n  if (Array.isArray(a)) {\n    for (var c = 0; c < a.length; c++) {\n      n(a[c], b);\n    }\n  } else if (\"object\" == typeof a && null !== a) {\n    for (c in a) {\n      \"__typename\" === c && \"string\" == typeof a[c] ? b[a[c]] = 0 : n(a[c], b);\n    }\n  }\n  return b;\n}\n\nfunction p(a) {\n  return a.kind === Kind.FIELD && \"__typename\" === a.name.value && !a.alias;\n}\n\nfunction r(a) {\n  if (a.selectionSet && !a.selectionSet.selections.some(p)) {\n    return _extends({}, a, {\n      selectionSet: _extends({}, a.selectionSet, {\n        selections: a.selectionSet.selections.concat([ {\n          kind: Kind.FIELD,\n          name: {\n            kind: Kind.NAME,\n            value: \"__typename\"\n          }\n        } ])\n      })\n    });\n  }\n}\n\nfunction u(a) {\n  a = keyDocument(a);\n  var b = t.get(a.__key);\n  b || ((b = visit(a, {\n    Field: r,\n    InlineFragment: r\n  })).__key = a.__key, t.set(a.__key, b));\n  return b;\n}\n\nfunction v(a) {\n  return a && \"object\" == typeof a ? Object.keys(a).reduce((function(b, c) {\n    var d = a[c];\n    \"__typename\" === c ? Object.defineProperty(b, \"__typename\", {\n      enumerable: !1,\n      value: d\n    }) : Array.isArray(d) ? b[c] = d.map(v) : b[c] = d && \"object\" == typeof d && \"__typename\" in d ? v(d) : d;\n    return b;\n  }), {}) : a;\n}\n\nfunction w(a) {\n  a.toPromise = function() {\n    return toPromise(take(1)(a));\n  };\n  return a;\n}\n\nfunction x(a, b, c) {\n  c || (c = b.context);\n  return {\n    key: b.key,\n    query: b.query,\n    variables: b.variables,\n    kind: a,\n    context: c\n  };\n}\n\nfunction y(a, b) {\n  return x(a.kind, a, _extends({}, a.context, {\n    meta: _extends({}, a.context.meta, b)\n  }));\n}\n\nfunction z() {}\n\nfunction A(a, b, c) {\n  var d, e, f;\n  for (d = 0; d < c.length; d++) {\n    if (c[d].kind === Kind.FRAGMENT_DEFINITION) {\n      e = c[d].name.value, f = stringifyDocument(c[d]);\n      a.has(e) ? \"production\" !== process.env.NODE_ENV && a.get(e) !== f && console.warn(\"[WARNING: Duplicate Fragment] A fragment with name `\" + e + \"` already exists in this document.\\nWhile fragment names may not be unique across your source, each name must be unique per document.\") : (a.set(e, f), \n      b.push(c[d]));\n    } else {\n      b.push(c[d]);\n    }\n  }\n}\n\nfunction B(a) {\n  return \"subscription\" !== (a = a.kind) && \"query\" !== a;\n}\n\nfunction C(a) {\n  return a.path || a.extensions ? {\n    message: a.message,\n    path: a.path,\n    extensions: a.extensions\n  } : a.message;\n}\n\nfunction D(a) {\n  return \"mutation\" !== (a = a.kind) && \"query\" !== a;\n}\n\nfunction E(a) {\n  var b = x(a.kind, a);\n  b.query = u(a.query);\n  return b;\n}\n\nfunction F(a) {\n  return \"query\" !== a.kind || \"cache-only\" !== a.context.requestPolicy;\n}\n\nfunction G(a) {\n  return y(a, {\n    cacheOutcome: \"miss\"\n  });\n}\n\nfunction H(a) {\n  return D(a);\n}\n\nfunction I(a) {\n  function b(a) {\n    var b = a.context.requestPolicy;\n    return \"query\" === a.kind && \"network-only\" !== b && (\"cache-only\" === b || k.has(a.key));\n  }\n  function c(a) {\n    var c = k.get(a.key);\n    \"production\" !== process.env.NODE_ENV && q(_extends({}, {\n      operation: a\n    }, c ? {\n      type: \"cacheHit\",\n      message: \"The result was successfully retried from the cache\"\n    } : {\n      type: \"cacheMiss\",\n      message: \"The result could not be retrieved from the cache\"\n    }));\n    c = _extends({}, c, {\n      operation: y(a, {\n        cacheOutcome: c ? \"hit\" : \"miss\"\n      })\n    });\n    \"cache-and-network\" === a.context.requestPolicy && (c.stale = !0, J(m, a));\n    return c;\n  }\n  function d(a) {\n    return !D(a) && b(a);\n  }\n  function e(a) {\n    function c(a) {\n      g.add(a);\n    }\n    var e, g, l, d = a.operation;\n    if (d) {\n      e = Object.keys(n(a.data, {})).concat(d.context.additionalTypenames || []);\n      if (\"mutation\" === a.operation.kind) {\n        g = new Set;\n        \"production\" !== process.env.NODE_ENV && q({\n          type: \"cacheInvalidation\",\n          message: \"The following typenames have been invalidated: \" + e,\n          operation: d,\n          data: {\n            typenames: e,\n            response: a\n          },\n          source: \"cacheExchange\"\n        });\n        for (a = 0; a < e.length; a++) {\n          (l = h[l = e[a]] || (h[l] = new Set)).forEach(c);\n          l.clear();\n        }\n        g.forEach((function b(a) {\n          k.has(a) && (d = k.get(a).operation, k.delete(a), J(m, d));\n        }));\n      } else if (\"query\" === d.kind && a.data) {\n        for (k.set(d.key, a), a = 0; a < e.length; a++) {\n          (h[l = e[a]] || (h[l] = new Set)).add(d.key);\n        }\n      }\n    }\n  }\n  function f(a) {\n    return !D(a) && !b(a);\n  }\n  var g = a.forward, m = a.client, q = a.dispatchDebug, k = new Map, h = Object.create(null);\n  return function(a) {\n    var b = share(a);\n    a = map(c)(filter(d)(b));\n    b = tap(e)(g(filter(F)(map(G)(merge([ map(E)(filter(f)(b)), filter(H)(b) ])))));\n    return merge([ a, b ]);\n  };\n}\n\nfunction J(a, b) {\n  return a.reexecuteOperation(x(b.kind, b, _extends({}, b.context, {\n    requestPolicy: \"network-only\"\n  })));\n}\n\nfunction K(a) {\n  return console.log(\"[Exchange debug]: Completed operation: \", a);\n}\n\nfunction L(a) {\n  return console.log(\"[Exchange debug]: Incoming operation: \", a);\n}\n\nfunction M(a) {\n  function b(a) {\n    f.delete(a.operation.key);\n  }\n  function c(a) {\n    var c = a.key, b = a.kind;\n    if (\"teardown\" === b) {\n      return f.delete(c), !0;\n    }\n    if (\"query\" !== b && \"subscription\" !== b) {\n      return !0;\n    }\n    b = f.has(c);\n    f.add(c);\n    b && \"production\" !== process.env.NODE_ENV && e({\n      type: \"dedup\",\n      message: \"An operation has been deduped.\",\n      operation: a,\n      source: \"dedupExchange\"\n    });\n    return !b;\n  }\n  var d = a.forward, e = a.dispatchDebug, f = new Set;\n  return function(a) {\n    a = filter(c)(a);\n    return tap(b)(d(a));\n  };\n}\n\nfunction N(a) {\n  return \"query\" === a.kind || \"mutation\" === a.kind;\n}\n\nfunction O(a) {\n  return \"query\" !== a.kind && \"mutation\" !== a.kind;\n}\n\nfunction P(a) {\n  var b = a.forward, c = a.dispatchDebug;\n  return function(a) {\n    var f, d = share(a);\n    a = mergeMap((function(a) {\n      var b = a.key, e = filter((function(a) {\n        return \"teardown\" === a.kind && a.key === b;\n      }))(d), g = makeFetchBody(a), h = makeFetchURL(a, g), l = makeFetchOptions(a, g);\n      \"production\" !== process.env.NODE_ENV && c({\n        type: \"fetchRequest\",\n        message: \"A fetch request is being executed.\",\n        operation: a,\n        data: {\n          url: h,\n          fetchOptions: l\n        },\n        source: \"fetchExchange\"\n      });\n      return onPush((function(b) {\n        var d = b.data ? void 0 : b.error;\n        \"production\" !== process.env.NODE_ENV && c({\n          type: d ? \"fetchError\" : \"fetchSuccess\",\n          message: \"A \" + (d ? \"failed\" : \"successful\") + \" fetch response has been returned.\",\n          operation: a,\n          data: {\n            url: h,\n            fetchOptions: l,\n            value: d || b\n          },\n          source: \"fetchExchange\"\n        });\n      }))(takeUntil(e)(makeFetchSource(a, h, l)));\n    }))(filter(N)(d));\n    f = b(filter(O)(d));\n    return merge([ a, f ]);\n  };\n}\n\nfunction Q() {\n  return !1;\n}\n\nfunction R(a) {\n  function b(a) {\n    if (\"teardown\" !== a.kind && \"production\" !== process.env.NODE_ENV) {\n      var b = 'No exchange has handled operations of kind \"' + a.kind + \"\\\". Check whether you've added an exchange responsible for these operations.\";\n      \"production\" !== process.env.NODE_ENV && c({\n        type: \"fallbackCatch\",\n        message: b,\n        operation: a,\n        source: \"fallbackExchange\"\n      });\n      console.warn(b);\n    }\n  }\n  var c = a.dispatchDebug;\n  return function(a) {\n    return filter(Q)(tap(b)(a));\n  };\n}\n\nfunction T(a) {\n  return function(b) {\n    var c = b.client, d = b.dispatchDebug;\n    return a.reduceRight((function(a, b) {\n      return b({\n        client: c,\n        forward: a,\n        dispatchDebug: function(a) {\n          \"production\" !== process.env.NODE_ENV && d(_extends({}, {\n            timestamp: Date.now(),\n            source: b.name\n          }, a));\n        }\n      });\n    }), b.forward);\n  };\n}\n\nfunction V(a) {\n  var d, e, f, g, m, c = this;\n  this.activeOperations = Object.create(null);\n  this.queue = [];\n  this.createOperationContext = function(a) {\n    a || (a = {});\n    return _extends({}, {\n      url: c.url,\n      fetchOptions: c.fetchOptions,\n      fetch: c.fetch,\n      preferGetMethod: c.preferGetMethod\n    }, a, {\n      suspense: a.suspense || !1 !== a.suspense && c.suspense,\n      requestPolicy: a.requestPolicy || c.requestPolicy\n    });\n  };\n  this.createRequestOperation = function(a, b, d) {\n    return x(a, b, c.createOperationContext(d));\n  };\n  this.executeQuery = function(a, b) {\n    a = c.createRequestOperation(\"query\", a, b);\n    return c.executeRequestOperation(a);\n  };\n  this.executeSubscription = function(a, b) {\n    a = c.createRequestOperation(\"subscription\", a, b);\n    return c.executeRequestOperation(a);\n  };\n  this.executeMutation = function(a, b) {\n    a = c.createRequestOperation(\"mutation\", a, b);\n    return c.executeRequestOperation(a);\n  };\n  if (\"production\" !== process.env.NODE_ENV && !a.url) {\n    throw Error(\"You are creating an urql-client without a url.\");\n  }\n  d = z;\n  if (\"production\" !== process.env.NODE_ENV) {\n    e = (d = makeSubject()).next, f = d.source;\n    this.subscribeToDebugTarget = function b(a) {\n      return subscribe(a)(f);\n    };\n    d = e;\n  }\n  this.url = a.url;\n  this.fetchOptions = a.fetchOptions;\n  this.fetch = a.fetch;\n  this.suspense = !!a.suspense;\n  this.requestPolicy = a.requestPolicy || \"cache-first\";\n  this.preferGetMethod = !!a.preferGetMethod;\n  this.maskTypename = !!a.maskTypename;\n  e = makeSubject();\n  g = e.next;\n  this.operations$ = e.source;\n  m = !1;\n  this.dispatchOperation = function(a) {\n    m = !0;\n    for (a && g(a); a = c.queue.shift(); ) {\n      g(a);\n    }\n    m = !1;\n  };\n  this.reexecuteOperation = function(a) {\n    if (\"mutation\" === a.kind || 0 < (c.activeOperations[a.key] || 0)) {\n      c.queue.push(a), m || Promise.resolve().then(c.dispatchOperation);\n    }\n  };\n  a = T(void 0 !== a.exchanges ? a.exchanges : U);\n  this.results$ = share(a({\n    client: this,\n    dispatchDebug: d,\n    forward: R({\n      dispatchDebug: d\n    })\n  })(this.operations$));\n  publish(this.results$);\n}\n\nfunction W(a) {\n  a.data = v(a.data);\n  return a;\n}\n\nfunction createClient(a) {\n  return new V(a);\n}\n\nfunction debugExchange(a) {\n  var d = a.forward;\n  return \"production\" === process.env.NODE_ENV ? function b(a) {\n    return d(a);\n  } : function c(a) {\n    return tap(K)(d(tap(L)(a)));\n  };\n}\n\nfunction errorExchange(a) {\n  function b(a) {\n    var b = a.error;\n    a = a.operation;\n    b && c(b, a);\n  }\n  var c = a.onError;\n  return function(a) {\n    var c = a.forward;\n    return function(a) {\n      return tap(b)(c(a));\n    };\n  };\n}\n\nfunction gql() {\n  var a, b, c, d, e, f, g;\n  for (a = arguments, b = new Map, c = [], d = [], e = Array.isArray(arguments[0]) ? arguments[0][0] : arguments[0] || \"\", \n  f = 1; f < arguments.length; f++) {\n    (g = a[f]) && g.definitions ? d.push.apply(d, g.definitions) : e += g;\n    e += a[0][f];\n  }\n  A(b, c, keyDocument(e).definitions);\n  A(b, c, d);\n  return keyDocument({\n    kind: Kind.DOCUMENT,\n    definitions: c\n  });\n}\n\nfunction ssrExchange(a) {\n  function b(b) {\n    var c = b.client, l = b.forward;\n    return function(b) {\n      var e = a && \"boolean\" == typeof a.isClient ? !!a.isClient : !c.suspense, h = share(b);\n      b = l(filter(f)(h));\n      h = map(g)(filter(m)(h));\n      e ? h = tap(d)(h) : b = tap(q)(b);\n      return merge([ b, h ]);\n    };\n  }\n  function c(a) {\n    return !B(a) && void 0 !== k[a.key];\n  }\n  function d(a) {\n    h.push(a.operation.key);\n    1 === h.length && Promise.resolve().then(e);\n  }\n  function e() {\n    for (var a; a = h.shift(); ) {\n      delete k[a];\n    }\n  }\n  function f(a) {\n    return !c(a);\n  }\n  function g(a) {\n    var b = k[a.key], c = b.error;\n    return {\n      operation: a,\n      data: (b = b.data) ? JSON.parse(b) : void 0,\n      extensions: void 0,\n      error: c ? new CombinedError({\n        networkError: c.networkError ? Error(c.networkError) : void 0,\n        graphQLErrors: c.graphQLErrors && c.graphQLErrors.length ? c.graphQLErrors : void 0\n      }) : void 0\n    };\n  }\n  function m(a) {\n    return c(a);\n  }\n  function q(a) {\n    var c, d, b = a.operation;\n    if (!B(b)) {\n      c = a.data;\n      a = a.error;\n      d = {};\n      void 0 !== c && (d.data = JSON.stringify(c));\n      a && (d.error = {\n        graphQLErrors: a.graphQLErrors.map(C)\n      }, a.networkError && (d.error.networkError = \"\" + a.networkError));\n      k[b.key] = d;\n    }\n  }\n  var k = {}, h = [];\n  b.restoreData = function(a) {\n    return _extends(k, a);\n  };\n  b.extractData = function() {\n    return _extends({}, k);\n  };\n  a && a.initialState && b.restoreData(a.initialState);\n  return b;\n}\n\nfunction subscriptionExchange(a) {\n  function b(a) {\n    return \"subscription\" === (a = a.kind) || !!d && (\"query\" === a || \"mutation\" === a);\n  }\n  var c = a.forwardSubscription, d = a.enableAllOperations;\n  return function(a) {\n    function d(a) {\n      var b = c({\n        key: a.key.toString(36),\n        query: print(a.query),\n        variables: a.variables,\n        context: _extends({}, a.context)\n      });\n      return make((function(c) {\n        function d(b) {\n          return f(makeResult(a, b));\n        }\n        function e(b) {\n          return f(makeErrorResult(a, b));\n        }\n        function h() {\n          g || (g = !0, \"subscription\" === a.kind && m.reexecuteOperation(x(\"teardown\", a, a.context)), \n          l());\n        }\n        var k, f = c.next, l = c.complete, g = !1;\n        Promise.resolve().then((function() {\n          g || (k = b.subscribe({\n            next: d,\n            error: e,\n            complete: h\n          }));\n        }));\n        return function() {\n          g = !0;\n          k && k.unsubscribe();\n        };\n      }));\n    }\n    function e(a) {\n      return !k(a);\n    }\n    var m = a.client, q = a.forward, k = b;\n    return function(a) {\n      var c, b = share(a);\n      a = mergeMap((function(a) {\n        var c = a.key, e = filter((function(a) {\n          return \"teardown\" === a.kind && a.key === c;\n        }))(b);\n        return takeUntil(e)(d(a));\n      }))(filter(k)(b));\n      c = q(filter(e)(b));\n      return merge([ a, c ]);\n    };\n  };\n}\n\nvar t, S, U;\n\nimport { toPromise, take, share, filter, map, tap, merge, mergeMap, takeUntil, make, onPush, makeSubject, publish, onStart, onEnd, switchMap, fromValue, subscribe } from \"wonka\";\n\nimport { k as keyDocument, _ as _extends, s as stringifyDocument, C as CombinedError, m as makeResult, a as makeErrorResult, b as makeFetchBody, c as makeFetchURL, d as makeFetchOptions, e as makeFetchSource, f as createRequest } from \"./2c01d8b2.mjs\";\n\nimport { visit } from \"graphql/language/visitor.mjs\";\n\nimport { Kind } from \"graphql/language/kinds.mjs\";\n\nimport { print } from \"graphql/language/printer.mjs\";\n\nexport { C as CombinedError, f as createRequest, h as getOperationName, a as makeErrorResult, m as makeResult, g as stringifyVariables } from \"./2c01d8b2.mjs\";\n\nt = new Map;\n\nS = R({\n  dispatchDebug: z\n});\n\nU = [ M, I, P ];\n\nV.prototype.onOperationStart = function(a) {\n  var b = a.key;\n  this.activeOperations[b] = (this.activeOperations[b] || 0) + 1;\n  this.dispatchOperation(a);\n};\n\nV.prototype.onOperationEnd = function(a) {\n  var b = a.key, c = this.activeOperations[b] || 0;\n  if (0 >= (this.activeOperations[b] = 0 >= c ? 0 : c - 1)) {\n    for (b = this.queue.length - 1; 0 <= b; b--) {\n      this.queue[b].key === a.key && this.queue.splice(b, 1);\n    }\n    this.dispatchOperation(x(\"teardown\", a, a.context));\n  }\n};\n\nV.prototype.executeRequestOperation = function(a) {\n  var e, f, c = this, d = filter((function(b) {\n    return b.operation.key === a.key;\n  }))(this.results$);\n  this.maskTypename && (d = map(W)(d));\n  if (\"mutation\" === a.kind) {\n    return take(1)(onStart((function b() {\n      return c.dispatchOperation(a);\n    }))(d));\n  }\n  e = filter((function(b) {\n    return \"teardown\" === b.kind && b.key === a.key;\n  }))(this.operations$), f = filter((function(b) {\n    return b.kind === a.kind && b.key === a.key && \"cache-only\" !== b.context.requestPolicy;\n  }))(this.operations$);\n  return onEnd((function() {\n    c.onOperationEnd(a);\n  }))(onStart((function() {\n    c.onOperationStart(a);\n  }))(switchMap((function(a) {\n    return a.stale ? fromValue(a) : merge([ fromValue(a), map((function() {\n      return _extends({}, a, {\n        stale: !0\n      });\n    }))(take(1)(f)) ]);\n  }))(takeUntil(e)(d))));\n};\n\nV.prototype.query = function(a, b, c) {\n  c && \"boolean\" == typeof c.suspense || (c = _extends({}, c, {\n    suspense: !1\n  }));\n  return w(this.executeQuery(createRequest(a, b), c));\n};\n\nV.prototype.readQuery = function(a, b, c) {\n  var d = null;\n  subscribe((function(a) {\n    d = a;\n  }))(this.executeQuery(createRequest(a, b), c)).unsubscribe();\n  return d;\n};\n\nV.prototype.subscription = function(a, b, c) {\n  return this.executeSubscription(createRequest(a, b), c);\n};\n\nV.prototype.mutation = function(a, b, c) {\n  return w(this.executeMutation(createRequest(a, b), c));\n};\n\nexport { V as Client, I as cacheExchange, T as composeExchanges, createClient, debugExchange, M as dedupExchange, U as defaultExchanges, errorExchange, S as fallbackExchangeIO, P as fetchExchange, u as formatDocument, gql, x as makeOperation, v as maskTypename, ssrExchange, subscriptionExchange };\n//# sourceMappingURL=urql-core.mjs.map\n","export const getEnvironmentVariables = () => {\n    /* eslint-disable no-undef */\n    return (VARIABLES !== 'undefined') ? VARIABLES : {};\n};\n\nexport const getEnvVar = (namePart = 'DATA_API') => {\n    const name = `VARIABLE_${namePart}`;\n    const vars = getEnvironmentVariables();\n    return vars[name] !== 'undefined' ? vars[name] : false;\n};\n\nexport const getLineColorFromIcon = (iconCode) => {\n    return 8000 === iconCode ? 'gold' : (8100 === iconCode ? 'red' : (8200 === iconCode ? 'purple' : (8400 === iconCode ? 'green' : 'blue')));\n};\n\nexport const championImage = (slug) => {\n    const cdnUrl = getEnvVar('CDN_URL');\n    return slug ? `${cdnUrl}/assets/lol/images/dd/champions/icons/${slug.toLowerCase()}.png` : false;\n}\n\nexport const rolenameIcon = (rolename) => {\n    const cdnUrl = getEnvVar('CDN_URL');\n    return rolename && 'XXX' !== rolename ? `${cdnUrl}/assets/lol/images/rolename-icon/${rolename}.svg` : false;\n};\n\nexport const roundWinRate = (value, precision = 1) => {\n    const multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n};\n\nexport const commaNumber = (num) => {\n    return num ? num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : false;\n};\n\nexport const perkImage = (perk) => {\n    const cdnUrl = getEnvVar('CDN_URL');\n    return perk ? `${cdnUrl}/assets/lol/images/perks/${perk}.png` : false;\n};\n\nexport const summonerSpellIcon = (slug) => {\n    const cdnUrl = getEnvVar('CDN_URL');\n    return slug ? `${cdnUrl}/assets/lol/images/dd/summoner-spells/${slug}.png` : false;\n};\n\nexport const gameItemIcon = (id) => {\n    const cdnUrl = getEnvVar('CDN_URL');\n    return id ? `${cdnUrl}/assets/lol/images/dd/game-items/${id}.png` : false;\n}","import { createClient } from '@urql/preact';\nimport { getEnvVar } from '../../helpers'\n\nconst apiData = getEnvVar('DATA_API');\nconst apiDataToken = getEnvVar('DATA_API_TOKEN');\nconst apiSquidex = getEnvVar('SQUIDEX_API');\nconst apiSquidexToken = getEnvVar('SQUIDEX_API_TOKEN');\n\nexport const dataApiClient = createClient({\n    url: apiData,\n    fetchOptions: () => {\n        return {\n            headers: { authorization: apiDataToken ? `Bearer ${apiDataToken}` : '' },\n        };\n    },\n});\n\nexport const squidexApiClient = createClient({\n    url: apiSquidex,\n    fetchOptions: () => {\n        return {\n            headers: { authorization: apiSquidexToken ? `Bearer ${apiSquidexToken}` : '' },\n        };\n    },\n});\n\nexport default dataApiClient;","import { createContext } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { getDataApiData, getSquidexApiData } from '../data';\n\nexport const BuildContext = createContext(null);\n\nconst Context = ({ children, champion = '' }) => {\n\n    //Data API data\n    const [dataApiBuildData, setDataApiBuildData] = useState({\n        data: {},\n        loading: false,\n        error: false\n    });\n\n    //Squidex API data\n    const [squidexApiBuildData, setSquidexApiBuildData] = useState({\n        data: {},\n        loading: false,\n        error: false\n    });\n\n    //General \"loading\" flag for both\n    const [loading, setLoading] = useState(false);\n\n    const store = {\n        dataApiBuildData,\n        setDataApiBuildData,\n        squidexApiBuildData,\n        setSquidexApiBuildData,\n        loading,\n        setLoading\n    };\n\n    useEffect(() => {\n        getDataApiData(champion, dataApiBuildData, setDataApiBuildData, loading, setLoading);\n        getSquidexApiData(champion, squidexApiBuildData, setSquidexApiBuildData, loading, setLoading);\n    }, []);\n\n    return (\n        <BuildContext.Provider value={store}>{children}</BuildContext.Provider>\n    );\n};\n\nexport default Context;","import { dataApiClient, squidexApiClient } from '../graphql/client';\nimport { DATA_API_CHAMPION_QUERY, SQUIDEX_API_CHAMPION_QUERY } from '../graphql/queries';\n\nexport const getDataApiData = (champion, buildData, setBuildData, loading, setLoading) => {\n\n    //Set loading on 'dataApiData'\n    setBuildData({\n        ...buildData,\n        loading: true\n    });\n\n    setLoading(true);\n\n    //Get the data\n    dataApiClient.query(DATA_API_CHAMPION_QUERY, {\n        champion\n    }).toPromise().then(result => {\n        const { data, error } = result;\n        setBuildData({\n            ...buildData,\n            data,\n            loading: false,\n            error: error ? error : false\n        });\n        setLoading(false);\n    });\n};\n\nexport const getSquidexApiData = (champion, buildData, setBuildData, loading, setLoading) => {\n\n    //Set loading on 'squidexApiData'\n    setBuildData({\n        ...buildData,\n        loading: true\n    });\n\n    setLoading(true);\n\n    //Get the data\n    squidexApiClient.query(SQUIDEX_API_CHAMPION_QUERY, {\n        championFilter: `data/slug/iv eq '${champion}' `,\n        roleDataFilter: `data/championSlug/iv eq '${champion}' `,\n        matchupsDataFilter: `data/enemyChampion/iv eq '${champion}' and data/matchupTips/en ne null `,\n        buildDataFilter: `data/champion/iv eq '${champion}'`,\n        comboFilter: `data/championSlug/iv eq '${champion}' and data/tags/iv in ('featured')`,\n        combosListFilter: `data/championSlug/iv eq '${champion}'`,\n        matchupSpecificDataFilter: `data/enemyChampion/iv eq '${champion}'  `,\n        withCommonData: true,\n        withBuildData: true,\n        withCountersData: false,\n        withCombosData: false,\n        withMatchupSpecificCountersData: false,\n        withProBuildsData: true\n    }).toPromise().then(result => {\n        const { data, error } = result;\n        setBuildData({\n            ...buildData,\n            data,\n            loading: false,\n            error: error ? error : false\n        });\n        setLoading(false);\n    });\n};","export const DATA_API_CHAMPION_QUERY = `\n    query ChampionQuery($champion: String! = \"akali\") {\n        lol {\n            champion(filters: {slug: $champion}) {\n                build {\n                    championSlug\n                    items {\n                        type\n                        items\n                    }\n                    name\n                    patch\n                    perks {\n                        IDs\n                        style\n                        subStyle\n                    }\n                    role\n                    skillOrder\n                    spells\n                    stats {\n                        matchCount\n                    }\n                    type\n                }\n                stats {\n                    tier\n                    winRateHistory {\n                    x\n                    value\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const SQUIDEX_API_CHAMPION_QUERY = `\n    query LolChampionPageStaticQuery($championFilter: String!, $roleDataFilter: String!, $matchupsDataFilter: String!, $buildDataFilter: String!, $comboFilter: String!, $combosListFilter: String!, $matchupSpecificDataFilter: String!, $withCommonData: Boolean!, $withBuildData: Boolean!, $withCountersData: Boolean!, $withMatchupSpecificCountersData: Boolean!, $withCombosData: Boolean!, $withProBuildsData: Boolean!) {\n        ...ChampionsCommonStaticDataFragment @include(if: $withCommonData)\n        ...ChampionsBuildsStaticDataFragment @include(if: $withBuildData)\n        ...ChampionsCountersStaticDataFragment @include(if: $withCountersData)\n        ...ChampionsMatchupSpecificStaticDataFragment @include(if: $withMatchupSpecificCountersData)\n        ...ChampionsCombosStaticDataFragment @include(if: $withCombosData)\n        ...ChampionsProBuildsStaticDataFragment @include(if: $withProBuildsData)\n    }\n\n    fragment ChampionsCommonStaticDataFragment on AppQueries {\n        querySummonersSpellsV1Contents {\n            flatData {\n                riotId\n                slug\n            }\n        }\n        championCommonInfo: queryChampionsV1Contents(filter: $championFilter) {\n            flatData {\n            ...ChampionPageStaticFragment\n            __typename\n            }\n            __typename\n        }\n        defaultModerators: queryModeratorsV1Contents {\n            flatData {\n            ...ModeratorFragment\n            __typename\n            }\n            __typename\n        }\n        __typename\n    }\n\n    fragment ChampionPageStaticFragment on ChampionsV1DataFlatDto {\n        riotId\n        slug\n        name\n        title\n        tags\n        type {\n            flatData {\n            ...ChampionTypeFragment\n            __typename\n            }\n            __typename\n        }\n        abilities {\n            flatData {\n            ...LolChampionAbilityFragment\n            __typename\n            }\n            __typename\n        }\n        difficulty {\n            flatData {\n            ...ChampionDifficultyFragment\n            __typename\n            }\n            __typename\n        }\n        customDifficulty {\n            flatData {\n            ...ChampionDifficultyFragment\n            __typename\n            }\n            __typename\n        }\n        difficultyLevel\n        powerSpikes {\n            early\n            late\n            mid\n            __typename\n        }\n        moderators {\n            flatData {\n            ...ModeratorFragment\n            __typename\n            }\n            __typename\n        }\n        damageType\n        playStyle\n        socialCommunities {\n            slug\n            url\n            __typename\n        }\n        __typename\n    }\n\n    fragment ModeratorFragment on ModeratorsV1DataFlatDto {\n        summonerName\n        region\n        rank\n        division\n        icon\n        links {\n            slug\n            link\n            __typename\n        }\n        __typename\n    }\n\n    fragment ChampionTypeFragment on ChampionTypeV1DataFlatDto {\n        slug\n        name\n        __typename\n    }\n\n    fragment LolChampionAbilityFragment on ChampionsAbilitiesV1DataFlatDto {\n        activationKey\n        riotDesc: ddragonDescription\n        mobaDesc: description\n        name\n        slug\n        stats {\n            ...ChampionAbilityStatFragment\n            __typename\n        }\n        customStats {\n            ...ChampionAbilityCustomStatFragment\n            __typename\n        }\n        __typename\n    }\n\n    fragment ChampionAbilityStatFragment on ChampionsAbilitiesV1statsChildDto {\n        slug\n        value\n        __typename\n    }\n\n    fragment ChampionAbilityCustomStatFragment on ChampionsAbilitiesV1customStatsChildDto {\n        slug\n        value\n        __typename\n    }\n\n    fragment ChampionDifficultyFragment on ChampionDifficultyV1DataFlatDto {\n        slug\n        name\n        color\n        level\n        __typename\n    }\n\n    fragment ChampionsBuildsStaticDataFragment on AppQueries {\n        championBuilds: queryChampionsBuildsV1Contents(filter: $buildDataFilter) {\n            flatData {\n            ...LolChampionCustomBuildFragment\n            __typename\n            }\n            __typename\n        }\n        buildCombo: queryChampionCombosV1Contents(filter: $comboFilter, top: 1, skip: 0) {\n            flatData {\n            ...ChampionComboFragment\n            __typename\n            }\n            __typename\n        }\n        items: queryGameItemsV1Contents(\n            top: 200\n            skip: 0\n            filter: \"data/isInStore/iv eq true and data/isMap11Supported/iv eq true and data/situationalDescription/en ne null\"\n        ) {\n            flatData {\n            ...ChampionPageItemsFragment\n            __typename\n            }\n            __typename\n        }\n        quickTips: queryChampionsRoleDataV1Contents(filter: $roleDataFilter) {\n            flatData {\n            ...ChampionQuickTipFragment\n            __typename\n            }\n            __typename\n        }\n        __typename\n    }\n\n    fragment LolChampionCustomBuildFragment on ChampionsBuildsV1DataFlatDto {\n        slug\n        champion\n        role\n        name\n        patch\n        spells {\n            flatData {\n            riotId\n            __typename\n            }\n            __typename\n        }\n        skillOrder\n        perks {\n            IDs: iDs\n            style\n            subStyle\n            __typename\n        }\n        items {\n            type\n            timeToTarget\n            items {\n            flatData {\n                riotId\n                __typename\n            }\n            __typename\n            }\n            __typename\n        }\n        __typename\n    }\n\n    fragment ChampionComboFragment on ChampionCombosV1DataFlatDto {\n        slug\n        championSlug\n        championSlug\n        difficulty {\n            flatData {\n            ...ChampionComboDifficultyFragment\n            __typename\n            }\n            __typename\n        }\n        executionText\n        notes\n        sequence {\n            items\n            __typename\n        }\n        shortDescription\n        tags\n        thumbnailId\n        videoUrl\n        __typename\n    }\n\n    fragment ChampionComboDifficultyFragment on ChampionComboDifficultyV1DataFlatDto {\n        slug\n        name\n        index\n        color\n        __typename\n    }\n\n    fragment ChampionPageItemsFragment on GameItemsV1DataFlatDto {\n        riotId\n        mainItemTag\n        situationalDescription\n        type {\n            flatData {\n            slug\n            __typename\n            }\n            __typename\n        }\n        __typename\n    }\n\n    fragment ChampionQuickTipFragment on ChampionsRoleDataV1DataFlatDto {\n        championSlug\n        role\n        quickTips\n        __typename\n    }\n\n    fragment ChampionsCountersStaticDataFragment on AppQueries {\n        championMatchupsData: queryChampionsMatchupsV1Contents(\n            top: 200\n            skip: 0\n            filter: $matchupsDataFilter\n        ) {\n            flatData {\n            playerChampion\n            __typename\n            }\n            __typename\n        }\n        championRoleData: queryChampionsRoleDataV1Contents(filter: $roleDataFilter) {\n            flatData {\n            ...ChampionRoleDataFragment\n            __typename\n            }\n            __typename\n        }\n        __typename\n    }\n\n    fragment ChampionsMatchupsFragment on ChampionsMatchupsV1DataFlatDto {\n        matchupTips\n        role\n        __typename\n    }\n\n    fragment ChampionRoleDataFragment on ChampionsRoleDataV1DataFlatDto {\n        championSlug\n        role\n        counterVideo\n        counterTips {\n            ...ChampionRoleCounterTipFragment\n            __typename\n        }\n        __typename\n    }\n\n    fragment ChampionRoleCounterTipFragment on ChampionsRoleDataV1counterTipsChildDto {\n        slug\n        text\n        __typename\n    }\n\n    fragment ChampionsCombosStaticDataFragment on AppQueries {\n        combosList: queryChampionCombosV1Contents(filter: $combosListFilter) {\n            flatData {\n            ...ChampionComboFragment\n            __typename\n            }\n            __typename\n        }\n        __typename\n    }\n\n    fragment ChampionsMatchupSpecificStaticDataFragment on AppQueries {\n        championMatchupSpecificData: queryChampionsMatchupsV1Contents(\n            top: 200\n            skip: 0\n            filter: $matchupSpecificDataFilter\n        ) {\n            flatData {\n            ...ChampionsMatchupsFragment\n            __typename\n            }\n            __typename\n        }\n        __typename\n    }\n\n    fragment ChampionsProBuildsStaticDataFragment on AppQueries {\n        items: queryGameItemsV1Contents(\n            top: 200\n            skip: 0\n            filter: \"data/isInStore/iv eq true and data/isMap11Supported/iv eq true\"\n        ) {\n            flatData {\n            ...ChampionPageItemsFragment\n            __typename\n            }\n            __typename\n        }\n        badges: queryPostGameBadgesV1Contents(top: 200) {\n            flatData {\n            ...PostGameBadgeFragment\n            __typename\n            }\n            __typename\n        }\n        perks: queryRunesV1Contents(top: 200) {\n            flatData {\n            ...PerkPostGameFragment\n            __typename\n            }\n            __typename\n        }\n        __typename\n    }\n\n    fragment PostGameBadgeFragment on PostGameBadgesV1DataFlatDto {\n        slug\n        name\n        type\n        description\n        __typename\n    }\n\n    fragment PerkPostGameFragment on RunesV1DataFlatDto {\n        childRunes\n        riotId\n        name\n        matchResultStatsLabels\n        __typename\n    }\n`;","import RoundedGoldBorder from '../rounded-gold-border';\nimport Image from '../image';\nimport { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport { championImage } from '../../lib/helpers';\nimport tw from 'twin.macro';\n\nconst AvatarStyles = tw.div`flex`;\n\nconst Avatar = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion: { build: { championSlug = '' } = {} } = {} } = {} } = {} } = {}, squidexApiBuildData: { data: squidexData = {} } } = useContext(BuildContext);\n    const { championCommonInfo = [] } = squidexData;\n    const { flatData: { name = '', title = '' } = {} } = championCommonInfo[0] || {};\n\n    //Avatar URL\n    const avatarUrl = championImage(championSlug);\n\n    //Avatar title and alt text\n    const altTitle = `${name} – ${title}`;\n\n    return (\n        <AvatarStyles>\n            <RoundedGoldBorder>\n                <Image src={avatarUrl} rounded={true} width={36} height={36} title={altTitle} alt={altTitle} />\n            </RoundedGoldBorder>\n        </AvatarStyles>\n    );\n};\n\nexport default Avatar;","import tw from 'twin.macro';\n\nconst StandardText = tw`text-white font-normal text-xs uppercase leading-5`;\n\nexport default StandardText;","import tw from 'twin.macro';\n\nconst LoadingText = tw`(bg-white text-transparent animate-pulse)!`;\n\nexport default LoadingText;","import { styled } from 'twin.macro';\nimport StandardText from '../../utils/standard-text';\nimport LoadingText from '../../utils/loading-text';\n\nconst NormalText = styled.span(({ loading }) => [\n    StandardText,\n    (loading) && LoadingText,\n]);\n\nexport default NormalText;","import { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport tw from 'twin.macro';\nimport NormalText from '../../styles/components/normal-text';\n\nconst NameStyles = tw.div`flex`;\n\nconst Name = () => {\n\n    const { squidexApiBuildData: { data: { championCommonInfo = [] } = {} }, loading = true } = useContext(BuildContext);\n    const { flatData: { name = '' } = {} } = championCommonInfo[0] || {};\n\n    const isLoading = loading || !name;\n\n    const nameTitle = `${name} build`;\n\n    return (\n        <NameStyles>\n            <NormalText loading={isLoading}>{nameTitle}</NormalText>\n        </NameStyles>\n    );\n};\n\nexport default Name;","import tw, { styled } from 'twin.macro';\n\nconst FlexRow = styled.div(() => [\n    tw`flex flex-row items-center justify-start h-full`,\n]);\n\nexport default FlexRow;","import tw from 'twin.macro';\n\nconst SmallText = tw`font-normal text-xs capitalize`;\n\nexport default SmallText;","import tw, { styled } from 'twin.macro';\nimport SmallText from '../../utils/small-text';\nimport LoadingText from '../../utils/loading-text';\n\nconst SmallPurpleText = styled.span(({ loading }) => [\n    SmallText,\n    tw`text-widget-purple-text`,\n    (loading) && LoadingText,\n]);\n\nexport default SmallPurpleText;","import { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport { rolenameIcon } from '../../lib/helpers';\nimport Image from '../image';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst RoleStyles = tw(FlexRow)`items-center`;\nconst RoleSmallPurpleText = tw(SmallPurpleText)`pl-1.5`;\n\nconst Role = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion: { build: { role: rawRole = 'XXX' } = {} } = {} } = {} } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n\n    const role = rawRole.toLowerCase();\n    const roleIcon = rolenameIcon(rawRole);\n\n    const loading = isLoading || ('xxx' === role || !role);\n\n    return (\n        <RoleStyles>\n            <Image src={roleIcon} title={role} alt={role} width={11} height={11} />\n            <RoleSmallPurpleText loading={loading}>{role}</RoleSmallPurpleText>\n        </RoleStyles>\n    );\n};\n\nexport default Role;","import tw, { styled } from 'twin.macro';\nimport SmallText from '../../utils/small-text';\nimport LoadingText from '../../utils/loading-text';\n\nconst SmallWhiteText = styled.span(({ loading }) => [\n    SmallText,\n    tw`text-white`,\n    (loading) && LoadingText,\n]);\n\nexport default SmallWhiteText;","import { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst PatchStyles = tw(FlexRow)`pl-3.5`;\nconst PatchSmallPurpleText = tw(SmallPurpleText)`pr-1.5`;\nconst PatchSmallWhiteText = tw(SmallWhiteText)``;\n\nconst Patch = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion: { build: { patch = 'xx.x' } = {} } = {} } = {} } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n\n    const loading = isLoading || ('xx.x' === patch || !patch);\n\n    return (\n        <PatchStyles>\n            <PatchSmallPurpleText loading={loading}>Patch</PatchSmallPurpleText>\n            <PatchSmallWhiteText loading={loading}>{patch}</PatchSmallWhiteText>\n        </PatchStyles>\n    );\n};\n\nexport default Patch;","import { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport { roundWinRate } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst WinRateStyles = tw(FlexRow)`pl-3.5`;\nconst WinRateSmallPurpleText = tw(SmallPurpleText)`pr-1.5`;\nconst WinRateSmallGreenText = tw(SmallPurpleText)`text-widget-green`;\n\nconst WinRate = () => {\n\n    const { dataApiBuildData: { data, data: { lol: { champion: { stats: { winRateHistory = [] } = {} } = {} } = {} } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n    const latestWinRateHistoryItem = winRateHistory ? winRateHistory[0] : {};\n    const { value: winRateRaw = 'XX.X' } = latestWinRateHistoryItem || {};\n\n    const winRate = `${'XX.X' !== winRateRaw ? roundWinRate(winRateRaw) : 'XX.X'}%`;\n\n    const loading = isLoading || ('XX.X%' === winRate || !winRate);\n\n    return (\n        <WinRateStyles>\n            <WinRateSmallPurpleText loading={loading}>Win rate</WinRateSmallPurpleText>\n            <WinRateSmallGreenText loading={loading}>{winRate}</WinRateSmallGreenText>\n        </WinRateStyles>\n    );\n};\n\nexport default WinRate;","import { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport { commaNumber } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst MatchesStyles = tw(FlexRow)`pl-2`;\nconst MatchesSmallPurpleText = tw(SmallPurpleText)`pr-1.5 lowercase`;\nconst MatchesSmallWhiteText = tw(SmallWhiteText)``;\n\nconst Matches = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion: { build: { stats: { matchCount: matchCountRaw = 'x,xxx' } = {} } = {} } = {} } = {} } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n    const matchCount = 'x,xxx' !== matchCountRaw ? commaNumber(matchCountRaw) : matchCountRaw;\n\n    const loading = isLoading || ('x,xxx' === matchCountRaw || !matchCount);\n\n    return (\n        <MatchesStyles>\n            <MatchesSmallPurpleText loading={loading}>Based on <MatchesSmallWhiteText>{matchCount}</MatchesSmallWhiteText> matches</MatchesSmallPurpleText>\n        </MatchesStyles>\n    );\n};\n\nexport default Matches;","import tw, { styled } from 'twin.macro';\n\nconst FlexCol = styled.div(() => [\n    tw`flex flex-col items-start justify-between`,\n]);\n\nexport default FlexCol;","import Avatar from '../avatar';\nimport Name from '../name';\nimport Role from '../role';\nimport Patch from '../patch';\nimport WinRate from '../win-rate';\nimport Matches from '../matches';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\n\nconst HeaderStyles = tw(FlexRow)`bg-widget-purple rounded-t-md px-3 py-2.5 border-b border-widget-white-line`;\nconst NamePatchStyles = tw(FlexCol)`md:pl-2`;\n\nconst Header = () => {\n    return (\n        <HeaderStyles>\n            <Avatar />\n            <NamePatchStyles>\n                <Name />\n                <FlexRow>\n                    <Role />\n                    <Patch />\n                    <WinRate />\n                    <Matches />\n                </FlexRow>\n            </NamePatchStyles>\n        </HeaderStyles>\n    );\n};\n\nexport default Header;","import RoundedGoldBorder from '../rounded-gold-border';\nimport Image from '../image';\nimport { perkImage } from '../../lib/helpers';\nimport tw, { styled } from 'twin.macro';\n\nconst RoundedGoldBorderStyles = tw(RoundedGoldBorder)``;\nconst NoWrapStyles = tw.div``;\n\nconst Rune = ({ id, wh = 32, rounded = false, gold = false, leftSpace = false, borderWidth = false }) => {\n\n    const wrapComponents = {\n        gold: RoundedGoldBorderStyles,\n        none: NoWrapStyles\n    };\n    const WrapComponent = gold ? wrapComponents.gold : wrapComponents.none;\n    const WrapComponentStyles = styled(WrapComponent)(({ leftSpace }) => [\n        tw`z-10`,\n        'large' === leftSpace ? tw`ml-4!` : tw``,\n        'normal' === leftSpace ? tw`ml-3.5!` : tw``,\n        'small' === leftSpace ? tw`ml-2!` : tw``,\n        'smaller' === leftSpace ? tw`ml-1!` : tw``,\n        'smallest' === leftSpace ? tw`ml-0.5!` : tw``,\n        { width: `${wh}px`, height: `${wh}px` }\n    ]);\n\n    const src = perkImage(id);\n\n    return (\n        <WrapComponentStyles leftSpace={leftSpace} borderWidth={borderWidth}>\n            <Image src={src} rounded={rounded} width={wh} height={wh} bgColor={false} leftSpace={leftSpace} />\n        </WrapComponentStyles>\n    );\n};\n\nexport default Rune;","import tw from 'twin.macro';\n\nconst RunesDisplay = tw`flex`;\n\nexport default RunesDisplay;","import { styled } from 'twin.macro';\nimport RunesDisplayU from '../../utils/runes-display';\nimport LoadingText from '../../utils/loading-text';\n\nconst RunesDisplay = styled.div(({ loading }) => [\n    RunesDisplayU,\n    (loading) && LoadingText,\n]);\n\nexport default RunesDisplay;","import Rune from '../rune';\nimport { getLineColorFromIcon } from '../../lib/helpers';\nimport { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport tw, { styled } from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport RunesDisplay from '../../styles/components/runes-display';\n\nconst RunesStyles = tw(FlexCol)`pr-0 md:(pr-10 w-9/12)`;\nconst RunesSmallWhiteText = tw(SmallWhiteText)`uppercase`;\nconst RunesDisplayStyles = tw(RunesDisplay)`uppercase pt-3`;\nconst RuneGroup = styled(RunesDisplay)(({ leftSpace, line = false, loading = true }) => [\n    tw`items-center relative bg-transparent!`,\n    'large' === leftSpace ? tw`md:(ml-8)` : tw``,\n    'normal' === leftSpace ? tw`md:(ml-7)` : tw``,\n    'small' === leftSpace ? tw`md:(ml-6)` : tw``,\n    'very-small' === leftSpace ? tw`md:(ml-3)` : tw``,\n    (true === loading && 'gold' === line) ? tw`before:(absolute z-0 left-6 content block w-9/12 h-0.5 bg-widget-gold-line outline-widget-gold-outer-line animate-pulse)` : tw``,\n    (false === loading && 'gold' === line) ? tw`before:(absolute z-0 left-6 content block w-9/12 h-0.5 bg-widget-gold-line outline-widget-gold-outer-line)` : tw``,\n    (true === loading && 'blue' === line) ? tw`before:(absolute z-0 left-7 content block w-9/12 h-0.5 bg-widget-blue-line outline-widget-blue-outer-line animate-pulse)` : tw``,\n    (false === loading && 'blue' === line) ? tw`before:(absolute z-0 left-7 content block w-9/12 h-0.5 bg-widget-blue-line outline-widget-blue-outer-line)` : tw``,\n    (true === loading && 'red' === line) ? tw`before:(absolute z-0 left-7 content block w-9/12 h-0.5 bg-widget-red-line outline-widget-red-outer-line animate-pulse)` : tw``,\n    (false === loading && 'red' === line) ? tw`before:(absolute z-0 left-7 content block w-9/12 h-0.5 bg-widget-red-line outline-widget-red-outer-line)` : tw``,\n    (true === loading && 'green' === line) ? tw`before:(absolute z-0 left-7 content block w-9/12 h-0.5 bg-widget-green-line outline-widget-green-outer-line animate-pulse)` : tw``,\n    (false === loading && 'green' === line) ? tw`before:(absolute z-0 left-7 content block w-9/12 h-0.5 bg-widget-green-line outline-widget-green-outer-line)` : tw``,\n    (true === loading && 'purple' === line) ? tw`before:(absolute z-0 left-7 content block w-9/12 h-0.5 bg-widget-purple-line outline-widget-purple-outer-line animate-pulse)` : tw``,\n    (false === loading && 'purple' === line) ? tw`before:(absolute z-0 left-7 content block w-9/12 h-0.5 bg-widget-purple-line outline-widget-purple-outer-line)` : tw``,\n]);\n\nconst Runes = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion: { build: { perks = {} } = {} } = {} } = {} } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n    const { IDs: iDs = [], style: primaryId = false, subStyle: secondaryId = false } = perks;\n\n    const primaryLine = getLineColorFromIcon(primaryId);\n    const secondaryLine = getLineColorFromIcon(secondaryId);\n\n    const loading = isLoading || (!primaryId);\n\n    return (\n        <RunesStyles>\n            <RunesSmallWhiteText>Runes</RunesSmallWhiteText>\n            <FlexRow>\n                <RunesDisplayStyles>\n                    <RuneGroup line={primaryLine} loading={loading}>\n                        <Rune id={primaryId} wh={36} rounded={false} />\n                        <Rune id={iDs[0]} wh={48} rounded={false} leftSpace=\"smallest\" />\n                        <Rune id={iDs[1]} wh={32} rounded={true} gold={true} leftSpace=\"small\" />\n                        <Rune id={iDs[2]} wh={32} rounded={true} gold={true} leftSpace=\"normal\" />\n                        <Rune id={iDs[3]} wh={32} rounded={true} gold={true} leftSpace=\"normal\" />\n                    </RuneGroup>\n                    <RuneGroup leftSpace=\"large\" line={secondaryLine} loading={loading}>\n                        <Rune id={secondaryId} wh={36} rounded={false} />\n                        <Rune id={iDs[4]} wh={32} rounded={true} gold={true} leftSpace=\"normal\" />\n                        <Rune id={iDs[5]} wh={32} rounded={true} gold={true} leftSpace=\"normal\" />\n                    </RuneGroup>\n                    <RuneGroup leftSpace=\"small\" loading={loading}>\n                        <Rune id={iDs[6]} wh={24} rounded={true} gold={true} borderWidth=\"1px\" />\n                        <Rune id={iDs[7]} wh={24} rounded={true} gold={true} leftSpace=\"large\" borderWidth=\"1px\" />\n                        <Rune id={iDs[8]} wh={24} rounded={true} gold={true} leftSpace=\"large\" borderWidth=\"1px\" />\n                    </RuneGroup>\n                </RunesDisplayStyles>\n            </FlexRow>\n        </RunesStyles>\n    );\n};\n\nexport default Runes;","import Image from '../image';\nimport { summonerSpellIcon, gameItemIcon } from '../../lib/helpers';\nimport tw, { styled } from 'twin.macro';\n\nconst SpellItemStyles = styled('div')(({ leftSpace, wh }) => [\n    tw``,\n    'large' === leftSpace ? tw`ml-4!` : tw``,\n    'normal' === leftSpace ? tw`ml-3.5!` : tw``,\n    'small' === leftSpace ? tw`ml-2!` : tw``,\n    'smaller' === leftSpace ? tw`ml-1!` : tw``,\n    'smallest' === leftSpace ? tw`ml-0.5!` : tw``,\n    { width: `${wh}px`, height: `${wh}px` }\n]);\n\nconst SpellItem = ({ slug, wh = 36, type = 'item', leftSpace = false }) => {\n\n    const src = 'spell' === type ? summonerSpellIcon(slug) : ('item' === type ? gameItemIcon(slug) : false);\n\n    return (\n        <SpellItemStyles leftSpace={leftSpace} wh={wh}>\n            <Image src={src} width={wh} height={wh} bgColor={false} />\n        </SpellItemStyles>\n    );\n};\n\nexport default SpellItem;","import tw from 'twin.macro';\n\nconst SpellsDisplay = tw`flex`;\n\nexport default SpellsDisplay;","import { styled } from 'twin.macro';\nimport SpellsDisplayU from '../../utils/spells-display';\nimport LoadingText from '../../utils/loading-text';\n\nconst SpellsDisplay = styled.div(({ loading }) => [\n    SpellsDisplayU,\n    (loading) && LoadingText,\n]);\n\nexport default SpellsDisplay;","import SpellItem from '../spell-item';\nimport { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport tw from 'twin.macro';\nimport FlexCol from '../../styles/components/flex-col';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport SpellsDisplay from '../../styles/components/spells-display';\n\nconst SpellsStyles = tw(FlexCol)`w-full`;\nconst SpellsSmallWhiteText = tw(SmallWhiteText)`uppercase`;\nconst SpellsDisplayStyles = tw(SpellsDisplay)`uppercase pt-3`;\n\nconst Spells = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion: { build: { spells = [] } = {} } = {} } = {} } = {} }, squidexApiBuildData: { data: { querySummonersSpellsV1Contents: squidexSpells = [] } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n\n    const spellData = (spells.length > 0 && squidexSpells.length > 0) ? squidexSpells.filter(i => spells.includes(parseInt(i.flatData.riotId))) : [\n        {\n            flatData: {\n                slug: false\n            }\n        },\n        {\n            flatData: {\n                slug: false\n            }\n        }\n    ];\n\n    const loading = isLoading || (0 === spells.length || 0 === squidexSpells.length);\n\n    return (\n        <SpellsStyles>\n            <SpellsSmallWhiteText>Spells</SpellsSmallWhiteText>\n            <FlexRow>\n                <SpellsDisplayStyles>\n                    <SpellItem slug={spellData[0].flatData.slug} type=\"spell\" />\n                    <SpellItem slug={spellData[1].flatData.slug} type=\"spell\" leftSpace=\"small\" />\n                </SpellsDisplayStyles>\n            </FlexRow>\n        </SpellsStyles>\n    );\n};\n\nexport default Spells;","import SpellItem from '../spell-item';\nimport tw, { styled } from 'twin.macro';\nimport FlexCol from '../../styles/components/flex-col';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst ItemSetStyles = styled(FlexCol)(({ leftSpace }) => [\n    tw`w-auto`,\n    'large' === leftSpace ? tw`md:(ml-8)` : tw``,\n    'normal' === leftSpace ? tw`md:(ml-7)` : tw``,\n    'small' === leftSpace ? tw`md:(ml-6)` : tw``,\n    'very-small' === leftSpace ? tw`md:(ml-3)` : tw``,\n]);\nconst ItemSetSmallPurpleText = tw(SmallPurpleText)`capitalize`;\nconst ItemSetDisplayStyles = tw(FlexRow)`uppercase pt-1.5`;\n\nconst ItemSet = ({ name, items, loading = true, leftSpace = false }) => {\n\n    return (\n        <ItemSetStyles leftSpace={leftSpace}>\n            <ItemSetSmallPurpleText loading={loading}>{name}</ItemSetSmallPurpleText>\n            <FlexRow>\n                <ItemSetDisplayStyles>\n                    {items.map((c, i) => {\n                        const leftSpace = 0 === i ? false : 'small';\n                        return (\n                            <SpellItem slug={c} key={c} leftSpace={leftSpace} />\n                        );\n                    })}\n                </ItemSetDisplayStyles>\n            </FlexRow>\n        </ItemSetStyles>\n    );\n};\n\nexport default ItemSet;","import tw from 'twin.macro';\n\nconst ItemsDisplay = tw`flex`;\n\nexport default ItemsDisplay;","import { styled } from 'twin.macro';\nimport ItemsDisplayU from '../../utils/items-display';\nimport LoadingText from '../../utils/loading-text';\n\nconst ItemsDisplay = styled.div(({ loading }) => [\n    ItemsDisplayU,\n    (loading) && LoadingText,\n]);\n\nexport default ItemsDisplay;","import ItemSet from '../item-set';\nimport { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport tw, { styled } from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport ItemsDisplay from '../../styles/components/items-display';\n\nconst ItemsStyles = tw(FlexCol)``;\nconst ItemsSmallWhiteText = tw(SmallWhiteText)`uppercase`;\nconst ItemsDisplayStyles = tw(ItemsDisplay)`capitalize pt-3`;\n\nconst Items = () => {\n\n    const dummyData = {\n        type: 'items',\n        items: []\n    };\n    const { dataApiBuildData: { data: { lol: { champion: { build: { items = [\n        dummyData,\n        dummyData,\n        dummyData,\n        dummyData,\n    ] } = {} } = {} } = {} } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n\n    const loading = isLoading || items.length === 0;\n\n    return (\n        <ItemsStyles>\n            <ItemsSmallWhiteText>Items</ItemsSmallWhiteText>\n            <FlexRow>\n                <ItemsDisplayStyles>\n                    <ItemSet name={items[0].type} items={items[0].items} loading={loading} />\n                    <ItemSet name={`${items[1].type} items`} items={items[1].items} loading={loading} leftSpace=\"small\" />\n                    <ItemSet name={`${items[2].type} items`} items={items[2].items} loading={loading} leftSpace=\"small\" />\n                    <ItemSet name={`${items[3].type} items`} items={items[3].items} loading={loading} leftSpace=\"small\" />\n                </ItemsDisplayStyles>\n            </FlexRow>\n        </ItemsStyles>\n    );\n};\n\nexport default Items;","import { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst SkillPriorityStyles = tw(FlexCol)``;\nconst SkillPrioritySmallWhiteText = tw(SmallWhiteText)`uppercase`;\n\nconst SkillPriority = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion = {} } = {} } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n    console.log(champion);\n    const loading = isLoading || 1 === 1;\n\n    return (\n        <SkillPriorityStyles>\n            <SkillPrioritySmallWhiteText>Skill priority</SkillPrioritySmallWhiteText>\n            <FlexRow>\n                <p>TEST</p>\n            </FlexRow>\n        </SkillPriorityStyles>\n    );\n};\n\nexport default SkillPriority;","import { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst SkillOrderStyles = tw(FlexCol)``;\nconst SkillOrderSmallWhiteText = tw(SmallWhiteText)`uppercase`;\n\nconst SkillOrder = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion = {} } = {} } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n    console.log(champion);\n    const loading = isLoading || 1 === 1;\n\n    return (\n        <SkillOrderStyles>\n            <SkillOrderSmallWhiteText>Skill order</SkillOrderSmallWhiteText>\n            <FlexRow>\n                <p>TEST</p>\n            </FlexRow>\n        </SkillOrderStyles>\n    );\n};\n\nexport default SkillOrder;","import Runes from '../runes';\nimport Spells from '../spells';\nimport Items from '../items';\nimport SkillPriority from '../skill-priority';\nimport SkillOrder from '../skill-order';\nimport tw, { styled } from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\n\nconst BodyStyles = tw.div`flex flex-col bg-transparent divide-y divide-widget-white-line`;\n\nconst Body = () => {\n\n    const BodyRow = styled(FlexRow)(({ pt = false }) => [\n        tw`p-5`,\n        true === pt ? tw`pt-7` : tw``,\n    ]);\n\n    return (\n        <BodyStyles>\n            <BodyRow>\n                <Runes />\n                <Spells />\n            </BodyRow>\n            <BodyRow pt={true}>\n                <Items />\n            </BodyRow>\n            <BodyRow pt={true}>\n                <SkillPriority />\n                <SkillOrder />\n            </BodyRow>\n        </BodyStyles>\n    );\n};\n\nexport default Body;","const PlatinumPlusIcon = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"14\"\n            fill=\"none\"\n            viewBox=\"0 0 16 14\"\n        >\n            <path\n                fill=\"#629896\"\n                d=\"M8 9.696a2.783 2.783 0 100-5.565 2.783 2.783 0 000 5.565z\"\n            ></path>\n            <path\n                fill=\"#629896\"\n                fillRule=\"evenodd\"\n                d=\"M6.609 10.816A4.397 4.397 0 008 13.891c.087-.09.177-.174.264-.268a4.108 4.108 0 001.127-2.814c-.921.15-1.86.152-2.782.007zM8 2.566c.466 0 .928.073 1.37.219A4.685 4.685 0 008 .305a5.037 5.037 0 00-1.409 2.494c.454-.154.93-.233 1.409-.233zM15.958.566L10.323 3.24a4.348 4.348 0 012.025 3.673c0 .132-.007.264-.021.396A8.54 8.54 0 0016 .917c0-.003-.028-.351-.042-.351zM.038.566L5.673 3.24a4.348 4.348 0 00-2.024 3.673c0 .132.007.264.02.396A8.54 8.54 0 010 .917S.024.566.038.566zM11.955 8.34a6.108 6.108 0 01-2.237 2.473l.936 1.314h.348a9.009 9.009 0 012.9-3.478v-.31h-1.947zM4.035 8.34a6.084 6.084 0 002.226 2.473l-.936 1.314h-.348a9.009 9.009 0 00-2.9-3.478v-.31h1.958z\"\n                clipRule=\"evenodd\"\n            ></path>\n        </svg>\n    );\n}\n\nexport default PlatinumPlusIcon;","import { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport { commaNumber } from '../../lib/helpers';\nimport PlatinumPlusIcon from '../platinum-plus-icon';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst GamesAnalyzedStyles = tw(FlexRow)``;\nconst GamesAnalyzedSmallLightestPurpleText = tw(SmallPurpleText)`text-widget-purple-lightest pr-1.5 lowercase`;\nconst GamesAnalyzedSmallPurpleText = tw(SmallPurpleText)`pl-1 normal-case`;\n\nconst GamesAnalyzed = () => {\n\n    const { dataApiBuildData: { data: { lol: { champion: { build: { stats: { matchCount: matchCountRaw } = {} } = {} } = {} } = {} } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n    const matchCount = commaNumber(matchCountRaw);\n\n    const loading = isLoading || !matchCount;\n\n    return (\n        <GamesAnalyzedStyles>\n            <GamesAnalyzedSmallLightestPurpleText loading={loading}>2,031,593</GamesAnalyzedSmallLightestPurpleText>\n            <FlexRow>\n                <PlatinumPlusIcon />\n                <GamesAnalyzedSmallPurpleText>Platinum+ games analyzed</GamesAnalyzedSmallPurpleText>\n            </FlexRow>\n        </GamesAnalyzedStyles>\n    );\n};\n\nexport default GamesAnalyzed;","import MoreBuildsIcon from '../more-builds-icon';\nimport { useContext } from 'preact/hooks';\nimport { BuildContext } from '../../lib/context';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst MoreBuildsStyles = tw(FlexRow)``;\nconst MoreBuildsLoading = tw(SmallWhiteText)`ml-6`;\nconst MoreBuildsSmallGoldText = tw(SmallWhiteText)`pl-6 flex items-center text-xs! font-medium text-widget-gold normal-case transition-all hover:text-widget-gold-light all:(transition-all fill-widget-gold) hover:(all:(fill-widget-gold-light))`;\nconst MoreBuildsIconStyled = tw(MoreBuildsIcon)`ml-1`;\n\n\nconst MoreBuilds = () => {\n\n    const { squidexApiBuildData: { data: { championCommonInfo = [] } = {} } = {}, loading: isLoading = true } = useContext(BuildContext);\n    const { flatData: { name = 'xxxx', slug = '' } = {} } = championCommonInfo[0] || {};\n\n    const moreBuildsLinkText = `See more ${name} builds`;\n    const moreBuildsLinkHref = `https://app.mobalytics.gg/lol/champions/${slug}/build`;\n\n    const loading = isLoading || (!name || 'xxxx' === name);\n\n    return (\n        <MoreBuildsStyles>\n            {loading && (\n                <MoreBuildsLoading loading={true}>See more xxxxx builds...</MoreBuildsLoading>\n            )}\n            {!loading && (\n                <MoreBuildsSmallGoldText as={'a'} href={moreBuildsLinkHref} target=\"_blank\" title={moreBuildsLinkText} loading={loading}>{moreBuildsLinkText}<MoreBuildsIconStyled /></MoreBuildsSmallGoldText>\n            )}\n        </MoreBuildsStyles>\n    );\n};\n\nexport default MoreBuilds;","const MoreBuildsIcon = ({ className }) => {\n\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14\"\n            height=\"10\"\n            fill=\"none\"\n            viewBox=\"0 0 14 10\"\n            className={className}\n        >\n            <path\n                fill=\"none\"\n                fillRule=\"evenodd\"\n                d=\"M0 .5A.5.5 0 01.5 0H8a.5.5 0 010 1H1v8h7a.5.5 0 010 1H.5a.5.5 0 01-.5-.5v-9zM3.5 5a.5.5 0 01.5-.5h8.293l-2.147-2.146a.5.5 0 01.708-.708l3 3a.5.5 0 01.146.351v.006c0 .127-.05.254-.146.35l-3 3a.5.5 0 01-.708-.707L12.293 5.5H4a.5.5 0 01-.5-.5z\"\n                clipRule=\"evenodd\"\n            ></path>\n        </svg>\n    );\n}\n\nexport default MoreBuildsIcon;","import MobalyticsLogo from '../mobalytics-logo';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst PoweredByStyles = tw(FlexRow)`ml-auto`;\nconst PoweredBySmallPurpleText = tw(SmallPurpleText)`flex items-center self-end normal-case`;\nconst PoweredByLogo = tw(MobalyticsLogo)`ml-2`;\n\nconst PoweredBy = () => {\n\n    return (\n        <PoweredByStyles>\n            <PoweredBySmallPurpleText>Powered by <PoweredByLogo /></PoweredBySmallPurpleText>\n        </PoweredByStyles>\n    );\n};\n\nexport default PoweredBy;","const MobalyticsLogo = (props) => {\n\n    return (\n        <svg {...props} width=\"122\" height=\"24\" viewBox=\"0 0 122 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g clipPath=\"url(#clip0)\">\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.936005 6.12767L10.6562 0.919159L10.92 4.12286L0.936005 6.12767Z\" fill=\"#535072\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.904 5.82127L10.608 0.612762L10.881 3.90976L20.904 5.82127Z\" fill=\"#7A7397\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.232 23.2851L17.4631 15.6255L20.904 17.1665L11.232 23.2851Z\" fill=\"#272643\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.232 22.9787L5.05422 15.6255L0.623993 16.9297L11.232 22.9787Z\" fill=\"#27283E\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.904 5.82129V16.8511L17.472 15.3266L20.904 5.82129Z\" fill=\"#2D2D45\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.940341 6.43405L0.936005 17.1575L5.304 15.8543L0.940341 6.43405Z\" fill=\"#202134\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.904 5.85769L17.5678 15.3191L10.92 3.98297L20.904 5.85769Z\" fill=\"#42416C\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.936005 5.84851L5.31703 15.6255L10.92 3.98297L0.936005 5.84851Z\" fill=\"#363257\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.3957 23.2851L17.472 15.6255L5.30402 15.897L11.3957 23.2851Z\" fill=\"#484979\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.8433 3.98297L5.30402 15.6255L17.472 15.3574L10.8433 3.98297Z\" fill=\"#363356\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.4151 15.7876L17.495 15.9265L17.5742 15.7009L20.3026 17.0207L12.3682 22.1148L17.4151 15.7876ZM5.10671 15.9376L5.22359 16.2026L5.2886 16.0653L10.3771 22.2179L1.43237 17.0362L5.10671 15.9376ZM4.9247 15.5245L1.09676 16.6696L1.1006 7.2264L4.7087 15.0346L4.9247 15.5245ZM10.4896 3.72971L2.29763 5.28543L10.3414 1.04005L10.5512 3.61502L10.408 3.58765L10.4896 3.72971ZM11.1301 3.72515L11.1905 3.59739L11.0503 3.62403L10.8607 1.0604L19.2763 5.27816L11.1301 3.72515ZM17.725 15.2727L20.589 7.11726V16.5806L17.725 15.2727ZM16.9727 15.6242L11.3427 22.6817L5.71304 15.875L16.9727 15.6242ZM9.52324 4.36804L10.4087 4.19982L5.24108 15.1162L5.11775 14.8492L1.19514 5.9499L9.52324 4.36804ZM20.5158 5.9695L17.3958 14.854L11.2823 4.20956L15.7326 5.05752L20.5158 5.9695ZM10.8198 4.38123L17.0619 15.1754L5.60361 15.4306L10.8198 4.38123ZM21.0387 17.0795L21.216 16.9657L21.0387 16.88V5.87972L21.072 5.88601L21.0387 5.86936V5.83693L21.112 5.62827L20.8872 5.58547L10.7484 0.503959L10.7339 0.326251L10.5683 0.413687L10.3541 0.306396L10.3699 0.518388L0.800725 5.57006L0.557671 5.61618L0.662138 5.85321L0.637697 5.86603L0.665488 5.86085L0.760774 6.07704L0.651592 6.10096L0.647374 16.804L0.312012 16.9043L0.64725 17.0985V17.271L0.843777 17.2122L11.3274 23.2851L11.3501 23.2586L11.3743 23.2851L20.8584 17.1953L21.0387 17.2777V17.0795Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M21.216 5.82176C21.216 5.99037 21.0762 6.12766 20.9041 6.12766C20.7319 6.12766 20.592 5.99037 20.592 5.82176C20.592 5.65232 20.7319 5.51489 20.9041 5.51489C21.0762 5.51489 21.216 5.65232 21.216 5.82176Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.748 5.81314C20.6576 5.81314 20.5841 5.8858 20.5841 5.97496C20.5841 6.06342 20.6576 6.1358 20.748 6.1358C20.8384 6.1358 20.9119 6.06342 20.9119 5.97496C20.9119 5.8858 20.8384 5.81314 20.748 5.81314ZM20.748 6.43404C20.4899 6.43404 20.28 6.22806 20.28 5.97496C20.28 5.72115 20.4899 5.51489 20.748 5.51489C21.0059 5.51489 21.216 5.72115 21.216 5.97496C21.216 6.22806 21.0059 6.43404 20.748 6.43404Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.904 5.72535C20.8501 5.72535 20.8063 5.76875 20.8063 5.82167C20.8063 5.87447 20.8501 5.91728 20.904 5.91728C20.958 5.91728 21.0019 5.87447 21.0019 5.82167C21.0019 5.76875 20.958 5.72535 20.904 5.72535ZM20.904 6.43403C20.5602 6.43403 20.28 6.15943 20.28 5.82167C20.28 5.48321 20.5602 5.2085 20.904 5.2085C21.2478 5.2085 21.528 5.48321 21.528 5.82167C21.528 6.15943 21.2478 6.43403 20.904 6.43403Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.748 6.20346C20.6194 6.20346 20.5149 6.10093 20.5149 5.97482C20.5149 5.84834 20.6194 5.74557 20.748 5.74557C20.8765 5.74557 20.9812 5.84834 20.9812 5.97482C20.9812 6.10093 20.8765 6.20346 20.748 6.20346ZM20.748 5.46695C20.4629 5.46695 20.231 5.69486 20.231 5.97482C20.231 6.25442 20.4629 6.48208 20.748 6.48208C21.033 6.48208 21.2649 6.25442 21.2649 5.97482C21.2649 5.69486 21.033 5.46695 20.748 5.46695ZM20.748 6.74041C20.3179 6.74041 19.968 6.39703 19.968 5.97482C19.968 5.55225 20.3179 5.2085 20.748 5.2085C21.178 5.2085 21.528 5.55225 21.528 5.97482C21.528 6.39703 21.178 6.74041 20.748 6.74041Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.784 15.6256C17.784 15.7951 17.6445 15.9319 17.4724 15.9319C17.2998 15.9319 17.16 15.7951 17.16 15.6256C17.16 15.4568 17.2998 15.3192 17.4724 15.3192C17.6445 15.3192 17.784 15.4568 17.784 15.6256Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.3163 15.3114C17.2258 15.3114 17.1522 15.3837 17.1522 15.4724C17.1522 15.5609 17.2258 15.6334 17.3163 15.6334C17.4065 15.6334 17.4798 15.5609 17.4798 15.4724C17.4798 15.3837 17.4065 15.3114 17.3163 15.3114ZM17.3163 15.9319C17.058 15.9319 16.848 15.7257 16.848 15.4724C16.848 15.2189 17.058 15.0128 17.3163 15.0128C17.5742 15.0128 17.784 15.2189 17.784 15.4724C17.784 15.7257 17.5742 15.9319 17.3163 15.9319Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.4721 15.5293C17.418 15.5293 17.374 15.5726 17.374 15.6256C17.374 15.6784 17.418 15.7217 17.4721 15.7217C17.526 15.7217 17.5698 15.6784 17.5698 15.6256C17.5698 15.5726 17.526 15.5293 17.4721 15.5293ZM17.4721 16.2383C17.1279 16.2383 16.848 15.963 16.848 15.6256C16.848 15.2873 17.1279 15.0128 17.4721 15.0128C17.8162 15.0128 18.096 15.2873 18.096 15.6256C18.096 15.963 17.8162 16.2383 17.4721 16.2383Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.3161 15.7014C17.1873 15.7014 17.0826 15.5987 17.0826 15.4724C17.0826 15.3459 17.1873 15.2432 17.3161 15.2432C17.4446 15.2432 17.5492 15.3459 17.5492 15.4724C17.5492 15.5987 17.4446 15.7014 17.3161 15.7014ZM17.3161 14.9646C17.0311 14.9646 16.7992 15.1925 16.7992 15.4723C16.7992 15.7521 17.0311 15.9799 17.3161 15.9799C17.6009 15.9799 17.8328 15.7521 17.8328 15.4723C17.8328 15.1925 17.6009 14.9646 17.3161 14.9646ZM17.3161 16.2383C16.886 16.2383 16.536 15.8947 16.536 15.4723C16.536 15.0499 16.886 14.7064 17.3161 14.7064C17.7461 14.7064 18.096 15.0499 18.096 15.4723C18.096 15.8947 17.7461 16.2383 17.3161 16.2383Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M21.216 17.1575C21.216 17.3263 21.0762 17.4638 20.9041 17.4638C20.7319 17.4638 20.592 17.3263 20.592 17.1575C20.592 16.9877 20.7319 16.8511 20.9041 16.8511C21.0762 16.8511 21.216 16.9877 21.216 17.1575Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.748 16.8433C20.6576 16.8433 20.5841 16.9156 20.5841 17.0043C20.5841 17.0929 20.6576 17.1652 20.748 17.1652C20.8384 17.1652 20.9119 17.0929 20.9119 17.0043C20.9119 16.9156 20.8384 16.8433 20.748 16.8433ZM20.748 17.4638C20.4899 17.4638 20.28 17.2575 20.28 17.0043C20.28 16.7508 20.4899 16.5447 20.748 16.5447C21.0059 16.5447 21.216 16.7508 21.216 17.0043C21.216 17.2575 21.0059 17.4638 20.748 17.4638Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.904 17.0611C20.8501 17.0611 20.8063 17.1046 20.8063 17.1575C20.8063 17.2105 20.8501 17.2539 20.904 17.2539C20.958 17.2539 21.0019 17.2105 21.0019 17.1575C21.0019 17.1046 20.958 17.0611 20.904 17.0611ZM20.904 17.7702C20.5602 17.7702 20.28 17.4955 20.28 17.1575C20.28 16.8196 20.5602 16.5447 20.904 16.5447C21.2478 16.5447 21.528 16.8196 21.528 17.1575C21.528 17.4955 21.2478 17.7702 20.904 17.7702Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.748 17.2337C20.6194 17.2337 20.5149 17.1307 20.5149 17.0043C20.5149 16.8777 20.6194 16.7749 20.748 16.7749C20.8765 16.7749 20.9812 16.8777 20.9812 17.0043C20.9812 17.1307 20.8765 17.2337 20.748 17.2337ZM20.748 16.4968C20.4629 16.4968 20.231 16.7245 20.231 17.0043C20.231 17.284 20.4629 17.5117 20.748 17.5117C21.033 17.5117 21.2649 17.284 21.2649 17.0043C21.2649 16.7245 21.033 16.4968 20.748 16.4968ZM20.748 17.7702C20.3179 17.7702 19.968 17.4266 19.968 17.0043C19.968 16.5819 20.3179 16.2383 20.748 16.2383C21.178 16.2383 21.528 16.5819 21.528 17.0043C21.528 17.4266 21.178 17.7702 20.748 17.7702Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.544 22.9786C11.544 23.1475 11.4044 23.2851 11.2322 23.2851C11.0597 23.2851 10.92 23.1475 10.92 22.9786C10.92 22.8098 11.0597 22.6723 11.2322 22.6723C11.4044 22.6723 11.544 22.8098 11.544 22.9786Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.3882 22.6646C11.2977 22.6646 11.2241 22.7366 11.2241 22.8253C11.2241 22.9142 11.2977 22.9865 11.3882 22.9865C11.4785 22.9865 11.5519 22.9142 11.5519 22.8253C11.5519 22.7366 11.4785 22.6646 11.3882 22.6646ZM11.3882 23.2851C11.1299 23.2851 10.92 23.079 10.92 22.8253C10.92 22.5721 11.1299 22.366 11.3882 22.366C11.646 22.366 11.856 22.5721 11.856 22.8253C11.856 23.079 11.646 23.2851 11.3882 23.2851Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.2322 22.8827C11.1782 22.8827 11.134 22.9254 11.134 22.979C11.134 23.032 11.1782 23.0746 11.2322 23.0746C11.2861 23.0746 11.3301 23.032 11.3301 22.979C11.3301 22.9254 11.2861 22.8827 11.2322 22.8827ZM11.2322 23.5915C10.888 23.5915 10.608 23.3168 10.608 22.979C10.608 22.6406 10.888 22.366 11.2322 22.366C11.5764 22.366 11.856 22.6406 11.856 22.979C11.856 23.3168 11.5764 23.5915 11.2322 23.5915Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.3881 23.0544C11.2593 23.0544 11.1545 22.952 11.1545 22.8258C11.1545 22.6993 11.2593 22.5966 11.3881 22.5966C11.5168 22.5966 11.6215 22.6993 11.6215 22.8258C11.6215 22.952 11.5168 23.0544 11.3881 23.0544ZM11.3881 22.318C11.103 22.318 10.8712 22.5459 10.8712 22.8258C10.8712 23.1054 11.103 23.333 11.3881 23.333C11.673 23.333 11.9048 23.1054 11.9048 22.8258C11.9048 22.5459 11.673 22.318 11.3881 22.318ZM11.3881 23.5915C10.9579 23.5915 10.608 23.248 10.608 22.8258C10.608 22.4033 10.9579 22.0596 11.3881 22.0596C11.8181 22.0596 12.168 22.4033 12.168 22.8258C12.168 23.248 11.8181 23.5915 11.3881 23.5915Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.616 15.6252C5.616 15.7951 5.4762 15.9319 5.30415 15.9319C5.13167 15.9319 4.992 15.7951 4.992 15.6252C4.992 15.4561 5.13167 15.3192 5.30415 15.3192C5.4762 15.3192 5.616 15.4561 5.616 15.6252Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.14828 15.6181C5.05779 15.6181 4.98427 15.6898 4.98427 15.7783C4.98427 15.8671 5.05779 15.9394 5.14828 15.9394C5.23834 15.9394 5.31186 15.8671 5.31186 15.7783C5.31186 15.6898 5.23834 15.6181 5.14828 15.6181ZM5.14828 16.2383C4.89004 16.2383 4.67999 16.032 4.67999 15.7783C4.67999 15.5253 4.89004 15.3192 5.14828 15.3192C5.40609 15.3192 5.61599 15.5253 5.61599 15.7783C5.61599 16.032 5.40609 16.2383 5.14828 16.2383Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.30411 15.5296C5.25008 15.5296 5.206 15.5729 5.206 15.6252C5.206 15.6789 5.25008 15.7215 5.30411 15.7215C5.35826 15.7215 5.4021 15.6789 5.4021 15.6252C5.4021 15.5729 5.35826 15.5296 5.30411 15.5296ZM5.30411 16.2383C4.95995 16.2383 4.67999 15.9637 4.67999 15.6252C4.67999 15.2875 4.95995 15.0128 5.30411 15.0128C5.6484 15.0128 5.92799 15.2875 5.92799 15.6252C5.92799 15.9637 5.6484 16.2383 5.30411 16.2383Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.1482 16.0078C5.01937 16.0078 4.91444 15.9049 4.91444 15.7785C4.91444 15.6522 5.01937 15.5498 5.1482 15.5498C5.27678 15.5498 5.38158 15.6522 5.38158 15.7785C5.38158 15.9049 5.27678 16.0078 5.1482 16.0078ZM5.1482 15.2712C4.86304 15.2712 4.63115 15.4989 4.63115 15.7785C4.63115 16.0583 4.86304 16.2862 5.1482 16.2862C5.43299 16.2862 5.66476 16.0583 5.66476 15.7785C5.66476 15.4989 5.43299 15.2712 5.1482 15.2712ZM5.1482 16.5447C4.71803 16.5447 4.36801 16.2009 4.36801 15.7785C4.36801 15.3563 4.71803 15.0128 5.1482 15.0128C5.57812 15.0128 5.92801 15.3563 5.92801 15.7785C5.92801 16.2009 5.57812 16.5447 5.1482 16.5447Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.24799 5.82218C1.24799 5.99102 1.10811 6.12766 0.935993 6.12766C0.763449 6.12766 0.623993 5.99102 0.623993 5.82218C0.623993 5.6525 0.763449 5.51489 0.935993 5.51489C1.10811 5.51489 1.24799 5.6525 1.24799 5.82218Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.780013 5.81342C0.689576 5.81342 0.616105 5.886 0.616105 5.97539C0.616105 6.06365 0.689576 6.13538 0.780013 6.13538C0.870449 6.13538 0.94392 6.06365 0.94392 5.97539C0.94392 5.886 0.870449 5.81342 0.780013 5.81342ZM0.780012 6.43404C0.521929 6.43404 0.312012 6.22815 0.312012 5.97538C0.312012 5.72134 0.521929 5.51489 0.780012 5.51489C1.03809 5.51489 1.24801 5.72134 1.24801 5.97538C1.24801 6.22815 1.03809 6.43404 0.780012 6.43404Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.936012 5.72465C0.881886 5.72465 0.837939 5.76805 0.837939 5.82167C0.837939 5.87459 0.881886 5.91728 0.936012 5.91728C0.989778 5.91728 1.03384 5.87459 1.03384 5.82167C1.03384 5.76805 0.989778 5.72465 0.936012 5.72465ZM0.936012 6.43403C0.59198 6.43403 0.312012 6.15872 0.312012 5.82167C0.312012 5.48321 0.59198 5.2085 0.936012 5.2085C1.27992 5.2085 1.56001 5.48321 1.56001 5.82167C1.56001 6.15872 1.27992 6.43403 0.936012 6.43403Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.780001 6.20346C0.651204 6.20346 0.546548 6.10093 0.546548 5.97506C0.546548 5.84809 0.651204 5.74483 0.780001 5.74483C0.908673 5.74483 1.01333 5.84809 1.01333 5.97506C1.01333 6.10093 0.908673 6.20346 0.780001 6.20346ZM0.779999 5.46695C0.495028 5.46695 0.263193 5.69486 0.263193 5.97507C0.263193 6.25466 0.495028 6.48208 0.779999 6.48208C1.06497 6.48208 1.29681 6.25466 1.29681 5.97507C1.29681 5.69486 1.06497 5.46695 0.779999 5.46695ZM0.78 6.74041C0.34993 6.74041 0 6.39703 0 5.97506C0 5.55225 0.34993 5.2085 0.78 5.2085C1.21007 5.2085 1.56 5.55225 1.56 5.97506C1.56 6.39703 1.21007 6.74041 0.78 6.74041Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.92 3.98334C10.92 4.15241 10.7801 4.28937 10.6082 4.28937C10.4356 4.28937 10.296 4.15241 10.296 3.98334C10.296 3.81357 10.4356 3.67661 10.6082 3.67661C10.7801 3.67661 10.92 3.81357 10.92 3.98334Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.7644 3.97555C10.6738 3.97555 10.6001 4.04763 10.6001 4.1364C10.6001 4.22473 10.6738 4.29696 10.7644 4.29696C10.8545 4.29696 10.9279 4.22473 10.9279 4.1364C10.9279 4.04763 10.8545 3.97555 10.7644 3.97555ZM10.7643 4.59575C10.5061 4.59575 10.296 4.38968 10.296 4.13639C10.296 3.88296 10.5061 3.67661 10.7643 3.67661C11.022 3.67661 11.232 3.88296 11.232 4.13639C11.232 4.38968 11.022 4.59575 10.7643 4.59575Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.6081 3.88677C10.5539 3.88677 10.51 3.93014 10.51 3.98291C10.51 4.0358 10.5539 4.07858 10.6081 4.07858C10.662 4.07858 10.7059 4.0358 10.7059 3.98291C10.7059 3.93014 10.662 3.88677 10.6081 3.88677ZM10.6081 4.59574C10.2638 4.59574 9.98401 4.32048 9.98401 3.98292C9.98401 3.64465 10.2638 3.37021 10.6081 3.37021C10.952 3.37021 11.232 3.64465 11.232 3.98292C11.232 4.32048 10.952 4.59574 10.6081 4.59574Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.7642 4.36462C10.6354 4.36462 10.5305 4.26215 10.5305 4.13611C10.5305 4.0097 10.6354 3.90699 10.7642 3.90699C10.8926 3.90699 10.9973 4.0097 10.9973 4.13611C10.9973 4.26215 10.8926 4.36462 10.7642 4.36462ZM10.7642 3.62852C10.4792 3.62852 10.2472 3.85629 10.2472 4.1361C10.2472 4.41603 10.4792 4.64381 10.7642 4.64381C11.0491 4.64381 11.2808 4.41603 11.2808 4.1361C11.2808 3.85629 11.0491 3.62852 10.7642 3.62852ZM10.7642 4.90212C10.334 4.90212 9.98401 4.55856 9.98401 4.13611C9.98401 3.71377 10.334 3.37021 10.7642 3.37021C11.1942 3.37021 11.544 3.71377 11.544 4.13611C11.544 4.55856 11.1942 4.90212 10.7642 4.90212Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.92 0.919215C10.92 1.08889 10.7804 1.22553 10.6079 1.22553C10.4356 1.22553 10.296 1.08889 10.296 0.919215C10.296 0.750373 10.4356 0.612762 10.6079 0.612762C10.7804 0.612762 10.92 0.750373 10.92 0.919215Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.452 0.605017C10.3617 0.605017 10.2882 0.677306 10.2882 0.765974C10.2882 0.854641 10.3617 0.926931 10.452 0.926931C10.5423 0.926931 10.6158 0.854641 10.6158 0.765974C10.6158 0.677306 10.5423 0.605017 10.452 0.605017ZM10.452 1.22555C10.194 1.22555 9.98401 1.01941 9.98401 0.765971C9.98401 0.512534 10.194 0.306396 10.452 0.306396C10.71 0.306396 10.92 0.512534 10.92 0.765971C10.92 1.01941 10.71 1.22555 10.452 1.22555Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.6266 0.676625C10.5664 0.676625 10.5172 0.720108 10.5172 0.773136C10.5172 0.826164 10.5664 0.869647 10.6266 0.869647C10.6869 0.869647 10.736 0.826164 10.736 0.773136C10.736 0.720108 10.6869 0.676625 10.6266 0.676625ZM10.6266 1.38743C10.2426 1.38743 9.92981 1.11157 9.92981 0.773133C9.92981 0.434697 10.2426 0.159424 10.6266 0.159424C11.011 0.159424 11.3232 0.434697 11.3232 0.773133C11.3232 1.11157 11.011 1.38743 10.6266 1.38743Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.6266 0.994217C10.4883 0.994217 10.3759 0.894996 10.3759 0.773032C10.3759 0.651068 10.4883 0.552083 10.6266 0.552083C10.7648 0.552083 10.8773 0.651068 10.8773 0.773032C10.8773 0.894996 10.7648 0.994217 10.6266 0.994217ZM10.6266 0.284108C10.3204 0.284108 10.0711 0.503408 10.0711 0.773025C10.0711 1.04311 10.3204 1.26288 10.6266 1.26288C10.9329 1.26288 11.1819 1.04311 11.1819 0.773025C11.1819 0.503408 10.9329 0.284108 10.6266 0.284108ZM10.6266 1.51212C10.1643 1.51212 9.78833 1.18064 9.78833 0.773029C9.78833 0.366129 10.1643 0.0348816 10.6266 0.0348816C11.0887 0.0348816 11.4647 0.366129 11.4647 0.773029C11.4647 1.18064 11.0887 1.51212 10.6266 1.51212Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.24799 17.1572C1.24799 17.327 1.10854 17.4638 0.935993 17.4638C0.763591 17.4638 0.623993 17.327 0.623993 17.1572C0.623993 16.988 0.763591 16.8511 0.935993 16.8511C1.10854 16.8511 1.24799 16.988 1.24799 17.1572Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.780156 16.8436C0.68972 16.8436 0.616105 16.9157 0.616105 17.0041C0.616105 17.0929 0.68972 17.1649 0.780156 17.1649C0.870306 17.1649 0.94392 17.0929 0.94392 17.0041C0.94392 16.9157 0.870306 16.8436 0.780156 16.8436ZM0.780155 17.4638C0.521929 17.4638 0.312012 17.2575 0.312012 17.0041C0.312012 16.7509 0.521929 16.5447 0.780155 16.5447C1.03795 16.5447 1.24801 16.7509 1.24801 17.0041C1.24801 17.2575 1.03795 17.4638 0.780155 17.4638Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.935892 17.0615C0.882116 17.0615 0.83816 17.1042 0.83816 17.1572C0.83816 17.2106 0.882116 17.2534 0.935892 17.2534C0.989789 17.2534 1.03374 17.2106 1.03374 17.1572C1.03374 17.1042 0.989789 17.0615 0.935892 17.0615ZM0.935892 17.7702C0.591674 17.7702 0.312012 17.4954 0.312012 17.1572C0.312012 16.8193 0.591674 16.5447 0.935892 16.5447C1.27999 16.5447 1.56001 16.8193 1.56001 17.1572C1.56001 17.4954 1.27999 17.7702 0.935892 17.7702Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.780001 17.2332C0.651308 17.2332 0.546636 17.1305 0.546636 17.004C0.546636 16.8779 0.651308 16.7754 0.780001 16.7754C0.90857 16.7754 1.01324 16.8779 1.01324 17.004C1.01324 17.1305 0.90857 17.2332 0.780001 17.2332ZM0.779996 16.4968C0.49498 16.4968 0.263108 16.7244 0.263108 17.004C0.263108 17.284 0.49498 17.5118 0.779996 17.5118C1.06489 17.5118 1.29676 17.284 1.29676 17.004C1.29676 16.7244 1.06489 16.4968 0.779996 16.4968ZM0.78 17.7702C0.349986 17.7702 0 17.4265 0 17.004C0 16.5818 0.349986 16.2383 0.78 16.2383C1.21001 16.2383 1.56 16.5818 1.56 17.004C1.56 17.4265 1.21001 17.7702 0.78 17.7702Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.53007 15.7783L11.4289 22.8569L17.3275 15.5177L20.5956 6.28134L10.8857 4.45337L1.28866 6.2615L5.53007 15.7783ZM11.4355 23.5915L5.11493 15.993L0.623993 5.91761L10.8857 3.98297L10.9294 3.99142L21.216 5.92815L17.7433 15.7437L17.7186 15.774L11.4355 23.5915Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.58298 15.5166L11.4399 22.4464L17.2962 15.2616L20.5474 6.20202L10.8917 4.40963L1.36266 6.17989L5.58298 15.5166ZM11.4434 22.858L5.3469 15.6371L0.984912 5.98694L10.8917 4.1465L10.9166 4.15114L20.8999 6.00406L17.5185 15.405L11.4434 22.858ZM5.16262 15.7313L11.4465 23.1799L17.7174 15.4868L21.1754 5.84951L10.8912 3.94022L0.689758 5.83643L5.16262 15.7313ZM11.4502 23.5915L4.92667 15.8515L0.312012 5.64348L10.8922 3.67661L10.9619 3.69018L21.528 5.65155L17.939 15.6316L17.914 15.6619L11.4502 23.5915Z\" fill=\"#FFFFFE\" />\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.5766 9.49786L12.5405 9.57264C12.3758 9.91674 12.2049 10.2658 12.0289 10.6188C11.8523 10.9714 11.6772 11.3218 11.5018 11.674L11.0696 12.5741L10.94 12.8273C10.8626 12.6759 10.7868 12.524 10.7129 12.3714L10.3714 11.6723C10.1967 11.3217 10.0212 10.9725 9.84451 10.622C9.66702 10.2758 9.49242 9.92633 9.3187 9.57165L9.28265 9.49786H8.73599V14.4H9.33177V10.905L10.7277 13.658H11.1685L11.2045 13.5844C11.3324 13.3246 11.4605 13.067 11.5871 12.8123L11.5995 12.7872C11.7306 12.5253 11.8663 12.2548 12.0105 11.9741L12.0966 11.7977C12.1874 11.6121 12.2795 11.4237 12.3712 11.2314C12.416 11.1393 12.4614 11.0453 12.5076 10.9496V14.4H13.104V9.49786H12.5766Z\" fill=\"#FFFFFE\" />\n            </g>\n            <path d=\"M32.8125 7.46875L35.0039 13.6562L37.1836 7.46875H39.4922V16H37.7285V13.668L37.9043 9.64258L35.6016 16H34.3945L32.0977 9.64844L32.2734 13.668V16H30.5156V7.46875H32.8125ZM48.2852 11.9277C48.2852 12.7676 48.1367 13.5039 47.8398 14.1367C47.543 14.7695 47.1172 15.2578 46.5625 15.6016C46.0117 15.9453 45.3789 16.1172 44.6641 16.1172C43.957 16.1172 43.3262 15.9473 42.7715 15.6074C42.2168 15.2676 41.7871 14.7832 41.4824 14.1543C41.1777 13.5215 41.0234 12.7949 41.0195 11.9746V11.5527C41.0195 10.7129 41.1699 9.97461 41.4707 9.33789C41.7754 8.69727 42.2031 8.20703 42.7539 7.86719C43.3086 7.52344 43.9414 7.35156 44.6523 7.35156C45.3633 7.35156 45.9941 7.52344 46.5449 7.86719C47.0996 8.20703 47.5273 8.69727 47.8281 9.33789C48.1328 9.97461 48.2852 10.7109 48.2852 11.5469V11.9277ZM46.5039 11.541C46.5039 10.6465 46.3438 9.9668 46.0234 9.50195C45.7031 9.03711 45.2461 8.80469 44.6523 8.80469C44.0625 8.80469 43.6074 9.03516 43.2871 9.49609C42.9668 9.95312 42.8047 10.625 42.8008 11.5117V11.9277C42.8008 12.7988 42.9609 13.4746 43.2812 13.9551C43.6016 14.4355 44.0625 14.6758 44.6641 14.6758C45.2539 14.6758 45.707 14.4453 46.0234 13.9844C46.3398 13.5195 46.5 12.8438 46.5039 11.957V11.541ZM49.8125 16V7.46875H52.8008C53.8359 7.46875 54.6211 7.66797 55.1562 8.06641C55.6914 8.46094 55.959 9.04102 55.959 9.80664C55.959 10.2246 55.8516 10.5938 55.6367 10.9141C55.4219 11.2305 55.123 11.4629 54.7402 11.6113C55.1777 11.7207 55.5215 11.9414 55.7715 12.2734C56.0254 12.6055 56.1523 13.0117 56.1523 13.4922C56.1523 14.3125 55.8906 14.9336 55.3672 15.3555C54.8438 15.7773 54.0977 15.9922 53.1289 16H49.8125ZM51.5703 12.2852V14.5879H53.0762C53.4902 14.5879 53.8125 14.4902 54.043 14.2949C54.2773 14.0957 54.3945 13.8223 54.3945 13.4746C54.3945 12.6934 53.9902 12.2969 53.1816 12.2852H51.5703ZM51.5703 11.043H52.8711C53.7578 11.0273 54.2012 10.6738 54.2012 9.98242C54.2012 9.5957 54.0879 9.31836 53.8613 9.15039C53.6387 8.97852 53.2852 8.89258 52.8008 8.89258H51.5703V11.043ZM62.666 13.7734H59.0918L58.2891 16H57.1289L60.3867 7.46875H61.3711L64.6348 16H63.4805L62.666 13.7734ZM59.4316 12.8477H62.332L60.8789 8.85742L59.4316 12.8477ZM67.1641 15.0801H71.207V16H66.0332V7.46875H67.1641V15.0801ZM73.9355 11.752L76.1621 7.46875H77.4395L74.498 12.8184V16H73.373V12.8184L70.4316 7.46875H71.7207L73.9355 11.752ZM84.791 8.39453H82.0488V16H80.9297V8.39453H78.1934V7.46875H84.791V8.39453ZM87.5137 16H86.3887V7.46875H87.5137V16ZM96.1016 13.293C95.9961 14.1953 95.6621 14.8926 95.0996 15.3848C94.541 15.873 93.7969 16.1172 92.8672 16.1172C91.8594 16.1172 91.0508 15.7559 90.4414 15.0332C89.8359 14.3105 89.5332 13.3438 89.5332 12.1328V11.3125C89.5332 10.5195 89.6738 9.82227 89.9551 9.2207C90.2402 8.61914 90.6426 8.1582 91.1621 7.83789C91.6816 7.51367 92.2832 7.35156 92.9668 7.35156C93.873 7.35156 94.5996 7.60547 95.1465 8.11328C95.6934 8.61719 96.0117 9.31641 96.1016 10.2109H94.9707C94.873 9.53125 94.6602 9.03906 94.332 8.73438C94.0078 8.42969 93.5527 8.27734 92.9668 8.27734C92.248 8.27734 91.6836 8.54297 91.2734 9.07422C90.8672 9.60547 90.6641 10.3613 90.6641 11.3418V12.168C90.6641 13.0938 90.8574 13.8301 91.2441 14.377C91.6309 14.9238 92.1719 15.1973 92.8672 15.1973C93.4922 15.1973 93.9707 15.0566 94.3027 14.7754C94.6387 14.4902 94.8613 13.9961 94.9707 13.293H96.1016ZM100.406 12.1973C99.4414 11.9199 98.7383 11.5801 98.2969 11.1777C97.8594 10.7715 97.6406 10.2715 97.6406 9.67773C97.6406 9.00586 97.9082 8.45117 98.4434 8.01367C98.9824 7.57227 99.6816 7.35156 100.541 7.35156C101.127 7.35156 101.648 7.46484 102.105 7.69141C102.566 7.91797 102.922 8.23047 103.172 8.62891C103.426 9.02734 103.553 9.46289 103.553 9.93555H102.422C102.422 9.41992 102.258 9.01562 101.93 8.72266C101.602 8.42578 101.139 8.27734 100.541 8.27734C99.9863 8.27734 99.5527 8.40039 99.2402 8.64648C98.9316 8.88867 98.7773 9.22656 98.7773 9.66016C98.7773 10.0078 98.9238 10.3027 99.2168 10.5449C99.5137 10.7832 100.016 11.002 100.723 11.2012C101.434 11.4004 101.988 11.6211 102.387 11.8633C102.789 12.1016 103.086 12.3809 103.277 12.7012C103.473 13.0215 103.57 13.3984 103.57 13.832C103.57 14.5234 103.301 15.0781 102.762 15.4961C102.223 15.9102 101.502 16.1172 100.6 16.1172C100.014 16.1172 99.4668 16.0059 98.959 15.7832C98.4512 15.5566 98.0586 15.248 97.7812 14.8574C97.5078 14.4668 97.3711 14.0234 97.3711 13.5273H98.502C98.502 14.043 98.6914 14.4512 99.0703 14.752C99.4531 15.0488 99.9629 15.1973 100.6 15.1973C101.193 15.1973 101.648 15.0762 101.965 14.834C102.281 14.5918 102.439 14.2617 102.439 13.8438C102.439 13.4258 102.293 13.1035 102 12.877C101.707 12.6465 101.176 12.4199 100.406 12.1973ZM105.895 14.5C106.16 14.5 106.365 14.5762 106.51 14.7285C106.654 14.877 106.727 15.0645 106.727 15.291C106.727 15.5137 106.654 15.6992 106.51 15.8477C106.365 15.9922 106.16 16.0645 105.895 16.0645C105.641 16.0645 105.439 15.9922 105.291 15.8477C105.143 15.7031 105.068 15.5176 105.068 15.291C105.068 15.0645 105.141 14.877 105.285 14.7285C105.43 14.5762 105.633 14.5 105.895 14.5ZM108.359 12.7832C108.359 11.7988 108.59 11.0137 109.051 10.4277C109.516 9.83789 110.131 9.54297 110.896 9.54297C111.619 9.54297 112.188 9.79492 112.602 10.2988L112.666 9.66016H113.949V15.8066C113.949 16.6387 113.689 17.2949 113.17 17.7754C112.654 18.2559 111.957 18.4961 111.078 18.4961C110.613 18.4961 110.158 18.3984 109.713 18.2031C109.271 18.0117 108.936 17.7598 108.705 17.4473L109.379 16.5918C109.816 17.1113 110.355 17.3711 110.996 17.3711C111.469 17.3711 111.842 17.2422 112.115 16.9844C112.389 16.7305 112.525 16.3555 112.525 15.8594V15.4316C112.115 15.8887 111.568 16.1172 110.885 16.1172C110.143 16.1172 109.535 15.8223 109.062 15.2324C108.594 14.6426 108.359 13.8262 108.359 12.7832ZM109.777 12.9062C109.777 13.543 109.906 14.0449 110.164 14.4121C110.426 14.7754 110.787 14.957 111.248 14.957C111.822 14.957 112.248 14.7109 112.525 14.2188V11.4297C112.256 10.9492 111.834 10.709 111.26 10.709C110.791 10.709 110.426 10.8945 110.164 11.2656C109.906 11.6367 109.777 12.1836 109.777 12.9062ZM115.418 12.7832C115.418 11.7988 115.648 11.0137 116.109 10.4277C116.574 9.83789 117.189 9.54297 117.955 9.54297C118.678 9.54297 119.246 9.79492 119.66 10.2988L119.725 9.66016H121.008V15.8066C121.008 16.6387 120.748 17.2949 120.229 17.7754C119.713 18.2559 119.016 18.4961 118.137 18.4961C117.672 18.4961 117.217 18.3984 116.771 18.2031C116.33 18.0117 115.994 17.7598 115.764 17.4473L116.438 16.5918C116.875 17.1113 117.414 17.3711 118.055 17.3711C118.527 17.3711 118.9 17.2422 119.174 16.9844C119.447 16.7305 119.584 16.3555 119.584 15.8594V15.4316C119.174 15.8887 118.627 16.1172 117.943 16.1172C117.201 16.1172 116.594 15.8223 116.121 15.2324C115.652 14.6426 115.418 13.8262 115.418 12.7832ZM116.836 12.9062C116.836 13.543 116.965 14.0449 117.223 14.4121C117.484 14.7754 117.846 14.957 118.307 14.957C118.881 14.957 119.307 14.7109 119.584 14.2188V11.4297C119.314 10.9492 118.893 10.709 118.318 10.709C117.85 10.709 117.484 10.8945 117.223 11.2656C116.965 11.6367 116.836 12.1836 116.836 12.9062Z\" fill=\"white\" />\n            <defs>\n                <clipPath id=\"clip0\">\n                    <rect width=\"21.75\" height=\"24\" fill=\"white\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n\nexport default MobalyticsLogo;","import GamesAnalyzed from '../games-analyzed';\nimport MoreBuilds from '../more-builds';\nimport PoweredBy from '../powered-by';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\n\nconst FooterStyles = tw(FlexRow)`bg-widget-purple rounded-b-md p-3.5 border-t border-widget-white-line`;\n\nconst Footer = () => {\n\n    return (\n        <FooterStyles>\n            <GamesAnalyzed />\n            <MoreBuilds />\n            <PoweredBy />\n        </FooterStyles>\n    );\n};\n\nexport default Footer;","import Header from './components/header';\nimport Body from './components/body';\nimport Footer from './components/footer';\nimport tw from 'twin.macro';\n\nconst Container = tw.div`flex flex-col items-stretch justify-between min-h-full border-widget-purple-border bg-widget-purple-light text-white rounded-md font-sans`;\n\nconst App = () => {\n\n  return (\n    <Container>\n      <Header />\n      <Body />\n      <Footer />\n    </Container>\n  );\n};\n\nexport default App;","import habitat from 'preact-habitat';\nimport GlobalStyles from './app/styles/global-styles';\nimport App from './app';\nimport Context from './app/lib/context'\nimport { setup } from 'goober';\n\n/* eslint-disable no-undef */\nsetup(h);\n\nconst Widget = (props) => {\n\n    return (\n        <>\n            <Context {...props}>\n                <GlobalStyles />\n                <App />\n            </Context>\n        </>\n    );\n};\n\nconst { render } = habitat(Widget);\n\nrender({\n    selector: '[data-moba-widget=\"build\"]',\n    clean: true\n});"],"sourceRoot":""}