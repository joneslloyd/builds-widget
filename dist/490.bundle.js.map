{"version":3,"sources":["webpack://mobalytics-builds-widget/./src/widget/app/components/full-runes-body-row/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/full-runes-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/full-runes-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-runes-rune-group/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/full-runes/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/rune/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/perk-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/perk-tooltip-wrapper/index.js"],"names":["index","data","totalItems","type","styled","useStyled","FullRunesBodyRowStyles","topSpace","justifyContentSpaceBetween","FullRunesBodyRowRune","leftSpace","hasCircle","runes","runeSize","runeBorderWidth","map","runeData","runeIndex","rune","hasRune","by","identifier","cursor","greyed","id","wh","borderWidth","rounded","gold","children","rest","FullRunesDisplayC","loading","FullRunesDisplayU","LoadingText","mainId","iDs","isLoading","FullRunesRuneGroupStyles","FullRunesDisplay","FullRunesTitle","FullRunesRuneTitle","SmallWhiteText","FullRunesBody","thisRuneSlot","RunesSlotsMap","r","title","icon","label","theTitle","slots","theSlots","theRunes","s","i","includes","outerLeftSpace","row","rowIndex","length","key","memo","FullRunesStyles","FlexCol","FullRunesSmallWhiteText","FullRunesDisplayRow","FlexRow","FullRunesDisplayStyles","daData","lol","champion","build","perks","useDataApi","useLoading","IDs","style","primaryId","subStyle","secondaryId","wrapComponents","RoundedGoldBorder","none","WrapComponentStyles","width","height","src","perkImage","bgColor","ttData","setTtData","useTooltips","localTooltip","setLocalTooltip","useState","setLocalTooltipRes","useCallback","ttRes","doSetLocalTooltipRes","doTooltip","async","maybeFetchTooltip","useAsync","name","iconName","iconUrl","description","longDescription","shortDescription","customDescription","tooltipFn"],"mappings":"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","file":"490.bundle.js","sourcesContent":["import Rune from '../rune';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport PerkTooltipWrapper from '../tooltips/perk-tooltip-wrapper';\n\nconst FullRunesBodyRow = ({ index = 0, data = {}, totalItems = 0, type = 'primary' }) => {\n\n    const styled = useStyled();\n\n    const FullRunesBodyRowStyles = styled('div')(({ topSpace = false, justifyContentSpaceBetween = false }) => [\n        tw`flex flex-row w-full justify-center`,\n        'normal' === topSpace ? tw`pt-2.5` : tw``,\n        'large' === topSpace ? tw`pt-5` : tw``,\n        'x-large' === topSpace ? tw`pt-8` : tw``,\n        true === justifyContentSpaceBetween ? tw`justify-between` : tw``\n    ]);\n    const FullRunesBodyRowRune = styled('div')(({ leftSpace = false }) => [\n        tw`px-0`,\n        'normal' === leftSpace ? tw`pl-2.5` : tw``,\n        'large' === leftSpace ? tw`pl-5` : tw``,\n        'x-large' === leftSpace ? tw`pl-8` : tw``,\n    ]);\n\n    const { hasCircle, runes } = data;\n    const runeSize = 'primary' === type ? (index === 0 ? 48 : 36) : (index === totalItems - 1 ? 24 : 36);\n    const topSpace = index === 0 ? false : ('secondary' === type && index === totalItems - 1 ? 'x-large' : 'large');\n    const justifyContentSpaceBetween = ('secondary' === type && index === 0) ? true : false;\n    const runeBorderWidth = index === ('secondary' === type && index === totalItems - 1) ? '1px' : '2px';\n\n    return (\n        <FullRunesBodyRowStyles key={index} topSpace={topSpace} justifyContentSpaceBetween={justifyContentSpaceBetween}>\n            {runes && runes.map((runeData, runeIndex) => {\n\n                const { rune, hasRune } = runeData;\n                const leftSpace = runeIndex === 0 ? false : (index === 0 ? 'normal' : (('secondary' === type && index === totalItems - 1) ? 'x-large' : 'large'));\n\n                return (\n                    <FullRunesBodyRowRune leftSpace={leftSpace}>\n                        <PerkTooltipWrapper by=\"riotId\" identifier={rune}>\n                            <Rune cursor=\"help\" greyed={!hasRune} key={rune} id={rune} wh={runeSize} borderWidth={runeBorderWidth} rounded={hasCircle} gold={hasRune && hasCircle} />\n                        </PerkTooltipWrapper>\n                    </FullRunesBodyRowRune>\n                );\n            })}\n        </FullRunesBodyRowStyles>\n    );\n};\n\nexport default FullRunesBodyRow;","import tw from 'twin.macro';\n\nconst FullRunesDisplay = tw`flex`;\n\nexport default FullRunesDisplay;","import { useStyled } from '../../../lib/context/goober';\nimport FullRunesDisplayU from '../../utils/full-runes-display';\nimport LoadingText from '../../utils/loading-text';\n\nconst FullRunesDisplay = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const FullRunesDisplayC = styled('div')(({ loading }) => [\n        FullRunesDisplayU,\n        (loading) && LoadingText,\n    ]);\n\n    return (\n        <FullRunesDisplayC {...rest}>{children}</FullRunesDisplayC>\n    );\n};\n\nexport default FullRunesDisplay;","import Rune from '../rune';\nimport FullRunesBodyRow from '../full-runes-body-row';\nimport { RunesSlotsMap } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport FullRunesDisplay from '../../styles/components/full-runes-display';\nimport PerkTooltipWrapper from '../tooltips/perk-tooltip-wrapper';\n\nconst FullRunesRuneGroup = ({ mainId, iDs = [], type = 'primary', loading: isLoading = true }) => {\n\n    const styled = useStyled();\n\n    const FullRunesRuneGroupStyles = styled(FullRunesDisplay)(({ leftSpace = false }) => [\n        tw`flex-col`,\n        'normal' === leftSpace ? tw`mt-10 lg:(mt-0 ml-16)` : tw``,\n    ]);\n    const FullRunesTitle = styled('div')(() => [\n        tw`flex flex-row items-center justify-center`,\n    ]);\n    const FullRunesRuneTitle = styled(SmallWhiteText)(() => [\n        tw`text-widget-purple-full-runes-text capitalize text-sm font-bold ml-2`,\n    ]);\n    const FullRunesBody = styled('div')(() => [\n        tw`flex flex-col items-center pt-5`,\n    ]);\n\n\n    //Rune data\n    const thisRuneSlot = RunesSlotsMap.filter(r => {\n        const { title: { icon = 0 } = {} } = r;\n        return icon === mainId;\n    })[0];\n\n    //Rune title\n    const { title: { label: theTitle = 'xxxxxxx' } = {}, slots: theSlots } = thisRuneSlot || {};\n\n    //Rune slots\n    const theRunes = theSlots ? theSlots.map((s, i) => {\n        const hasCircle = i !== 0 ? 'full' : false;\n        const runes = s.map(r => {\n            const hasRune = iDs.includes(r);\n            return {\n                rune: r,\n                hasRune\n            };\n        });\n        return {\n            hasCircle,\n            runes\n        }\n    }) : [\n        {\n            runes: [\n                { rune: false },\n                { rune: false },\n                { rune: false },\n                { rune: false },\n            ],\n            hasCircle: 'primary' === type ? false : 'full'\n        },\n        {\n            runes: [\n                { rune: false },\n                { rune: false },\n                { rune: false },\n                { rune: false },\n            ],\n            hasCircle: 'full'\n        },\n        {\n            runes: [\n                { rune: false },\n                { rune: false },\n                { rune: false },\n                { rune: false },\n            ],\n            hasCircle: 'full'\n        },\n        {\n            runes: [\n                { rune: false },\n                { rune: false },\n                { rune: false },\n                { rune: false },\n            ],\n            hasCircle: 'full'\n        },\n    ];\n\n    const outerLeftSpace = 'secondary' === type ? 'normal' : false;\n    const loading = isLoading || (theTitle === 'xxxxxxx');\n\n    return (\n        <FullRunesRuneGroupStyles leftSpace={outerLeftSpace}>\n            <FullRunesTitle>\n                <PerkTooltipWrapper by=\"riotId\" identifier={mainId}>\n                    <Rune cursor=\"help\" id={mainId} wh={36} rounded={false} />\n                </PerkTooltipWrapper>\n                <FullRunesRuneTitle loading={loading}>{theTitle}</FullRunesRuneTitle>\n            </FullRunesTitle>\n            <FullRunesBody>\n                {theRunes && theRunes.map((row, rowIndex) => {\n                    const totalItems = theRunes.length;\n                    const key = `${rowIndex}-${totalItems}`;\n                    return (\n                        <FullRunesBodyRow key={key} index={rowIndex} totalItems={totalItems} data={row} type={type} />\n                    );\n                })}\n            </FullRunesBody>\n        </FullRunesRuneGroupStyles>\n\n    );\n};\n\nexport default FullRunesRuneGroup;","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport FullRunesRuneGroup from '../full-runes-rune-group';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport FullRunesDisplay from '../../styles/components/full-runes-display';\n\nconst FullRunes = () => {\n\n    const styled = useStyled();\n\n    const FullRunesStyles = styled(FlexCol)(() => [\n        tw`mr-0 w-full xl:(mr-10 w-9/12)`,\n    ]);\n    const FullRunesSmallWhiteText = styled(SmallWhiteText)(() => [\n        tw`uppercase`,\n    ]);\n    const FullRunesDisplayRow = styled(FlexRow)(() => [\n        tw`w-full`,\n    ]);\n    const FullRunesDisplayStyles = styled(FullRunesDisplay)(() => [\n        tw`flex uppercase pt-2.5 flex-col w-full items-center lg:(flex-row items-start)`,\n    ]);\n\n    const { daData: { data: { lol: { champion: { build: { perks = {} } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading = true } = useLoading();\n    const { IDs: iDs = [], style: primaryId = false, subStyle: secondaryId = false } = perks;\n\n    return (\n        <FullRunesStyles>\n            <FullRunesSmallWhiteText>Runes</FullRunesSmallWhiteText>\n            <FullRunesDisplayRow>\n                <FullRunesDisplayStyles>\n                    <FullRunesRuneGroup mainId={primaryId} iDs={iDs} type=\"primary\" loading={loading} />\n                    <FullRunesRuneGroup mainId={secondaryId} iDs={iDs} type=\"secondary\" loading={loading} />\n                </FullRunesDisplayStyles>\n            </FullRunesDisplayRow>\n        </FullRunesStyles>\n    );\n};\n\nexport default memo(FullRunes);","import RoundedGoldBorder from '../rounded-gold-border';\nimport Image from '../image';\nimport { perkImage } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\n\nconst Rune = ({ id, wh = 32, rounded = false, gold = false, leftSpace = false, borderWidth = false, greyed = false, cursor = 'default' }) => {\n\n    const styled = useStyled();\n\n    const RoundedGoldBorderStyles = styled(RoundedGoldBorder)(() => [\n        tw``,\n    ]);\n    const NoWrapStyles = styled('div')(() => [\n        tw``,\n    ]);\n\n    const wrapComponents = {\n        gold: RoundedGoldBorderStyles,\n        none: NoWrapStyles\n    };\n    const WrapComponent = gold ? wrapComponents.gold : wrapComponents.none;\n    const WrapComponentStyles = styled(WrapComponent)(({ leftSpace }) => [\n        tw`z-10`,\n        'large' === leftSpace ? tw`ml-4!` : tw``,\n        'normal' === leftSpace ? tw`ml-3!` : tw``,\n        'small' === leftSpace ? tw`ml-2!` : tw``,\n        'smaller' === leftSpace ? tw`ml-1!` : tw``,\n        'smallest' === leftSpace ? tw`ml-0.5!` : tw``,\n        { width: `${wh}px`, height: `${wh}px` },\n        true === greyed && {\n            'opacity': '0.5',\n            'mix-blend-mode': 'luminosity'\n        },\n    ]);\n\n    const src = perkImage(id);\n\n    return (\n        <WrapComponentStyles leftSpace={leftSpace} borderWidth={borderWidth} greyed={greyed}>\n            <Image src={src} rounded={rounded} width={wh} height={wh} bgColor={false} leftSpace={leftSpace} cursor={cursor} />\n        </WrapComponentStyles>\n    );\n};\n\nexport default Rune;","import { memo } from 'preact/compat';\nimport { useCallback, useState } from 'preact/hooks';\nimport useAsync from '../../../lib/hooks/use-async';\nimport { perkImage } from '../../../lib/helpers';\nimport { useTooltips } from '../../../lib/context/tooltips';\nimport { maybeFetchTooltip } from '../../../lib/tooltips';\nimport {\n    GameTooltip,\n    GameTooltipEmpty,\n} from '../game-tooltip';\n\nexport const PerkTooltip = ({ by = 'riotId', identifier = false }) => {\n\n    const { ttData, setTtData } = useTooltips();\n    const [localTooltip, setLocalTooltip] = useState(false);\n\n    //Set state of tooltip\n    const doSetLocalTooltipRes = (ttRes) => {\n        if (ttRes) {\n            setLocalTooltip(ttRes)\n        }\n    };\n\n    const setLocalTooltipRes = useCallback((ttRes) => {\n        doSetLocalTooltipRes(ttRes);\n    }, []);\n    //Get the tooltip\n    const doTooltip = useCallback(async () => {\n        //Only get it if there's a identifier set\n        if (identifier) {\n            return await maybeFetchTooltip('perk', by, identifier, ttData, setTtData);\n        }\n    }, [identifier]);\n\n    useAsync(doTooltip, setLocalTooltipRes);\n\n    return localTooltip ? (\n        <GameTooltip\n            name={localTooltip.name}\n            iconName={localTooltip.name}\n            iconUrl={perkImage(identifier)}\n            description={localTooltip.longDescription || localTooltip.shortDescription || localTooltip.customDescription}\n        />\n    ) : (\n        <GameTooltipEmpty />\n    );\n};\n\nexport default memo(PerkTooltip);","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport PerkTooltip from '../perk-tooltip';\nimport { TransparentTooltip } from '../../../styles/components/transparent-tooltip';\n\nconst PerkTooltipWrapper = ({ by, identifier, children }) => {\n\n    const tooltipFn = useCallback(() => <PerkTooltip by={by} identifier={identifier} />, [identifier]);\n\n    return (identifier && (\n        <TransparentTooltip tooltipFn={tooltipFn}>\n            <span style=\"z-index: 10;\">{children}</span>\n        </TransparentTooltip>\n    ));\n};\n\nexport default memo(PerkTooltipWrapper);"],"sourceRoot":""}