{"version":3,"sources":["webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/compact-runes-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/compact-runes-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/compact-runes/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/rune/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/perk-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/perk-tooltip-wrapper/index.js"],"names":["children","rest","CompactRunesDisplayC","useStyled","styled","loading","parseStyles","CompactRunesDisplayU","LoadingText","memo","CompactRunesStyles","FlexCol","CompactRunesSmallWhiteText","SmallWhiteText","CompactRunesDisplayStyles","CompactRunesDisplay","RuneGroup","leftSpace","line","FirstRuneGroup","LastRuneGroups","daData","data","lol","champion","build","perks","useDataApi","isLoading","useLoading","IDs","iDs","style","primaryId","subStyle","secondaryId","primaryLine","useCallback","getLineColorFromIcon","getPrimaryLine","secondaryLine","getSecondaryLine","by","identifier","cursor","id","wh","rounded","gold","borderWidth","greyed","wrapComponents","RoundedGoldBorder","none","WrapComponentStyles","width","height","src","perkImage","bgColor","ttData","setTtData","useTooltips","localTooltip","setLocalTooltip","useState","setLocalTooltipRes","ttRes","doSetLocalTooltipRes","doTooltip","async","maybeFetchTooltip","useAsync","name","iconName","iconUrl","description","longDescription","shortDescription","customDescription","tooltipFn"],"mappings":"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","file":"676.bundle.js","sourcesContent":["import tw from 'twin.macro';\n\nconst CompactRunesDisplay = tw`flex`;\n\nexport default CompactRunesDisplay;","import { useStyled } from '../../../lib/context/goober';\nimport tw from 'twin.macro';\nimport { parseStyles } from '../../../lib/helpers';\nimport CompactRunesDisplayU from '../../utils/compact-runes-display';\nimport LoadingText from '../../utils/loading-text';\n\nconst CompactRunesDisplay = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const CompactRunesDisplayC = styled('div')(({ loading }) => {\n        return parseStyles([\n            CompactRunesDisplayU,\n            loading ? LoadingText : tw``,\n        ]);\n    });\n\n    return (\n        <CompactRunesDisplayC {...rest}>{children}</CompactRunesDisplayC>\n    );\n};\n\nexport default CompactRunesDisplay;","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { useCallback } from 'preact/hooks';\nimport Rune from '../rune';\nimport { getLineColorFromIcon, parseStyles } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport CompactRunesDisplay from '../../styles/components/compact-runes-display';\nimport PerkTooltipWrapper from '../tooltips/perk-tooltip-wrapper';\n\nconst CompactRunes = () => {\n\n    const styled = useStyled();\n\n    const CompactRunesStyles = styled(FlexCol)(() => {\n        return parseStyles([\n            tw`mr-0 xl:(mr-10 w-9/12)`,\n        ]);\n    });\n    const CompactRunesSmallWhiteText = styled(SmallWhiteText)(() => {\n        return parseStyles([\n            tw`uppercase`,\n        ]);\n    });\n    const CompactRunesDisplayStyles = styled(CompactRunesDisplay)(() => {\n        return parseStyles([\n            tw`flex flex-col uppercase pt-2.5 md:(flex-row)`,\n        ]);\n    });\n    const RuneGroup = styled(CompactRunesDisplay)(({ leftSpace, line = false, loading = true }) => {\n        return parseStyles([\n            tw`items-center relative bg-transparent!`,\n            'large' === leftSpace ? tw`ml-8` : tw``,\n            'largeMd' === leftSpace ? tw`md:ml-8` : tw``,\n            'normal' === leftSpace ? tw`ml-7` : tw``,\n            'small' === leftSpace ? tw`ml-6` : tw``,\n            'very-small' === leftSpace ? tw`ml-3` : tw``,\n            (true === loading && 'gold' === line) ? tw`before:(absolute z-0 inset-53p left-6 content block w-9/12 h-0.5 bg-widget-gold-line outline-widget-gold-outer-line animate-pulse)` : tw``,\n            (false === loading && 'gold' === line) ? tw`before:(absolute z-0 inset-53p left-6 content block w-9/12 h-0.5 bg-widget-gold-line outline-widget-gold-outer-line)` : tw``,\n            (true === loading && 'blue' === line) ? tw`before:(absolute z-0 inset-53p left-7 content block w-9/12 h-0.5 bg-widget-blue-line outline-widget-blue-outer-line animate-pulse)` : tw``,\n            (false === loading && 'blue' === line) ? tw`before:(absolute z-0 inset-53p left-7 content block w-9/12 h-0.5 bg-widget-blue-line outline-widget-blue-outer-line)` : tw``,\n            (true === loading && 'red' === line) ? tw`before:(absolute z-0 inset-53p left-7 content block w-9/12 h-0.5 bg-widget-red-line outline-widget-red-outer-line animate-pulse)` : tw``,\n            (false === loading && 'red' === line) ? tw`before:(absolute z-0 inset-53p left-7 content block w-9/12 h-0.5 bg-widget-red-line outline-widget-red-outer-line)` : tw``,\n            (true === loading && 'green' === line) ? tw`before:(absolute z-0 inset-53p left-7 content block w-9/12 h-0.5 bg-widget-green-line outline-widget-green-outer-line animate-pulse)` : tw``,\n            (false === loading && 'green' === line) ? tw`before:(absolute z-0 inset-53p left-7 content block w-9/12 h-0.5 bg-widget-green-line outline-widget-green-outer-line)` : tw``,\n            (true === loading && 'purple' === line) ? tw`before:(absolute z-0 inset-53p left-7 content block w-9/12 h-0.5 bg-widget-purple-line outline-widget-purple-outer-line animate-pulse)` : tw``,\n            (false === loading && 'purple' === line) ? tw`before:(absolute z-0 inset-53p left-7 content block w-9/12 h-0.5 bg-widget-purple-line outline-widget-purple-outer-line)` : tw``,\n        ]);\n    });\n\n    const FirstRuneGroup = styled(RuneGroup)(() => {\n        return parseStyles([\n            tw`before:(w-8/12) md:(before:(w-9/12))`,\n        ]);\n    });\n    const LastRuneGroups = styled('div')(() => {\n        return parseStyles([\n            tw`flex pt-2.5 md:(pt-0)`,\n        ]);\n    });\n\n    const { daData: { data: { lol: { champion: { build: { perks = {} } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const { IDs: iDs = [], style: primaryId = false, subStyle: secondaryId = false } = perks;\n\n    const getPrimaryLine = useCallback(() => {\n        return getLineColorFromIcon(primaryId);\n    }, [primaryId]);\n\n    const primaryLine = getPrimaryLine();\n\n    const getSecondaryLine = useCallback(() => {\n        return getLineColorFromIcon(secondaryId);\n    }, [secondaryId]);\n\n    const secondaryLine = getSecondaryLine();\n\n    const loading = isLoading || (!primaryId);\n\n    return (\n        <CompactRunesStyles>\n            <CompactRunesSmallWhiteText>Runes</CompactRunesSmallWhiteText>\n            <FlexRow>\n                <CompactRunesDisplayStyles>\n                    <FirstRuneGroup line={primaryLine} loading={loading}>\n                        <PerkTooltipWrapper by=\"riotId\" identifier={primaryId}>\n                            <Rune cursor=\"help\" id={primaryId} wh={36} rounded={false} />\n                        </PerkTooltipWrapper>\n                        <PerkTooltipWrapper by=\"riotId\" identifier={iDs[0]}>\n                            <Rune cursor=\"help\" id={iDs[0]} wh={48} rounded={false} leftSpace=\"smallest\" />\n                        </PerkTooltipWrapper>\n                        <PerkTooltipWrapper by=\"riotId\" identifier={iDs[1]}>\n                            <Rune cursor=\"help\" id={iDs[1]} wh={32} rounded=\"full\" gold={true} leftSpace=\"small\" />\n                        </PerkTooltipWrapper>\n                        <PerkTooltipWrapper by=\"riotId\" identifier={iDs[2]}>\n                            <Rune cursor=\"help\" id={iDs[2]} wh={32} rounded=\"full\" gold={true} leftSpace=\"large\" />\n                        </PerkTooltipWrapper>\n                        <PerkTooltipWrapper by=\"riotId\" identifier={iDs[3]}>\n                            <Rune cursor=\"help\" id={iDs[3]} wh={32} rounded=\"full\" gold={true} leftSpace=\"large\" />\n                        </PerkTooltipWrapper>\n                    </FirstRuneGroup>\n                    <LastRuneGroups>\n                        <RuneGroup leftSpace=\"largeMd\" line={secondaryLine} loading={loading}>\n                            <PerkTooltipWrapper by=\"riotId\" identifier={secondaryId}>\n                                <Rune cursor=\"help\" id={secondaryId} wh={36} rounded={false} />\n                            </PerkTooltipWrapper>\n                            <PerkTooltipWrapper by=\"riotId\" identifier={iDs[4]}>\n                                <Rune cursor=\"help\" id={iDs[4]} wh={32} rounded=\"full\" gold={true} leftSpace=\"normal\" />\n                            </PerkTooltipWrapper>\n                            <PerkTooltipWrapper by=\"riotId\" identifier={iDs[4]}>\n                                <Rune cursor=\"help\" id={iDs[4]} wh={32} rounded=\"full\" gold={true} leftSpace=\"large\" />\n                            </PerkTooltipWrapper>\n                        </RuneGroup>\n                        <RuneGroup leftSpace=\"small\" loading={loading}>\n                            <PerkTooltipWrapper by=\"riotId\" identifier={iDs[6]}>\n                                <Rune cursor=\"help\" id={iDs[6]} wh={24} rounded=\"full\" gold={true} borderWidth=\"1px\" />\n                            </PerkTooltipWrapper>\n                            <PerkTooltipWrapper by=\"riotId\" identifier={iDs[7]}>\n                                <Rune cursor=\"help\" id={iDs[7]} wh={24} rounded=\"full\" gold={true} leftSpace=\"large\" borderWidth=\"1px\" />\n                            </PerkTooltipWrapper>\n                            <PerkTooltipWrapper by=\"riotId\" identifier={iDs[8]}>\n                                <Rune cursor=\"help\" id={iDs[8]} wh={24} rounded=\"full\" gold={true} leftSpace=\"large\" borderWidth=\"1px\" />\n                            </PerkTooltipWrapper>\n                        </RuneGroup>\n                    </LastRuneGroups>\n                </CompactRunesDisplayStyles>\n            </FlexRow>\n        </CompactRunesStyles>\n    );\n};\n\nexport default memo(CompactRunes);","import RoundedGoldBorder from '../rounded-gold-border';\nimport Image from '../image';\nimport { parseStyles, perkImage } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\n\nconst Rune = ({ id, wh = 32, rounded = false, gold = false, leftSpace = false, borderWidth = false, greyed = false, cursor = 'default' }) => {\n\n    const styled = useStyled();\n\n    const RoundedGoldBorderStyles = styled(RoundedGoldBorder)(() => {\n        return parseStyles([\n            tw``,\n        ]);\n    });\n    const NoWrapStyles = styled('div')(() => {\n        return parseStyles([\n            tw``,\n        ]);\n    });\n\n    const wrapComponents = {\n        gold: RoundedGoldBorderStyles,\n        none: NoWrapStyles\n    };\n    const WrapComponent = gold ? wrapComponents.gold : wrapComponents.none;\n    const WrapComponentStyles = styled(WrapComponent)(({ leftSpace }) => {\n        return parseStyles([\n            tw`z-10`,\n            'large' === leftSpace ? tw`ml-4!` : tw``,\n            'normal' === leftSpace ? tw`ml-3!` : tw``,\n            'small' === leftSpace ? tw`ml-2!` : tw``,\n            'smaller' === leftSpace ? tw`ml-1!` : tw``,\n            'smallest' === leftSpace ? tw`ml-0.5!` : tw``,\n            { width: `${wh}px`, height: `${wh}px` },\n            true === greyed ? {\n                'opacity': '0.5',\n                'mix-blend-mode': 'luminosity'\n            } : tw``,\n        ]);\n    });\n\n    const src = perkImage(id);\n\n    return (\n        <WrapComponentStyles leftSpace={leftSpace} borderWidth={borderWidth} greyed={greyed}>\n            <Image src={src} rounded={rounded} width={wh} height={wh} bgColor={false} leftSpace={leftSpace} cursor={cursor} />\n        </WrapComponentStyles>\n    );\n};\n\nexport default Rune;","import { memo } from 'preact/compat';\nimport { useCallback, useState } from 'preact/hooks';\nimport useAsync from '../../../lib/hooks/use-async';\nimport { perkImage } from '../../../lib/helpers';\nimport { useTooltips } from '../../../lib/context/tooltips';\nimport { maybeFetchTooltip } from '../../../lib/tooltips';\nimport {\n    GameTooltip,\n    GameTooltipEmpty,\n} from '../game-tooltip';\n\nexport const PerkTooltip = ({ by = 'riotId', identifier = false }) => {\n\n    const { ttData, setTtData } = useTooltips();\n    const [localTooltip, setLocalTooltip] = useState(false);\n\n    //Set state of tooltip\n    const doSetLocalTooltipRes = (ttRes) => {\n        if (ttRes) {\n            setLocalTooltip(ttRes)\n        }\n    };\n\n    const setLocalTooltipRes = useCallback((ttRes) => {\n        doSetLocalTooltipRes(ttRes);\n    }, []);\n    //Get the tooltip\n    const doTooltip = useCallback(async () => {\n        //Only get it if there's a identifier set\n        if (identifier) {\n            return await maybeFetchTooltip('perk', by, identifier, ttData, setTtData);\n        }\n    }, [identifier]);\n\n    useAsync(doTooltip, setLocalTooltipRes);\n\n    return localTooltip ? (\n        <GameTooltip\n            name={localTooltip.name}\n            iconName={localTooltip.name}\n            iconUrl={perkImage(identifier)}\n            description={localTooltip.longDescription || localTooltip.shortDescription || localTooltip.customDescription}\n        />\n    ) : (\n        <GameTooltipEmpty />\n    );\n};\n\nexport default memo(PerkTooltip);","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport PerkTooltip from '../perk-tooltip';\nimport { TransparentTooltip } from '../../../styles/components/transparent-tooltip';\n\nconst PerkTooltipWrapper = ({ by, identifier, children }) => {\n\n    const tooltipFn = useCallback(() => <PerkTooltip by={by} identifier={identifier} />, [identifier]);\n\n    return (identifier && (\n        <TransparentTooltip tooltipFn={tooltipFn}>\n            <span style=\"z-index: 10;\">{children}</span>\n        </TransparentTooltip>\n    ));\n};\n\nexport default memo(PerkTooltipWrapper);"],"sourceRoot":""}