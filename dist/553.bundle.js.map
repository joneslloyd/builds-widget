{"version":3,"sources":["webpack://mobalytics-builds-widget/./src/widget/app/components/dynamic-svg/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/image/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/rounded-gold-border/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/spell-item/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/rich-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/base-tooltip-rich-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/base-tooltip-wrapper/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/game-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/avatar/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/standard-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/normal-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/name/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/role/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/patch/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/win-rate/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/matches/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/header/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/runes/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/spells-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/spells-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/summoner-spell-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/summoner-spell-tooltip-wrapper/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/spells/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/game-item-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/game-item-tooltip-wrapper/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/item-set/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/items-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/items-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/items/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/skills/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/body/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/platinum-plus-icon/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/games-analyzed/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/more-builds-icon/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/more-builds/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/mark/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/brand-name/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/powered-by/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/footer/index.js","webpack://mobalytics-builds-widget/./src/widget/app/index.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/tooltips/helpers.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/data/index.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/tooltips/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/flex-col/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/flex-row/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/small-purple-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/small-white-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/lazy-tippy/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/tooltip-wrapper/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/transparent-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/loading-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/small-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components|lazy|/^\\.\\/.*\\-runes\\/index\\.js$/|groupOptions: {}|namespace object","webpack://mobalytics-builds-widget/./src/widget/app/components|lazy|/^\\.\\/.*\\-skills\\/index\\.js$/|groupOptions: {}|namespace object","webpack://mobalytics-builds-widget/./src/widget/app/images|lazy|/^\\.\\/.*\\.svg$/|groupOptions: {}|namespace object"],"names":["name","rest","DynamicSvgComponent","loadable","memo","src","alt","title","width","height","rounded","bgColor","cursor","styled","useStyled","loading","setLoading","useState","setLoadingFalseFunc","useCallback","setLoadingFalse","doSetLoadingFalse","useEffect","ImageLoadingStyles","parseStyles","ImageStyles","onLoad","children","borderWidth","RoundedGoldBorderStyles","slug","wh","type","leftSpace","bottomSpace","topSpace","overlay","SpellItemStyles","summonerSpellIcon","gameItemIcon","getSkillIcon","RichText","className","markdownText","Wrapper","markdown","WrapperC","LolRichText","props","GameItemTooltipRichText","processedMarkdown","processCustomHtmlTags","undefined","StyledLolRichText","StyledLolRichTextC","BaseTooltipWrapper","BaseTooltipWrapperC","GameTooltip","iconUrl","description","ItemWrapper","ItemHeader","ItemHeaderIcon","ItemTitle","ItemWrapperC","ItemHeaderC","ItemHeaderIconC","ItemTitleC","GameTooltipEmpty","GameTooltipEmptyC","AvatarStyles","daData","data","lol","champion","build","championSlug","useDataApi","sqData","squidexData","useSquidexApi","isLoading","useLoading","championCommonInfo","flatData","avatarUrl","championImage","altTitle","NormalTextC","StandardText","LoadingText","useStaticGlobalProps","NameStyles","nameTitle","RoleStyles","FlexRow","RoleSmallPurpleText","SmallPurpleText","role","rawRole","toLowerCase","roleIcon","rolenameIcon","PatchStyles","PatchSmallPurpleText","PatchSmallWhiteText","SmallWhiteText","patch","WinRateStyles","WinRateSmallPurpleText","WinRateSmallGreenText","stats","winRateHistory","latestWinRateHistoryItem","value","winRateRaw","winRateFunction","roundWinRate","winRate","MatchesStyles","MatchesSmallPurpleText","MatchesSmallWhiteText","matchCount","matchCountRaw","commaNumber","HeaderStyles","NamePatchStyles","FlexCol","layout","DynamicRunes","SpellsDisplayC","SpellsDisplayU","ttData","setTtData","useTooltips","localTooltip","setLocalTooltip","setLocalTooltipRes","ttRes","doSetLocalTooltipRes","doTooltip","async","maybeFetchTooltip","useAsync","iconName","tooltipFn","style","SpellsStyles","SpellsSmallWhiteText","SpellsDisplayStyles","SpellsDisplay","spells","querySummonersSpellsV1Contents","squidexSpells","spellData","useMemo","length","filter","i","includes","parseInt","riotId","firstSlug","secondSlug","by","identifier","effectDescription","items","ItemSetStyles","ItemSetSmallPurpleText","ItemSetDisplayStyles","map","c","key","ItemsDisplayC","ItemsDisplayU","ItemsStyles","ItemsStylesRow","ItemsSmallWhiteText","ItemsDisplayStyles","ItemsDisplay","ItemSetGroup","paddingTop","dummyData","DynamicSkills","BodyStyles","posterUrl","BodyRowCol","pt","hiddenBelowMd","championPosterImage","GamesAnalyzedStyles","GamesAnalyzedSmallLightestPurpleText","GamesAnalyzedSmallPurpleTextSmaller","GamesAnalyzedSmallPurpleTextLarger","getMatchCount","MoreBuildsStyles","MoreBuildsLoading","MoreBuildsSmallGoldText","MoreBuildsIconStyled","MoreBuildsIcon","moreBuildsLinkText","moreBuildsLinkHref","as","href","target","BrandNameStyles","dangerouslySetInnerHTML","__html","PoweredByStyles","PoweredBySmallPurpleText","PoweredByMark","Mark","FooterStyles","loaded","setLoaded","validRole","hasBuild","Container","NoBuild","Object","keys","Rolename","r","join","verticalPlacements","isVerticalPlacement","placement","isConnectedChampionCommonAbility","activationKey","getChampionAbilityLabelAndColor","keyOrLabel","validateStrEnumValue","SkillKey","SkillKeyColor","SkillKeyLetter","colors","queryKey","freeze","SPELL_BY_FILTER","PERK_BY_FILTER","ITEM_BY_FILTER","ABILITY_BY_FILTER","getDataByFilter","query","squidexApiClient","toPromise","getSquidexTooltipBySlug","tooltipQuery","queryText","Number","isInteger","getSquidexTooltipByRiotId","setTooltipsLoading","tooltips","setTooltips","tooltip","isFetchedOb","find","t","toolTipAlreadyFetched","getFunc","res","error","setTooltipsError","firstItem","existingTooltip","addTooltip","getTooltip","FlexColC","FlexRowC","SmallPurpleTextC","SmallText","SmallWhiteTextC","LazyTippy","mounted","setMounted","onShow","onHide","lazyPlugin","fn","renderFunc","args","d","parentRaw","parent","appendTo","render","doRenderFunc","computedProps","plugins","content","defaultOffset","tooltipParent","appendToFunc","trigger","isDisabled","interactive","offset","hideOnClick","visible","onTooltipShow","onTooltipHide","onClickOutside","scale","renderer","tooltipRenderingProps","tippyCss","reactPopperTooltipCss","popperOptionsModifyCb","state","isDef","styles","popper","transform","popperOptions","strategy","modifiers","enabled","phase","offsetFn","offsetSrc","skidding","distance","disabled","TransparentTooltip","TransparentTooltipC","TooltipWrapper","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","module","exports","all","slice"],"mappings":"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","file":"553.bundle.js","sourcesContent":["import loadable from '@loadable/component';\n\n//Courtesy of: https://medium.com/@erickhoury/react-dynamically-importing-svgs-and-render-as-react-component-b764b6475896\n\nconst DynamicSvg = ({ name = 'mobalytics-logo', ...rest }) => {\n\n    const DynamicSvgComponent = loadable(() => import(`../../images/${name}.svg`));\n\n    return (\n        <DynamicSvgComponent {...rest} />\n    )\n};\n\nexport default DynamicSvg;","import { memo } from 'preact/compat';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport { parseStyles } from '../../lib/helpers';\n\nconst Image = ({ src = false, alt, title, width, height, rounded = false, bgColor = true, cursor = 'default' }) => {\n\n    const styled = useStyled();\n\n    const [loading, setLoading] = useState(true);\n\n    const doSetLoadingFalseFunc = () => {\n        if (src && loading) {\n            setLoading(false);\n        }\n    };\n\n    const setLoadingFalseFunc = useCallback(() => {\n        doSetLoadingFalseFunc();\n    }, []);\n\n    const blankFunc = () => {\n        return;\n    };\n\n    const [setLoadingFalse, doSetLoadingFalse] = useState(blankFunc);\n\n    useEffect(() => {\n        doSetLoadingFalse(setLoadingFalseFunc);\n        () => {\n            doSetLoadingFalse(blankFunc);\n        };\n    }, []);\n\n\n    const ImageLoadingStyles = styled('div')(({ rounded, cursor }) => {\n        return parseStyles([\n            tw`flex bg-widget-purple-skeleton animate-pulse`,\n            rounded === 'full' ? tw`rounded-full` : tw``,\n            rounded === 'md' ? tw`rounded-sm` : tw``,\n            { 'width': `${width}px`, 'height': `${height}px` },\n            !loading ? { 'display': 'none' } : tw``,\n            {\n                'cursor': cursor\n            }\n        ]);\n    });\n\n    const ImageStyles = styled('img')(({ rounded, cursor }) => {\n        return parseStyles([\n            tw`flex`,\n            bgColor === true ? tw`bg-widget-gold-light` : tw``,\n            rounded === 'full' ? tw`rounded-full` : tw``,\n            rounded === 'md' ? tw`rounded-sm` : tw``,\n            loading ? { 'object-position': '-99999px 99999px' } : tw``,\n            {\n                'cursor': cursor\n            }\n        ]);\n    });\n\n    return (\n        <>\n            <ImageLoadingStyles rounded={rounded} cursor={cursor} />\n            {src && (\n                <ImageStyles src={src} alt={alt} title={title} width={width} height={height} rounded={rounded} onLoad={setLoadingFalse} cursor={cursor} />\n            )}\n        </>\n    );\n};\n\nexport default memo(Image);","import { memo } from 'preact/compat';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport { parseStyles } from '../../lib/helpers';\n\nconst RoundedGoldBorder = ({ children, borderWidth = '2px', loading = true, ...rest }) => {\n\n    const styled = useStyled();\n\n    const RoundedGoldBorderStyles = styled('div')(({ borderWidth, loading }) => {\n        return parseStyles([\n            false === loading ? tw`border-solid border-2 border-widget-gold rounded-full` : tw``,\n            { 'border-width': borderWidth }\n        ]);\n    });\n\n    return (\n        <RoundedGoldBorderStyles borderWidth={borderWidth} loading={loading} {...rest}>\n            {children}\n        </RoundedGoldBorderStyles>\n    );\n};\n\nexport default memo(RoundedGoldBorder);","import { memo } from 'preact/compat';\nimport Image from '../image';\nimport { summonerSpellIcon, gameItemIcon, getSkillIcon, parseStyles } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\n\nconst SpellItem = ({ slug, wh = 36, type = 'item', leftSpace = false, bottomSpace = false, topSpace = false, overlay = false, cursor = 'default', ...rest }) => {\n\n    const styled = useStyled();\n\n    const SpellItemStyles = styled('div')(({ leftSpace = false, bottomSpace = false, topSpace = false, wh }) => {\n        return parseStyles([\n            tw`relative leading-normal`,\n            'large' === leftSpace ? tw`ml-5!` : tw``,\n            'normal' === leftSpace ? tw`ml-3.5!` : tw``,\n            'small' === leftSpace ? tw`ml-2!` : tw``,\n            'smaller' === leftSpace ? tw`ml-1!` : tw``,\n            'smallest' === leftSpace ? tw`ml-0.5!` : tw``,\n            'large' === bottomSpace ? tw`mb-5!` : tw``,\n            'normal' === bottomSpace ? tw`mb-3.5!` : tw``,\n            'small' === bottomSpace ? tw`mb-2!` : tw``,\n            'smaller' === bottomSpace ? tw`mb-1!` : tw``,\n            'smallest' === bottomSpace ? tw`mb-0.5!` : tw``,\n            'large' === topSpace ? tw`mt-5!` : tw``,\n            'normal' === topSpace ? tw`mt-3.5!` : tw``,\n            'small' === topSpace ? tw`mt-2!` : tw``,\n            'smaller' === topSpace ? tw`mt-1!` : tw``,\n            'smallest' === topSpace ? tw`mt-0.5!` : tw``,\n            { width: `${wh}px`, height: `${wh}px` }\n        ]);\n    });\n\n    const src = 'spell' === type ? summonerSpellIcon(slug) : ('item' === type ? gameItemIcon(slug) : ('skill' === type ? getSkillIcon(slug) : false));\n\n    return (\n        <SpellItemStyles leftSpace={leftSpace} wh={wh} bottomSpace={bottomSpace} topSpace={topSpace} {...rest}>\n            <Image src={src} width={wh} height={wh} bgColor={false} rounded={'md'} cursor={cursor} />\n            {overlay}\n        </SpellItemStyles>\n    );\n};\n\nexport default memo(SpellItem);","import { memo } from 'preact/compat';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../../lib/context/goober';\nimport Markdown from 'preact-markdown';\nimport { parseStyles } from '../../../lib/helpers';\n\nexport const RichText = memo(({ children, className, markdownText, ...rest }) => {\n  return (\n    <Wrapper className={className} {...rest}>\n      {markdownText && <Markdown markdown={markdownText} type=\"html\" />}\n      {children}\n    </Wrapper>\n  );\n});\n\nconst Wrapper = ({ children, ...rest }) => {\n\n  const styled = useStyled();\n\n  const WrapperC = styled('div')(() => {\n    return parseStyles([\n      tw`inline-block align-middle leading-8 font-normal`,\n      {\n        'font-size': '1.4rem',\n        'color': '#8890b5',\n        'letter-spacing': '0.25px',\n        'strong': {\n          'color': '#ccae70',\n          'font-weight': '500'\n        },\n        'a': {\n          'color': '#4496dd'\n        },\n        'b, i, u': {\n          'color': '#ffffff'\n        },\n        'ul, ol': {\n          'margin': '0.4rem 0',\n          'padding-left': '2.8rem'\n        },\n      }\n    ]);\n  });\n\n  return (\n    <WrapperC {...rest}>{children}</WrapperC>\n  );\n};","import { memo } from 'preact/compat';\nimport { RichText } from '../rich-text';\nimport { parseStyles, processCustomHtmlTags } from '../../../lib/helpers';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../../lib/context/goober';\n\nexport const LolRichText = props => {\n    return <RichText {...props} />;\n};\n\nexport const GameItemTooltipRichText = memo(props => {\n    const { markdownText, ...rest } = props;\n    const processedMarkdown = markdownText ? processCustomHtmlTags(markdownText) : undefined;\n    return <StyledLolRichText markdownText={processedMarkdown} {...rest} />;\n});\n\nexport const StyledLolRichText = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const StyledLolRichTextC = styled(LolRichText)(() => {\n        return parseStyles([\n            tw`relative text-sm leading-5`,\n            {\n                'color': '#b3b4d0',\n                'p': {\n                    'display': 'inline'\n                },\n                '.custom': {\n                    'display': 'inline'\n                },\n                '.stats': {\n                    'display': 'block',\n                    'color': '#6b6889',\n                },\n                '.attention': {\n                    'font-weight': '500',\n                    'color': '#ffffff',\n                },\n                'i, .unique, .active, .aura, .passive, .rarityMythic': {\n                    'font-weight': '700',\n                    'color': '#ffffff'\n                },\n                '.rarityMythic': {\n                    'color': '#fec205'\n                },\n                '.magicDamage': {\n                    'color': '#84d0fe'\n                },\n                'li': {\n                    'list-style-type': 'none',\n                },\n                'li + li': {\n                    'margin-top': '0.8rem'\n                },\n            },\n        ]);\n    });\n\n    return (\n        <StyledLolRichTextC {...rest}>{children}</StyledLolRichTextC>\n    );\n};","import tw from 'twin.macro';\nimport { useStyled } from '../../../lib/context/goober';\nimport { parseStyles } from '../../../lib/helpers';\n\nexport const BaseTooltipWrapper = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const BaseTooltipWrapperC = styled('div')(() => {\n        return parseStyles([\n            tw`p-2.5 bg-widget-purple-tooltip border-tooltip border-solid border-1 rounded-md-s shadow-tooltip leading-8`\n        ]);\n    });\n\n    return (\n        <BaseTooltipWrapperC {...rest}>\n            {children}\n        </BaseTooltipWrapperC>\n    );\n};","import tw from 'twin.macro';\nimport { useStyled } from '../../../lib/context/goober';\n\nimport { GameItemTooltipRichText } from '../base-tooltip-rich-text';\nimport { BaseTooltipWrapper } from '../../../styles/components/base-tooltip-wrapper';\nimport { parseStyles } from '../../../lib/helpers';\n\nexport const GameTooltip = props => {\n\n  const { iconUrl, name, description, className } = props;\n\n  return (\n    <ItemWrapper className={className}>\n      <ItemHeader>\n        {name && iconUrl ? <ItemHeaderIcon src={iconUrl} alt={name} /> : null}\n        {name && <ItemTitle>{name}</ItemTitle>}\n      </ItemHeader>\n      {description && <GameItemTooltipRichText markdownText={description} />}\n    </ItemWrapper>\n  );\n};\n\nconst ItemWrapper = ({ children, ...rest }) => {\n\n  const styled = useStyled();\n\n  const ItemWrapperC = styled(BaseTooltipWrapper)(() => {\n    return parseStyles([\n      tw`flex flex-col w-100 normal-case!`\n    ]);\n  });\n\n  return (\n    <ItemWrapperC {...rest}>{children}</ItemWrapperC>\n  );\n};\n\nconst ItemHeader = ({ children, ...rest }) => {\n\n  const styled = useStyled();\n\n  const ItemHeaderC = styled('div')(() => {\n    return parseStyles([\n      tw`flex items-center mb-2.5`\n    ]);\n  });\n\n  return (\n    <ItemHeaderC {...rest}>{children}</ItemHeaderC>\n  );\n};\n\nconst ItemHeaderIcon = ({ children, ...rest }) => {\n\n  const styled = useStyled();\n\n  const ItemHeaderIconC = styled('img')(() => {\n    return parseStyles([\n      tw`mr-2.5 w-10 h-10`\n    ]);\n  });\n\n  return (\n    <ItemHeaderIconC {...rest}>{children}</ItemHeaderIconC>\n  );\n};\n\nconst ItemTitle = ({ children, ...rest }) => {\n\n  const styled = useStyled();\n\n  const ItemTitleC = styled('div')(() => {\n    return parseStyles([\n      tw`font-normal text-lg text-widget-gold mb-1.5 mx-2`,\n    ]);\n  });\n\n  return (\n    <ItemTitleC {...rest}>{children}</ItemTitleC>\n  );\n};\n\nexport const GameTooltipEmpty = ({ children, ...rest }) => {\n\n  const styled = useStyled();\n\n  const GameTooltipEmptyC = styled(ItemWrapper)(() => {\n    return parseStyles([\n      tw`h-4 opacity-0`,\n    ]);\n  });\n\n  return (\n    <GameTooltipEmptyC {...rest}>{children}</GameTooltipEmptyC>\n  );\n};\n","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport { useLoading } from '../../lib/context/loading';\nimport RoundedGoldBorder from '../rounded-gold-border';\nimport Image from '../image';\nimport { championImage, parseStyles } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\n\nconst Avatar = () => {\n\n    const styled = useStyled();\n\n    const AvatarStyles = styled('div')(() => {\n        return parseStyles([\n            tw`flex`,\n        ]);\n    });\n\n    const { daData: { data: { lol: { champion: { build: { championSlug = '' } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { sqData: { data: squidexData = {} } } = useSquidexApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const { championCommonInfo = [] } = squidexData;\n    const { flatData: { name = '', title = '' } = {} } = championCommonInfo[0] || {};\n\n    const loading = isLoading || '' === name;\n\n    //Avatar URL\n    const avatarUrl = championImage(championSlug);\n\n    //Avatar title and alt text\n    const altTitle = `${name} – ${title}`;\n\n    return (\n        <AvatarStyles>\n            <RoundedGoldBorder loading={loading}>\n                <Image src={avatarUrl} rounded=\"full\" width={36} height={36} title={altTitle} alt={altTitle} />\n            </RoundedGoldBorder>\n        </AvatarStyles>\n    );\n};\n\nexport default memo(Avatar);","import tw from 'twin.macro';\n\nconst StandardText = tw`text-white font-normal text-xs uppercase leading-5`;\n\nexport default StandardText;","import { useStyled } from '../../../lib/context/goober';\nimport tw from 'twin.macro';\nimport StandardText from '../../utils/standard-text';\nimport LoadingText from '../../utils/loading-text';\nimport { parseStyles } from '../../../lib/helpers';\n\nconst NormalText = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const NormalTextC = styled('span')(({ loading }) => {\n        return parseStyles([\n            StandardText,\n            loading ? LoadingText : tw``,\n        ]);\n    });\n\n    return (\n        <NormalTextC {...rest}>{children}</NormalTextC>\n    );\n};\n\nexport default NormalText;","import { memo } from 'preact/compat';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { useStaticGlobalProps } from '../../lib/context/static-global-props';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport NormalText from '../../styles/components/normal-text';\nimport { parseStyles } from '../../lib/helpers';\n\nconst Name = () => {\n\n    const { champion } = useStaticGlobalProps();\n    const styled = useStyled();\n\n    const NameStyles = styled('div')(() => {\n        return parseStyles([\n            tw`flex`,\n        ]);\n    });\n\n    const { sqData: { data: { championCommonInfo = [] } = {} } } = useSquidexApi();\n    const { loading = true } = useLoading();\n\n    const { flatData: { name = champion } = {} } = championCommonInfo[0] || {};\n\n    const isLoading = loading;\n\n    const nameTitle = `${name} build`;\n\n    return (\n        <NameStyles>\n            <NormalText loading={isLoading}>{nameTitle}</NormalText>\n        </NameStyles>\n    );\n};\n\nexport default memo(Name);","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { parseStyles, rolenameIcon } from '../../lib/helpers';\nimport Image from '../image';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst Role = () => {\n\n    const styled = useStyled();\n\n    const RoleStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`items-center`,\n        ]);\n    });\n    const RoleSmallPurpleText = styled(SmallPurpleText)(({ loading = true }) => {\n        return parseStyles([\n            false === loading ? tw`ml-1.5!` : tw``,\n        ]);\n    });\n\n    const { daData: { data: { lol: { champion: { build: { role: rawRole = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const role = 'ADC' === rawRole ? 'bot' : rawRole.toLowerCase();\n    const roleIcon = rolenameIcon(rawRole, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' === rawRole);\n\n    const loading = isLoading || (!roleIcon);\n\n    return (\n        <RoleStyles>\n            {!loading && (<Image src={roleIcon} title={role} alt={role} width={11} height={11} bgColor={false} />)}\n            <RoleSmallPurpleText loading={loading}>{role}</RoleSmallPurpleText>\n        </RoleStyles>\n    );\n};\n\nexport default memo(Role);","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport { parseStyles } from '../../lib/helpers';\n\nconst Patch = () => {\n\n    const styled = useStyled();\n\n    const PatchStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`pl-3.5`,\n        ]);\n    });\n    const PatchSmallPurpleText = styled(SmallPurpleText)(() => {\n        return parseStyles([\n            tw`pr-1.5`,\n        ]);\n    });\n    const PatchSmallWhiteText = styled(SmallWhiteText)(() => {\n        return parseStyles([\n            tw``,\n        ]);\n    });\n\n    const { daData: { data: { lol: { champion: { build: { patch = 'xx.x' } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const loading = isLoading || ('xx.x' === patch || !patch);\n\n    return (\n        <>\n            {!loading && (\n                <PatchStyles>\n                    <PatchSmallPurpleText loading={loading}>Patch</PatchSmallPurpleText>\n                    <PatchSmallWhiteText loading={loading}>{patch}</PatchSmallWhiteText>\n                </PatchStyles>\n            )}\n        </>\n    );\n};\n\nexport default memo(Patch);","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { parseStyles, roundWinRate } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst WinRate = () => {\n\n    const styled = useStyled();\n\n    const WinRateStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`pl-3.5`,\n        ]);\n    });\n    const WinRateSmallPurpleText = styled(SmallPurpleText)(() => {\n        return parseStyles([\n            tw`pr-1`,\n        ]);\n    });\n    const WinRateSmallGreenText = styled(SmallPurpleText)(() => {\n        return parseStyles([\n            tw`text-widget-green`,\n        ]);\n    });\n\n    const { daData: { data: { lol: { champion: { stats: { winRateHistory = [] } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const latestWinRateHistoryItem = winRateHistory ? winRateHistory[0] : {};\n    const { value: winRateRaw = 'XX.X' } = latestWinRateHistoryItem || {};\n\n    const { loading: isLoading = true } = useLoading();\n\n\n    const winRateFunction = useCallback(() => {\n        return roundWinRate(winRateRaw);\n    }, [winRateRaw]);\n\n    const winRate = `${'XX.X' !== winRateRaw ? winRateFunction() : 'XX.X'}%`;\n\n    const loading = isLoading || ('XX.X%' === winRate || !winRate);\n\n    return (\n        <>\n            {!loading && (\n                <WinRateStyles>\n                    <WinRateSmallPurpleText loading={loading}>Win rate</WinRateSmallPurpleText>\n                    <WinRateSmallGreenText loading={loading}>{winRate}</WinRateSmallGreenText>\n                </WinRateStyles>\n            )}\n        </>\n    );\n};\n\nexport default memo(WinRate);","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { commaNumber, parseStyles } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst Matches = () => {\n\n    const styled = useStyled();\n\n    const MatchesStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`hidden md:(flex pl-1)`,\n        ]);\n    });\n    const MatchesSmallPurpleText = styled(SmallPurpleText)(() => {\n        return parseStyles([\n            tw`lowercase`,\n        ]);\n    });\n    const MatchesSmallWhiteText = styled(SmallWhiteText)(() => {\n        return parseStyles([\n            tw``,\n        ]);\n    });\n\n    const { daData: { data: { lol: { champion: { build: { stats: { matchCount: matchCountRaw = 'x,xxx' } = {} } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const matchCount = 'x,xxx' !== matchCountRaw ? commaNumber(matchCountRaw) : matchCountRaw;\n\n    const loading = isLoading || ('x,xxx' === matchCountRaw || !matchCount);\n\n    return (\n        <>\n            {!loading && (\n                <MatchesStyles>\n                    <MatchesSmallPurpleText loading={loading}>Based on <MatchesSmallWhiteText loading={loading}>{matchCount}</MatchesSmallWhiteText> matches</MatchesSmallPurpleText>\n                </MatchesStyles>\n            )}\n        </>\n    );\n};\n\nexport default memo(Matches);","import { memo } from 'preact/compat';\nimport Avatar from '../avatar';\nimport Name from '../name';\nimport Role from '../role';\nimport Patch from '../patch';\nimport WinRate from '../win-rate';\nimport Matches from '../matches';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport { parseStyles } from '../../lib/helpers';\n\nconst Header = () => {\n\n    const styled = useStyled();\n\n    const HeaderStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`bg-widget-purple rounded-t-md px-3 py-2.5 border-b border-widget-purple-border`,\n        ]);\n    });\n    const NamePatchStyles = styled(FlexCol)(() => {\n        return parseStyles([\n            tw`pl-2`,\n        ]);\n    });\n\n    return (\n        <HeaderStyles>\n            <Avatar />\n            <NamePatchStyles>\n                <Name />\n                <FlexRow>\n                    <Role />\n                    <Patch />\n                    <WinRate />\n                    <Matches />\n                </FlexRow>\n            </NamePatchStyles>\n        </HeaderStyles>\n    );\n};\n\nexport default memo(Header);","import { memo } from 'preact/compat';\nimport loadable from '@loadable/component';\nimport { useStaticGlobalProps } from '../../lib/context/static-global-props';\n\nconst Runes = (props) => {\n\n    const { layout = 'full' } = useStaticGlobalProps();\n\n    const DynamicRunes = loadable(() => import(`../${layout}-runes/index.js`));\n\n    return (\n        <DynamicRunes {...props} />\n    )\n};\n\nexport default memo(Runes);","import tw from 'twin.macro';\n\nconst SpellsDisplay = tw`flex`;\n\nexport default SpellsDisplay;","import { useStyled } from '../../../lib/context/goober';\nimport tw from 'twin.macro';\nimport SpellsDisplayU from '../../utils/spells-display';\nimport LoadingText from '../../utils/loading-text';\nimport { parseStyles } from '../../../lib/helpers';\n\nconst SpellsDisplay = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const SpellsDisplayC = styled('div')(({ loading }) => {\n        return parseStyles([\n            SpellsDisplayU,\n            loading ? LoadingText : tw``,\n        ]);\n    });\n\n    return (\n        <SpellsDisplayC {...rest}>{children}</SpellsDisplayC>\n    );\n};\n\nexport default SpellsDisplay;","import { memo } from 'preact/compat';\nimport { useCallback, useState } from 'preact/hooks';\nimport useAsync from '../../../lib/hooks/use-async';\nimport { summonerSpellIcon } from '../../../lib/helpers';\nimport { useTooltips } from '../../../lib/context/tooltips';\nimport { maybeFetchTooltip } from '../../../lib/tooltips';\nimport {\n    GameTooltip,\n    GameTooltipEmpty,\n} from '../game-tooltip';\n\nexport const SummonerSpellTooltip = ({ slug = false }) => {\n\n    const { ttData, setTtData } = useTooltips();\n    const [localTooltip, setLocalTooltip] = useState(false);\n\n    //Set state of tooltip\n    const doSetLocalTooltipRes = (ttRes) => {\n        if (ttRes && !localTooltip) {\n            setLocalTooltip(ttRes)\n        }\n    };\n\n    const setLocalTooltipRes = useCallback((ttRes) => {\n        doSetLocalTooltipRes(ttRes);\n    }, []);\n\n    //Get the tooltip\n    const doTooltip = useCallback(async () => {\n        //Only get it if there's a slug set\n        if (slug) {\n            return await maybeFetchTooltip('spell', 'slug', slug, ttData, setTtData);\n        }\n    }, [slug]);\n\n    useAsync(doTooltip, setLocalTooltipRes);\n\n    return localTooltip ? (\n        <GameTooltip\n            name={localTooltip.name}\n            iconName={localTooltip.name}\n            iconUrl={summonerSpellIcon(slug)}\n            description={localTooltip.description}\n        />\n    ) : (\n        <GameTooltipEmpty />\n    );\n};\n\nexport default memo(SummonerSpellTooltip);","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport SummonerSpellTooltip from '../summoner-spell-tooltip';\nimport { TransparentTooltip } from '../../../styles/components/transparent-tooltip';\n\nconst SummonerSpellTooltipWrapper = ({ slug, children }) => {\n\n    const tooltipFn = useCallback(() => <SummonerSpellTooltip slug={slug} />, [slug]);\n\n    return (\n        <>\n            {slug && (<TransparentTooltip tooltipFn={tooltipFn}>\n                <span style=\"z-index: 10;\">{children}</span>\n            </TransparentTooltip>)}\n            {!slug && children}\n        </>\n    );\n};\n\nexport default memo(SummonerSpellTooltipWrapper);","import { memo } from 'preact/compat';\nimport { useMemo } from 'preact/hooks';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport { useLoading } from '../../lib/context/loading';\nimport SpellItem from '../spell-item';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexCol from '../../styles/components/flex-col';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport SpellsDisplay from '../../styles/components/spells-display';\nimport SummonerSpellTooltipWrapper from '../tooltips/summoner-spell-tooltip-wrapper';\nimport { parseStyles } from '../../lib/helpers';\n\nconst Spells = () => {\n\n    const styled = useStyled();\n\n    const SpellsStyles = styled(FlexCol)(() => {\n        return parseStyles([\n            tw`w-full pt-4 lg:(pt-5) xl:(pt-0)`\n        ]);\n    });\n    const SpellsSmallWhiteText = styled(SmallWhiteText)(() => {\n        return parseStyles([\n            tw`uppercase`,\n        ]);\n    });\n    const SpellsDisplayStyles = styled(SpellsDisplay)(() => {\n        return parseStyles([\n            tw`uppercase pt-3`,\n        ]);\n    });\n\n    const { daData: { data: { lol: { champion: { build: { spells = [] } = {} } = {} } = {} } = {} } } = useDataApi();\n    const { sqData: { data: { querySummonersSpellsV1Contents: squidexSpells = [] } = {} } = {} } = useSquidexApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const spellData = useMemo(() => {\n        return (spells.length > 0 && squidexSpells.length > 0) ? squidexSpells.filter(i => spells.includes(parseInt(i.flatData.riotId))) : [\n            {\n                flatData: {\n                    slug: false\n                }\n            },\n            {\n                flatData: {\n                    slug: false\n                }\n            }\n        ]\n    }, [spells, squidexSpells]);\n\n    const firstSlug = spellData[0].flatData.slug;\n    const secondSlug = spellData[1].flatData.slug;\n\n    const loading = isLoading || (0 === spells.length || 0 === squidexSpells.length);\n\n    return (\n        <SpellsStyles>\n            <SpellsSmallWhiteText>Spells</SpellsSmallWhiteText>\n            <FlexRow>\n                <SpellsDisplayStyles>\n                    <SummonerSpellTooltipWrapper slug={firstSlug}>\n                        <SpellItem cursor=\"help\" slug={firstSlug} type=\"spell\" />\n                    </SummonerSpellTooltipWrapper>\n                    <SummonerSpellTooltipWrapper slug={secondSlug}>\n                        <SpellItem cursor=\"help\" slug={secondSlug} type=\"spell\" leftSpace=\"small\" />\n                    </SummonerSpellTooltipWrapper>\n                </SpellsDisplayStyles>\n            </FlexRow>\n        </SpellsStyles>\n    );\n};\n\nexport default memo(Spells);","import { memo } from 'preact/compat';\nimport { useCallback, useState } from 'preact/hooks';\nimport useAsync from '../../../lib/hooks/use-async';\nimport { gameItemIcon } from '../../../lib/helpers';\nimport { useTooltips } from '../../../lib/context/tooltips';\nimport { maybeFetchTooltip } from '../../../lib/tooltips';\nimport {\n    GameTooltip,\n    GameTooltipEmpty,\n} from '../game-tooltip';\n\nexport const GameItemTooltip = ({ by = 'riotId', identifier = false }) => {\n\n    const { ttData, setTtData } = useTooltips();\n    const [localTooltip, setLocalTooltip] = useState(false);\n\n    //Set state of tooltip\n    const setLocalTooltipRes = useCallback((ttRes) => {\n        if (ttRes && !localTooltip) {\n            setLocalTooltip(ttRes)\n        }\n    }, []);\n\n    //Get the tooltip\n    const doTooltip = useCallback(async () => {\n        //Only get it if there's a identifier set\n        if (identifier) {\n            return await maybeFetchTooltip('item', by, identifier, ttData, setTtData);\n        }\n    }, [identifier]);\n\n    useAsync(doTooltip, setLocalTooltipRes);\n\n    return localTooltip ? (\n        <GameTooltip\n            name={localTooltip.name}\n            iconName={localTooltip.name}\n            iconUrl={gameItemIcon(identifier)}\n            description={localTooltip.effectDescription}\n        />\n    ) : (\n        <GameTooltipEmpty />\n    );\n};\n\nexport default memo(GameItemTooltip);","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport GameItemTooltip from '../game-item-tooltip';\nimport { TransparentTooltip } from '../../../styles/components/transparent-tooltip';\n\nconst GameItemTooltipWrapper = ({ by, identifier, children }) => {\n\n    const tooltipFn = useCallback(() => <GameItemTooltip by={by} identifier={identifier} />, [identifier]);\n\n    return (\n        <>\n            {identifier && (\n                <TransparentTooltip tooltipFn={tooltipFn}>\n                    <span style=\"z-index: 10;\">{children}</span>\n                </TransparentTooltip>\n            )}\n            {!identifier && children}\n        </>\n    );\n};\n\nexport default memo(GameItemTooltipWrapper);","import SpellItem from '../spell-item';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexCol from '../../styles/components/flex-col';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\nimport GameItemTooltipWrapper from '../tooltips/game-item-tooltip-wrapper';\nimport { parseStyles } from '../../lib/helpers';\n\nconst ItemSet = ({ name, items, loading = true, leftSpace = false }) => {\n\n    const styled = useStyled();\n\n    const ItemSetStyles = styled(FlexCol)(({ leftSpace }) => {\n        return parseStyles([\n            tw`w-auto`,\n            'large' === leftSpace ? tw`ml-8` : tw``,\n            'normal' === leftSpace ? tw`ml-7` : tw``,\n            'small' === leftSpace ? tw`ml-5` : tw``,\n            'baseNoneMdSmall' === leftSpace ? tw`ml-0 md:(ml-5)` : tw``,\n            'very-small' === leftSpace ? tw`ml-3` : tw``,\n        ]);\n    });\n    const ItemSetSmallPurpleText = styled(SmallPurpleText)(() => {\n        return parseStyles([\n            tw`capitalize`,\n        ]);\n    });\n    const ItemSetDisplayStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`uppercase pt-1.5`,\n        ]);\n    });\n\n    return (\n        <ItemSetStyles leftSpace={leftSpace}>\n            <ItemSetSmallPurpleText loading={loading}>{name}</ItemSetSmallPurpleText>\n            <FlexRow>\n                <ItemSetDisplayStyles>\n                    {loading && (\n                        <>\n                            <SpellItem slug={false} />\n                            <SpellItem slug={false} leftSpace=\"small\" />\n                            <SpellItem slug={false} leftSpace=\"small\" />\n                        </>\n                    )}\n                    {!loading && items.map((c, i) => {\n                        const leftSpace = 0 === i ? false : 'small';\n                        const key = `${c}-${i}`;\n                        // ❗️We're intentionally only showing THREE here❗️\n                        if (i < 3) {\n                            return (\n                                <GameItemTooltipWrapper by=\"riotId\" identifier={c}>\n                                    <SpellItem cursor=\"help\" slug={c} key={key} leftSpace={leftSpace} />\n                                </GameItemTooltipWrapper>\n                            );\n                        }\n                    })}\n                </ItemSetDisplayStyles>\n            </FlexRow>\n        </ItemSetStyles>\n    );\n};\n\nexport default ItemSet;","import tw from 'twin.macro';\n\nconst ItemsDisplay = tw`flex`;\n\nexport default ItemsDisplay;","import { useStyled } from '../../../lib/context/goober';\nimport tw from 'twin.macro';\nimport { parseStyles } from '../../../lib/helpers';\nimport ItemsDisplayU from '../../utils/items-display';\nimport LoadingText from '../../utils/loading-text';\n\nconst ItemsDisplay = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const ItemsDisplayC = styled('div')(({ loading }) => {\n        return parseStyles([\n            ItemsDisplayU,\n            loading ? LoadingText : tw``,\n        ]);\n    });\n\n    return (\n        <ItemsDisplayC {...rest}>{children}</ItemsDisplayC>\n    );\n};\n\nexport default ItemsDisplay;","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport ItemSet from '../item-set';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport ItemsDisplay from '../../styles/components/items-display';\nimport { parseStyles } from '../../lib/helpers';\n\nconst Items = () => {\n\n    const styled = useStyled();\n\n    const ItemsStyles = styled(FlexCol)(() => {\n        return parseStyles([\n            tw`w-full`,\n        ]);\n    });\n    const ItemsStylesRow = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`w-full`,\n        ]);\n    });\n    const ItemsSmallWhiteText = styled(SmallWhiteText)(() => {\n        return parseStyles([\n            tw`uppercase`,\n        ]);\n    });\n    const ItemsDisplayStyles = styled(ItemsDisplay)(() => {\n        return parseStyles([\n            tw`flex flex-col w-full capitalize pt-2.5 pb-1 md:(flex-row)`,\n        ]);\n    });\n    const ItemSetGroup = styled('div')(({ paddingTop = false }) => {\n        return parseStyles([\n            tw`flex flex-row w-full md:(w-auto)`,\n            'small' === paddingTop ? tw`pt-2.5 md:(pt-0)` : tw`pt-0`,\n        ]);\n    });\n\n\n    const dummyData = {\n        type: 'items',\n        items: []\n    };\n\n    const { daData: { data: { lol: { champion: { build: { items = [\n        dummyData,\n        dummyData,\n        dummyData,\n        dummyData,\n    ] } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const loading = isLoading || items[0].items.length === 0;\n\n    return (\n        <ItemsStyles>\n            <ItemsSmallWhiteText>Items</ItemsSmallWhiteText>\n            <ItemsStylesRow>\n                <ItemsDisplayStyles>\n                    <ItemSetGroup>\n                        <ItemSet name={items[0].type} items={items[0].items} loading={loading} />\n                        <ItemSet name={`${items[1].type} items`} items={items[1].items} loading={loading} leftSpace=\"small\" />\n                    </ItemSetGroup>\n                    <ItemSetGroup paddingTop=\"small\">\n                        <ItemSet name={`${items[2].type} items`} items={items[2].items} loading={loading} leftSpace=\"baseNoneMdSmall\" />\n                        <ItemSet name={`${items[3].type} items`} items={items[3].items} loading={loading} leftSpace=\"small\" />\n                    </ItemSetGroup>\n                </ItemsDisplayStyles>\n            </ItemsStylesRow>\n        </ItemsStyles>\n    );\n};\n\nexport default memo(Items);","import { memo } from 'preact/compat';\nimport loadable from '@loadable/component';\nimport { useStaticGlobalProps } from '../../lib/context/static-global-props';\n\nconst Skills = (props) => {\n\n    const { layout = 'full' } = useStaticGlobalProps();\n\n    const DynamicSkills = loadable(() => import(`../${layout}-skills/index.js`));\n\n    return (\n        <DynamicSkills {...props} />\n    )\n};\n\nexport default memo(Skills);","import { memo } from 'preact/compat';\nimport { useMemo } from 'preact/hooks';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport Runes from '../runes';\nimport Spells from '../spells';\nimport Items from '../items';\nimport Skills from '../skills';\nimport { championPosterImage, parseStyles } from '../../lib/helpers';\nimport { useStyled } from '../../lib/context/goober';\nimport tw, { theme } from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport { useStaticGlobalProps } from '../../lib/context/static-global-props';\n\nconst Body = () => {\n\n    const { sqData: { data: { championCommonInfo = [] } = {} } } = useSquidexApi();\n    const { layout } = useStaticGlobalProps();\n\n    const { flatData: { name = '' } = {} } = championCommonInfo[0] || {};\n\n    const styled = useStyled();\n\n    const BodyStyles = styled('div')(({ layout = false, posterUrl = false }) => {\n        return parseStyles([\n            tw`flex flex-col bg-transparent divide-y divide-widget-white-line`,\n            ('full' === layout && posterUrl) ? {\n                [`@media (min-width: ${theme('screens.lg')})`]: {\n                    'background-repeat': 'no-repeat',\n                    'background-position': '183px -36px',\n                    'background-size': '100% auto',\n                    'background-image': `radial-gradient(circle at 61% 153px, ${theme('colors.widget-purple.light-65')}, ${theme('colors.widget-purple.light')} 30%), url('${posterUrl}')`,\n                },\n            } : tw``,\n        ]);\n    });\n\n    const BodyRowCol = styled(FlexRow)(({ pt = false, layout = false, hiddenBelowMd = false }) => {\n        return parseStyles([\n            true === pt ? tw`md:(pt-5) lg:(pt-7)` : tw``,\n            'full' === layout ? tw`p-3 flex-col items-start lg:(p-5) xl:(flex-row items-end)` : tw`p-3 flex-col items-start lg:(p-5) xl:(flex-row)`,\n            true === hiddenBelowMd ? tw`hidden md:(flex)` : tw``,\n        ]);\n    });\n\n    const posterUrl = useMemo(() => {\n        return championPosterImage(name);\n    }, [name]);\n\n    return (\n        <BodyStyles layout={layout} posterUrl={posterUrl}>\n            <BodyRowCol layout={layout}>\n                <Runes />\n                <Spells />\n            </BodyRowCol>\n            <BodyRowCol pt={true}>\n                <Items />\n            </BodyRowCol>\n            <BodyRowCol pt={true} hiddenBelowMd={'full' === layout}>\n                <Skills />\n            </BodyRowCol>\n        </BodyStyles>\n    );\n};\n\nexport default memo(Body);","import { memo } from 'preact/compat';\nimport DynamicSvg from '../dynamic-svg';\n\nconst PlatinumPlusIcon = ({ className }) => {\n\n    return (\n        <DynamicSvg name=\"platinum-plus\" className={className} />\n    );\n}\n\nexport default memo(PlatinumPlusIcon);","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { commaNumber, parseStyles } from '../../lib/helpers';\nimport PlatinumPlusIcon from '../platinum-plus-icon';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst GamesAnalyzed = () => {\n\n    const styled = useStyled();\n\n    const GamesAnalyzedStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw``,\n        ]);\n    });\n    const GamesAnalyzedSmallLightestPurpleText = styled(SmallPurpleText)(() => {\n        return parseStyles([\n            tw`text-widget-purple-lightest lowercase pr-0.5 lg:(pr-1.5)`,\n        ]);\n    });\n    const GamesAnalyzedSmallPurpleTextSmaller = styled(SmallPurpleText)(() => {\n        return parseStyles([\n            tw`flex normal-case pl-0.5 lg:(hidden) lg:(pl-1)`,\n        ]);\n    });\n    const GamesAnalyzedSmallPurpleTextLarger = styled(SmallPurpleText)(() => {\n        return parseStyles([\n            tw`hidden normal-case pl-0.5 lg:(flex) lg:(pl-1)`,\n        ]);\n    });\n\n    const { daData: { data: { lol: { champion: { build: { stats: { matchCount: matchCountRaw } = {} } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const getMatchCount = useCallback(() => {\n        return commaNumber(matchCountRaw);\n    }, [matchCountRaw]);\n\n    const matchCount = getMatchCount();\n\n    const loading = isLoading || !matchCount;\n\n    return (\n        <>\n            {loading && (\n                <SmallPurpleText loading={loading}>Games.......</SmallPurpleText>\n            )}\n            {!loading && (\n                <GamesAnalyzedStyles>\n                    <GamesAnalyzedSmallLightestPurpleText loading={loading}>2,031,593</GamesAnalyzedSmallLightestPurpleText>\n                    <FlexRow>\n                        <PlatinumPlusIcon />\n                        <GamesAnalyzedSmallPurpleTextSmaller>games analyzed</GamesAnalyzedSmallPurpleTextSmaller>\n                        <GamesAnalyzedSmallPurpleTextLarger>Platinum+ games analyzed</GamesAnalyzedSmallPurpleTextLarger>\n                    </FlexRow>\n                </GamesAnalyzedStyles>\n            )}\n        </>\n    );\n};\n\nexport default memo(GamesAnalyzed);","import { memo } from 'preact/compat';\nimport DynamicSvg from '../dynamic-svg';\n\n\nconst MoreBuildsIcon = ({ className }) => {\n\n    return (\n        <DynamicSvg name=\"more-builds\" className={className} />\n    );\n}\n\nexport default memo(MoreBuildsIcon);","import { memo } from 'preact/compat';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport { useLoading } from '../../lib/context/loading';\nimport MoreBuildsIcon from '../more-builds-icon';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport { parseStyles } from '../../lib/helpers';\n\nconst MoreBuilds = () => {\n\n    const styled = useStyled();\n\n    const MoreBuildsStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`pt-2.5 md:(pt-0)`,\n        ]);\n    });\n    const MoreBuildsLoading = styled(SmallWhiteText)(({ loading = true }) => {\n        return parseStyles([\n            false === loading ? tw`ml-6 no-underline lg:(ml-6)` : tw`ml-2.5`,\n        ]);\n    });\n    const MoreBuildsSmallGoldText = styled(SmallWhiteText)(() => {\n        return parseStyles([\n            tw`flex items-center text-xs! font-medium text-widget-gold normal-case transition-all no-underline hover:text-widget-gold-light svg:all:(transition-all fill-widget-gold) hover:(svg:all:(fill-widget-gold-light)) md:(pl-6)`,\n        ]);\n    });\n    const MoreBuildsIconStyled = styled(MoreBuildsIcon)(() => {\n        return parseStyles([\n            tw`ml-1.5 fill-widget-gold`,\n        ]);\n    });\n\n    const { sqData: { data: { championCommonInfo = [] } = {} } = {} } = useSquidexApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const { flatData: { name = 'xxxx', slug = '' } = {} } = championCommonInfo[0] || {};\n\n    const moreBuildsLinkText = `See more ${name} builds`;\n    const moreBuildsLinkHref = `https://app.mobalytics.gg/lol/champions/${slug}/build`;\n\n    const loading = isLoading || (!name || 'xxxx' === name);\n\n    return (\n        <MoreBuildsStyles>\n            {loading && (\n                <MoreBuildsLoading loading={true}>See more xxxxxxxxxxxxx builds...</MoreBuildsLoading>\n            )}\n            {!loading && (\n                <MoreBuildsSmallGoldText as={'a'} href={moreBuildsLinkHref} target=\"_blank\" title={moreBuildsLinkText} loading={loading}>{moreBuildsLinkText}<MoreBuildsIconStyled /></MoreBuildsSmallGoldText>\n            )}\n        </MoreBuildsStyles>\n    );\n};\n\nexport default memo(MoreBuilds);","import DynamicSvg from '../dynamic-svg';\n\nconst Mark = ({ className }) => {\n\n    return (\n        <DynamicSvg name=\"mark\" className={className} />\n    );\n}\n\nexport default Mark;","import tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport { parseStyles } from '../../lib/helpers';\n\nconst BrandName = () => {\n\n    const styled = useStyled();\n\n    const BrandNameStyles = styled('a')(() => {\n        return parseStyles([\n            tw`normal-case no-underline! text-white`,\n        ]);\n    });\n\n    return (\n        <BrandNameStyles href=\"https://mobalytics.gg\" target=\"_blank\" title=\"Mobalytics\" dangerouslySetInnerHTML={{ __html: '<strong>MOB</strong>ALYTICS.gg' }} />\n    );\n};\n\nexport default BrandName;","import { memo } from 'preact/compat';\nimport Mark from '../mark';\nimport BrandName from '../brand-name';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\nimport { parseStyles } from '../../lib/helpers';\n\nconst PoweredBy = () => {\n\n    const styled = useStyled();\n\n    const PoweredByStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`pt-5 pb-2.5 md:(pt-0 pb-0 ml-auto)`,\n        ]);\n    });\n\n    const PoweredBySmallPurpleText = styled(SmallPurpleText)(() => {\n        return parseStyles([\n            tw`flex items-center self-end normal-case`,\n        ]);\n    });\n\n    const PoweredByMark = styled(Mark)(() => {\n        return parseStyles([\n            tw`ml-1 mr-1 lg:(ml-2 mr-2)`,\n        ]);\n    });\n\n    return (\n        <PoweredByStyles>\n            <PoweredBySmallPurpleText>Powered by <PoweredByMark /><BrandName /></PoweredBySmallPurpleText>\n        </PoweredByStyles>\n    );\n};\n\nexport default memo(PoweredBy);","import { memo } from 'preact/compat';\nimport GamesAnalyzed from '../games-analyzed';\nimport MoreBuilds from '../more-builds';\nimport PoweredBy from '../powered-by';\nimport tw from 'twin.macro';\nimport { useStyled } from '../../lib/context/goober';\nimport FlexRow from '../../styles/components/flex-row';\nimport { parseStyles } from '../../lib/helpers';\n\nconst Footer = () => {\n\n    const styled = useStyled();\n\n    const FooterStyles = styled(FlexRow)(() => {\n        return parseStyles([\n            tw`w-auto flex flex-col bg-widget-purple rounded-b-md p-3.5 border-t border-widget-purple-border md:(flex-row)`,\n        ]);\n    });\n\n    return (\n        <FooterStyles>\n            <GamesAnalyzed />\n            <MoreBuilds />\n            <PoweredBy />\n        </FooterStyles>\n    );\n};\n\nexport default memo(Footer);","import { useState, useEffect } from 'preact/hooks';\nimport { useDataApi } from './lib/context/data-api';\nimport { useStaticGlobalProps } from './lib/context/static-global-props';\nimport { useLoading } from './lib/context/loading';\nimport { useStyled } from './lib/context/goober';\nimport Header from './components/header';\nimport Body from './components/body';\nimport Footer from './components/footer';\nimport tw from 'twin.macro';\nimport { parseStyles, validateStrEnumValue, Rolename } from './lib/helpers';\nimport { memo } from 'preact/compat';\n\nconst App = () => {\n\n  const [loaded, setLoaded] = useState(false);\n  const styled = useStyled();\n\n  const { loading = true } = useLoading();\n  const { daData: { data: { lol: { champion: { build } = {} } = {} } = {} } } = useDataApi();\n  const { champion, role, validRole } = useStaticGlobalProps();\n\n  const hasBuild = build ? true : false;\n\n  const Container = styled('div')(({ loaded = false }) => {\n    return parseStyles([\n      tw`hidden flex-col items-stretch justify-between h-full w-full min-h-full border border-widget-purple-border bg-widget-purple-light text-white rounded-md font-sans max-w-screen-xl sm:(flex)`,\n      false === loaded ? tw`lg:(min-h-914) xl:(min-h-808)` : tw``,\n    ]);\n  });\n\n  const NoBuild = styled('p')(() => {\n    return parseStyles([\n      tw`block bg-widget-purple rounded-md px-6 py-5 border border-solid border-red-500 text-widget-purple-lightest font-medium`\n    ]);\n  });\n\n  useEffect(() => {\n    if (!loaded) {\n      setLoaded(true);\n    }\n    return () => {\n      setLoaded(false);\n    };\n  }, []);\n\n  return (\n    <>\n      {(hasBuild && validRole) && (\n        <Container loaded={loaded}>\n          <Header />\n          <Body />\n          <Footer />\n        </Container>\n      )}\n      {(!validRole && !loading) && (\n        <NoBuild>Role is not a valid, uppercased role name. Role should be one of: {Object.keys(Rolename).map(function (r) { return Rolename[r] }).join(', ')}.</NoBuild>\n      )}\n      {(validRole && !hasBuild && !loading) && (\n        <NoBuild>No build information available for <span style=\"text-transform: capitalize;\">{champion}</span> in the <span style=\"text-transform: capitalize;\">{role.toLowerCase()}</span> role.</NoBuild>\n      )}\n    </>\n  );\n};\n\nexport default memo(App);","import { SkillKey, SkillKeyColor, SkillKeyLetter, validateStrEnumValue } from '../helpers';\nimport { colors } from '../legacy/colors';\n\nconst verticalPlacements = [\n    'top',\n    'top-start',\n    'top-end',\n    'bottom',\n    'bottom-start',\n    'bottom-end',\n    'auto',\n    'auto-start',\n    'auto-end',\n];\n\nexport const isVerticalPlacement = (placement) => {\n    return verticalPlacements.includes(placement);\n};\n\nexport const isConnectedChampionCommonAbility = (value) => {\n    return !!(value && value.name && value.slug && value.activationKey);\n}\n\nexport const getChampionAbilityLabelAndColor = (keyOrLabel) => {\n    const key = validateStrEnumValue(SkillKey, keyOrLabel);\n\n    return key\n        ? [SkillKeyColor[key], SkillKeyLetter[key]]\n        : [keyOrLabel ? colors.skillLetterColor[keyOrLabel] || colors.text.purple : colors.text.purple, keyOrLabel];\n}\n","import { squidexApiClient } from '../graphql/client';\nimport { SPELL_BY_FILTER, PERK_BY_FILTER, ITEM_BY_FILTER, ABILITY_BY_FILTER } from '../graphql/queries';\n\nexport const queryKey = Object.freeze({\n    'spell': SPELL_BY_FILTER,\n    'perk': PERK_BY_FILTER,\n    'item': ITEM_BY_FILTER,\n    'ability': ABILITY_BY_FILTER,\n});\n\nconst getDataByFilter = async (filter, query) => {\n    return await squidexApiClient.query(query, {\n        filter,\n    }).toPromise();\n};\n\nexport const getSquidexTooltipBySlug = async (type = 'spell', identifier) => {\n\n    const tooltipQuery = queryKey[type];\n    const queryText = Number.isInteger(identifier) ? identifier : `'${identifier}'`;\n\n    return await getDataByFilter(`data/slug/iv eq ${queryText} `, tooltipQuery);\n};\n\nexport const getSquidexTooltipByRiotId = async (type = 'spell', identifier) => {\n\n    const tooltipQuery = queryKey[type];\n    const queryText = Number.isInteger(identifier) ? identifier : `'${identifier}'`;\n\n    return await getDataByFilter(`data/riotId/iv eq ${queryText} `, tooltipQuery);\n};","import { getSquidexTooltipBySlug, getSquidexTooltipByRiotId } from '../data';\nimport { firstItem } from '../helpers';\n\nexport const toolTipAlreadyFetched = (tooltip, by = 'slug', tooltips) => {\n    return typeof tooltips?.tooltips.find(t => t[by] === tooltip[by]) !== 'undefined';\n};\n\nexport const addTooltip = (tooltip, by = 'slug', tooltips, setTooltips) => {\n\n    const existingTooltip = tooltips.tooltips.find(t => t[by] === tooltip[by]) || false;\n\n    if (existingTooltip) {\n        setTooltips({\n            ...tooltips,\n            tooltips: [\n                ...tooltips.tooltips,\n                {\n                    ...existingTooltip,\n                    ...tooltip\n                }\n            ]\n        });\n    }\n    else {\n        setTooltips({\n            ...tooltips,\n            tooltips: [\n                ...tooltips.tooltips,\n                {\n                    ...tooltip\n                }\n            ]\n        });\n    }\n};\n\nexport const getTooltip = (identifier, by = 'slug', tooltips) => {\n    return tooltips.tooltips.find(t => t[by] === identifier) || false;\n};\n\nexport const setTooltipsLoading = (loading = true, tooltips, setTooltips) => {\n    return setTooltips({\n        ...tooltips,\n        loading,\n    });\n};\n\nexport const setTooltipsError = (error = false, tooltips, setTooltips) => {\n    return setTooltips({\n        ...tooltips,\n        error,\n    });\n};\n\nexport const maybeFetchTooltip = async (type = 'spell', by = 'riotId', identifier, tooltips, setTooltips) => {\n\n    let isFetchedOb = {};\n    isFetchedOb[by] = identifier;\n    const isFetched = toolTipAlreadyFetched(isFetchedOb, by, tooltips);\n\n    let tooltip;\n\n    if (!isFetched) {\n\n        setTooltipsLoading(true, tooltips, setTooltips);\n\n        const getFunc = 'slug' === by ? getSquidexTooltipBySlug : ('riotId' === by ? getSquidexTooltipByRiotId : false);\n\n        const res = await getFunc(type, identifier, tooltips, setTooltips);\n        const { data, error } = res;\n\n        setTooltipsLoading(false, tooltips, setTooltips);\n\n        if (!error) {\n            const keyType = 'ability' === type ? 'item' : type;\n            const key = `${keyType}s`;\n            tooltip = firstItem(data[key]).flatData;\n            addTooltip(tooltip, by, tooltips, setTooltips);\n            return tooltip;\n        }\n        else {\n            setTooltipsError(true, tooltips, setTooltips);\n            return false;\n        }\n    }\n    else {\n        tooltip = getTooltip(identifier, by, tooltips);\n    }\n\n    return tooltip;\n};","import tw from 'twin.macro';\nimport { useStyled } from '../../../lib/context/goober';\nimport { parseStyles } from '../../../lib/helpers';\n\nconst FlexCol = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const FlexColC = styled('div')(() => {\n        return parseStyles([\n            tw`flex flex-col items-start justify-between`,\n        ]);\n    });\n\n    return (\n        <FlexColC {...rest}>{children}</FlexColC>\n    );\n};\n\nexport default FlexCol;","import tw from 'twin.macro';\nimport { useStyled } from '../../../lib/context/goober';\nimport { parseStyles } from '../../../lib/helpers';\n\nconst FlexRow = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const FlexRowC = styled('div')(() => {\n        return parseStyles([\n            tw`flex flex-row items-center justify-start h-full`,\n        ]);\n    });\n\n    return (\n        <FlexRowC {...rest}>{children}</FlexRowC>\n    );\n};\n\nexport default FlexRow;","import tw from 'twin.macro';\nimport { useStyled } from '../../../lib/context/goober';\nimport SmallText from '../../utils/small-text';\nimport LoadingText from '../../utils/loading-text';\nimport { parseStyles } from '../../../lib/helpers';\n\nconst SmallPurpleText = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const SmallPurpleTextC = styled('span')(({ loading }) => {\n        return parseStyles([\n            SmallText,\n            tw`text-widget-purple-text`,\n            loading === true ? LoadingText : tw``,\n        ]);\n    });\n\n    return (\n        <SmallPurpleTextC {...rest}>{children}</SmallPurpleTextC>\n    );\n};\n\nexport default SmallPurpleText;","import tw from 'twin.macro';\nimport { useStyled } from '../../../lib/context/goober';\nimport SmallText from '../../utils/small-text';\nimport LoadingText from '../../utils/loading-text';\nimport { parseStyles } from '../../../lib/helpers';\n\nconst SmallWhiteText = ({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    const SmallWhiteTextC = styled('span')(({ loading }) => {\n        return parseStyles([\n            SmallText,\n            tw`text-white`,\n            loading ? LoadingText : tw``,\n        ]);\n    });\n\n    return (\n        <SmallWhiteTextC {...rest}>{children}</SmallWhiteTextC>\n    );\n};\n\nexport default SmallWhiteText;","import { memo } from 'preact/compat';\nimport { useState, useCallback, useMemo } from 'preact/hooks';\nimport Tippy from '@tippyjs/react/headless';\n\nexport const LazyTippy = memo((props) => {\n\n    const [mounted, setMounted] = useState(false);\n\n    const onShow = useCallback(() => setMounted(true), []);\n    const onHide = useCallback(() => setMounted(false), []);\n\n    const lazyPlugin = useMemo(\n        () => ({\n            fn: () => ({\n                onShow,\n                onHide,\n            }),\n        }),\n        [onShow, onHide]\n    );\n\n    const doRenderFunc = (d, parentRaw, ...rest) => {\n        const parent = parentRaw ? parentRaw : props.appendTo;\n        return (mounted && props.render) ? props.render(d, parent, ...rest) : null;\n    };\n\n    const renderFunc = useCallback((...args) => {\n        doRenderFunc(...args);\n    }, [props, mounted, lazyPlugin]);\n\n    const computedProps = useMemo(\n        () => ({\n            ...props,\n            plugins: [lazyPlugin, ...(props.plugins || [])],\n            content: mounted ? props.content : '',\n            ...((props.render && mounted) && renderFunc)\n        }),\n        [props, mounted, lazyPlugin]\n    );\n\n    return <Tippy {...computedProps} />;\n});","import { memo } from 'preact/compat';\nimport { useCallback, useMemo } from 'preact/hooks';\n/* eslint import/no-webpack-loader-syntax: off */\nimport * as tippyCss from '!!raw-loader?esModule=false!tippy.js/dist/tippy.css';\nimport * as reactPopperTooltipCss from '!!raw-loader?esModule=false!react-popper-tooltip/dist/styles.css';\n\nimport { LazyTippy } from '../lazy-tippy';\nimport { isVerticalPlacement } from '../../../lib/tooltips/helpers';\nimport { isDef } from '../../../lib/helpers';\n\nimport { useTooltips } from '../../../lib/context/tooltips';\n\nconst defaultOffset = [0, 10];\n\nexport const TooltipWrapper = props => {\n\n    const { tooltipParent } = useTooltips();\n\n    const doAppendToFunc = () => tooltipParent;\n    const appendToFunc = useCallback(() => {\n        return doAppendToFunc();\n    }, [tooltipParent]);\n\n    const {\n        appendTo = appendToFunc,\n        children,\n        placement = 'top',\n        tooltip,\n        tooltipFn,\n        trigger = 'mouseenter focus',\n        isDisabled,\n        interactive = false,\n        offset,\n        hideOnClick = true,\n        visible,\n        onTooltipShow,\n        onTooltipHide,\n        onClickOutside,\n        className,\n        scale = null,\n    } = props;\n\n    // choose legacy tooltip of tooltipFn, we will get rid of this function when all tooltip moved to tooltipFn\n    const renderer = useCallback(\n        (tooltipRenderingProps) => {\n            const content = tooltipFn ? tooltipFn(tooltipRenderingProps) : tooltip;\n            return content ? (\n                <div {...tooltipRenderingProps} className={className}>\n                    <style>{tippyCss}{reactPopperTooltipCss}</style>\n                    {content}\n                </div>\n            ) : null;\n        },\n        [tooltip, tooltipFn, className]\n    );\n\n    // adds scale transformation to the popper style object\n    const popperOptionsModifyCb = useCallback(\n        ({ state }) => {\n            isDef(scale) && (state.styles.popper.transform = `${state.styles.popper.transform} scale(${scale})`);\n            return state;\n        },\n        [scale]\n    );\n\n    // default popper options base on scale fn\n    const popperOptions = useMemo(\n        () => ({\n            strategy: 'fixed',\n            modifiers: [\n                {\n                    name: 'scale',\n                    enabled: true,\n                    phase: 'beforeWrite',\n                    fn: popperOptionsModifyCb,\n                },\n            ],\n        }),\n        [popperOptionsModifyCb]\n    );\n\n    // offset calculating function for case when scale is defined\n    const offsetFn = useCallback(\n        ({ placement, popper }) => {\n            const { width, height } = popper;\n            const offsetSrc = offset || defaultOffset;\n\n            if (isDef(scale)) {\n                const skidding = offsetSrc[0];\n                const distance = offsetSrc[1];\n\n                const isVertical = isVerticalPlacement(placement);\n                const size = isVertical ? height : width;\n\n                return [skidding, (-size / 2) * (1 - scale) + distance * scale];\n            }\n            return offsetSrc;\n        },\n        [scale, offset]\n    );\n\n    // tippy has a bug which crash the app if onShow or onHide is explicitly passed with undefined\n    const onShow = useCallback(() => onTooltipShow && onTooltipShow(), [onTooltipShow]);\n    const onHide = useCallback(() => onTooltipHide && onTooltipHide(), [onTooltipHide]);\n\n    return (\n        <LazyTippy\n            appendTo={appendTo}\n            render={renderer}\n            placement={placement}\n            popperOptions={popperOptions}\n            trigger={trigger}\n            disabled={isDisabled}\n            interactive={interactive}\n            offset={offsetFn}\n            hideOnClick={hideOnClick}\n            onClickOutside={onClickOutside}\n            visible={visible}\n            onShow={onShow}\n            onHide={onHide}\n        >\n            {children}\n        </LazyTippy>\n    );\n};\n\nexport default memo(TooltipWrapper);","import { memo } from 'preact/compat';\nimport tw from 'twin.macro';\nimport TooltipWrapper from '../../../components/tooltips/tooltip-wrapper';\nimport { useStyled } from '../../../lib/context/goober';\nimport { parseStyles } from '../../../lib/helpers';\n\nexport const TransparentTooltip = memo(({ children, ...rest }) => {\n\n    const styled = useStyled();\n\n    //Have to explicitly add 'font-sans' to the tooltip here because it's now rendered onto the shadow dom root node, which is outside of the existing declarations\n    const TransparentTooltipC = styled(TooltipWrapper)(() => {\n        return parseStyles([\n            tw`font-sans`,\n            {\n                'background-color': 'transparent',\n                'border': 'solid 1px transparent',\n            },\n        ]);\n    });\n\n    return (\n        <TransparentTooltipC {...rest}>\n            {children}\n        </TransparentTooltipC>\n    );\n});","import tw from 'twin.macro';\n\nconst LoadingText = tw`(bg-widget-purple-skeleton text-transparent animate-pulse leading-0.6 my-1)!`;\n\nexport default LoadingText;","import tw from 'twin.macro';\n\nconst SmallText = tw`font-normal text-xs capitalize whitespace-nowrap`;\n\nexport default SmallText;","var map = {\n\t\"./compact-runes/index.js\": [\n\t\t3676,\n\t\t676\n\t],\n\t\"./full-runes/index.js\": [\n\t\t3490,\n\t\t490\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3815;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./compact-skills/index.js\": [\n\t\t2489,\n\t\t929,\n\t\t489\n\t],\n\t\"./full-skill-order-mapped-skills/index.js\": [\n\t\t1207,\n\t\t207\n\t],\n\t\"./full-skills/index.js\": [\n\t\t2870,\n\t\t929,\n\t\t870\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 5134;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./background.svg\": [\n\t\t2108,\n\t\t108\n\t],\n\t\"./mark.svg\": [\n\t\t4485,\n\t\t485\n\t],\n\t\"./mobalytics-logo.svg\": [\n\t\t6438,\n\t\t438\n\t],\n\t\"./more-builds.svg\": [\n\t\t5282,\n\t\t282\n\t],\n\t\"./platinum-plus.svg\": [\n\t\t3357,\n\t\t357\n\t],\n\t\"./right-arrow.svg\": [\n\t\t5511,\n\t\t511\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9058;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}