{"version":3,"sources":["webpack://mobalytics-builds-widget/./src/widget/app/components/dynamic-svg/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/image/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/rounded-gold-border/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/spell-item/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/rich-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/base-tooltip-rich-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/base-tooltip-wrapper/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/game-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/avatar/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/standard-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/normal-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/name/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/role/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/patch/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/win-rate/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/matches/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/header/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/runes/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/spells-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/spells-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/summoner-spell-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/summoner-spell-tooltip-wrapper/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/spells/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/game-item-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/game-item-tooltip-wrapper/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/item-set/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/items-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/items-display/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/items/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/skills/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/body/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/platinum-plus-icon/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/games-analyzed/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/more-builds/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/more-builds-icon/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/brand-name/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/powered-by/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/mark/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/footer/index.js","webpack://mobalytics-builds-widget/./src/widget/app/index.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/tooltips/helpers.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/data/index.js","webpack://mobalytics-builds-widget/./src/widget/app/lib/tooltips/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/flex-col/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/flex-row/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/small-purple-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/small-white-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/lazy-tippy/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components/tooltips/tooltip-wrapper/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/components/transparent-tooltip/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/loading-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/styles/utils/small-text/index.js","webpack://mobalytics-builds-widget/./src/widget/app/components|lazy|/^\\.\\/.*\\-runes\\/index\\.js$/|groupOptions: {}|namespace object","webpack://mobalytics-builds-widget/./src/widget/app/components|lazy|/^\\.\\/.*\\-skills\\/index\\.js$/|groupOptions: {}|namespace object","webpack://mobalytics-builds-widget/./src/widget/app/images|lazy|/^\\.\\/.*\\.svg$/|groupOptions: {}|namespace object"],"names":["name","rest","DynamicSvgComponent","loadable","src","alt","title","width","height","rounded","bgColor","cursor","loading","setLoading","useState","ImageLoadingStyles","styled","ImageStyles","onLoad","children","borderWidth","RoundedGoldBorderStyles","SpellItemStyles","leftSpace","bottomSpace","topSpace","wh","memo","slug","type","overlay","summonerSpellIcon","gameItemIcon","getSkillIcon","RichText","className","markdownText","Wrapper","markdown","LolRichText","props","GameItemTooltipRichText","processedMarkdown","processCustomHtmlTags","undefined","StyledLolRichText","BaseTooltipWrapper","GameTooltip","iconUrl","description","ItemWrapper","ItemHeader","ItemHeaderIcon","ItemTitle","GameTooltipEmpty","tw","AvatarStyles","daData","data","lol","champion","build","championSlug","useDataApi","sqData","squidexData","useSquidexApi","championCommonInfo","flatData","avatarUrl","championImage","altTitle","StandardText","LoadingText","NameStyles","useLoading","isLoading","nameTitle","RoleStyles","FlexRow","RoleSmallPurpleText","SmallPurpleText","role","rawRole","toLowerCase","roleIcon","rolenameIcon","PatchStyles","PatchSmallPurpleText","PatchSmallWhiteText","SmallWhiteText","patch","WinRateStyles","WinRateSmallPurpleText","WinRateSmallGreenText","stats","winRateHistory","latestWinRateHistoryItem","value","winRateRaw","winRateFunction","useCallback","roundWinRate","winRate","MatchesStyles","MatchesSmallPurpleText","MatchesSmallWhiteText","matchCount","matchCountRaw","commaNumber","HeaderStyles","NamePatchStyles","FlexCol","layout","useStaticGlobalProps","DynamicRunes","SpellsDisplayU","ttData","setTtData","useTooltips","localTooltip","setLocalTooltip","doTooltip","async","ttRes","maybeFetchTooltip","useEffect","iconName","tooltipFn","style","SpellsStyles","SpellsSmallWhiteText","SpellsDisplayStyles","SpellsDisplay","spells","querySummonersSpellsV1Contents","squidexSpells","spellData","useMemo","length","filter","i","includes","parseInt","riotId","firstSlug","secondSlug","by","identifier","effectDescription","ItemSetStyles","ItemSetSmallPurpleText","ItemSetDisplayStyles","items","map","c","key","ItemsDisplayU","ItemsStyles","ItemsStylesRow","ItemsSmallWhiteText","ItemsDisplayStyles","ItemsDisplay","ItemSetGroup","paddingTop","dummyData","DynamicSkills","BodyStyles","posterUrl","BodyRowCol","pt","hiddenBelowMd","championPosterImage","GamesAnalyzedStyles","GamesAnalyzedSmallLightestPurpleText","GamesAnalyzedSmallPurpleTextSmaller","GamesAnalyzedSmallPurpleTextLarger","getMatchCount","MoreBuildsStyles","MoreBuildsLoading","MoreBuildsSmallGoldText","MoreBuildsIconStyled","moreBuildsLinkText","moreBuildsLinkHref","as","href","target","BrandNameStyles","dangerouslySetInnerHTML","__html","PoweredByStyles","PoweredBySmallPurpleText","PoweredByMark","FooterStyles","Container","loaded","setLoaded","verticalPlacements","isVerticalPlacement","placement","isConnectedChampionCommonAbility","activationKey","getChampionAbilityLabelAndColor","keyOrLabel","validateStrEnumValue","SkillKey","SkillKeyColor","SkillKeyLetter","colors","queryKey","Object","freeze","SPELL_BY_FILTER","PERK_BY_FILTER","ITEM_BY_FILTER","ABILITY_BY_FILTER","getDataByFilter","query","squidexApiClient","toPromise","getSquidexTooltipBySlug","tooltipQuery","queryText","Number","isInteger","getSquidexTooltipByRiotId","setTooltipsLoading","tooltips","setTooltips","tooltip","isFetchedOb","find","t","toolTipAlreadyFetched","getFunc","res","error","setTooltipsError","firstItem","existingTooltip","addTooltip","getTooltip","SmallText","LazyTippy","mounted","setMounted","onShow","onHide","lazyPlugin","fn","computedProps","plugins","content","render","args","defaultOffset","TransparentTooltip","trigger","isDisabled","interactive","offset","hideOnClick","visible","onTooltipShow","onTooltipHide","onClickOutside","scale","renderer","tooltipRenderingProps","popperOptionsModifyCb","state","isDef","styles","popper","transform","popperOptions","strategy","modifiers","enabled","phase","offsetFn","offsetSrc","skidding","distance","disabled","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","module","exports","all","slice"],"mappings":"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","file":"553.bundle.js","sourcesContent":["import loadable from '@loadable/component';\n\n//Courtesy of: https://medium.com/@erickhoury/react-dynamically-importing-svgs-and-render-as-react-component-b764b6475896\n\nconst DynamicSvg = ({ name = 'mobalytics-logo', ...rest }) => {\n\n    const DynamicSvgComponent = loadable(() => import(`../../images/${name}.svg`));\n\n    return (\n        <DynamicSvgComponent {...rest} />\n    )\n};\n\nexport default DynamicSvg;","import { useState } from 'preact/hooks';\nimport tw, { styled } from 'twin.macro';\n\nconst Image = ({ src = false, alt, title, width, height, rounded = false, bgColor = true, cursor = 'default' }) => {\n\n    const [loading, setLoading] = useState(true);\n\n    const setLoadingFalse = () => {\n        if (src && loading) {\n            setLoading(false);\n        }\n    };\n\n    const ImageLoadingStyles = styled.div(({ rounded, cursor }) => [\n        tw`flex bg-widget-gold-light animate-pulse`,\n        rounded === 'full' && tw`rounded-full`,\n        rounded === 'md' && tw`rounded-sm`,\n        { 'width': `${width}px`, 'height': `${height}px` },\n        !loading && { 'display': 'none' },\n        {\n            'cursor': cursor\n        }\n    ]);\n\n    const ImageStyles = styled.img(({ rounded, cursor }) => [\n        tw`flex`,\n        bgColor === true && tw`bg-widget-gold-light`,\n        rounded === 'full' && tw`rounded-full`,\n        rounded === 'md' && tw`rounded-sm`,\n        loading && { 'object-position': '-99999px 99999px' },\n        {\n            'cursor': cursor\n        }\n    ]);\n\n    return (\n        <>\n            <ImageLoadingStyles rounded={rounded} cursor={cursor} />\n            {src && (\n                <ImageStyles src={src} alt={alt} title={title} width={width} height={height} rounded={rounded} onLoad={setLoadingFalse} cursor={cursor} />\n            )}\n        </>\n    );\n};\n\nexport default Image;","import tw, { styled } from 'twin.macro';\n\nconst RoundedGoldBorder = ({ children, borderWidth = '2px', ...rest }) => {\n\n    const RoundedGoldBorderStyles = styled('div')(({ borderWidth }) => [\n        tw`border-solid border-2 border-widget-gold rounded-full`,\n        { 'border-width': borderWidth }\n    ]);\n\n    return (\n        <RoundedGoldBorderStyles borderWidth={borderWidth} {...rest}>\n            {children}\n        </RoundedGoldBorderStyles>\n    );\n};\n\nexport default RoundedGoldBorder;","import { memo } from 'preact/compat';\nimport Image from '../image';\nimport { summonerSpellIcon, gameItemIcon, getSkillIcon } from '../../lib/helpers';\nimport tw, { styled } from 'twin.macro';\n\nconst SpellItemStyles = styled('div')(({ leftSpace = false, bottomSpace = false, topSpace = false, wh }) => [\n    tw`relative`,\n    'large' === leftSpace ? tw`ml-5!` : tw``,\n    'normal' === leftSpace ? tw`ml-3.5!` : tw``,\n    'small' === leftSpace ? tw`ml-2!` : tw``,\n    'smaller' === leftSpace ? tw`ml-1!` : tw``,\n    'smallest' === leftSpace ? tw`ml-0.5!` : tw``,\n    'large' === bottomSpace ? tw`mb-5!` : tw``,\n    'normal' === bottomSpace ? tw`mb-3.5!` : tw``,\n    'small' === bottomSpace ? tw`mb-2!` : tw``,\n    'smaller' === bottomSpace ? tw`mb-1!` : tw``,\n    'smallest' === bottomSpace ? tw`mb-0.5!` : tw``,\n    'large' === topSpace ? tw`mt-5!` : tw``,\n    'normal' === topSpace ? tw`mt-3.5!` : tw``,\n    'small' === topSpace ? tw`mt-2!` : tw``,\n    'smaller' === topSpace ? tw`mt-1!` : tw``,\n    'smallest' === topSpace ? tw`mt-0.5!` : tw``,\n    { width: `${wh}px`, height: `${wh}px` }\n]);\n\nconst SpellItem = ({ slug, wh = 36, type = 'item', leftSpace = false, bottomSpace = false, topSpace = false, overlay = false, cursor = 'default', ...rest }) => {\n\n    const src = 'spell' === type ? summonerSpellIcon(slug) : ('item' === type ? gameItemIcon(slug) : ('skill' === type ? getSkillIcon(slug) : false));\n\n    return (\n        <SpellItemStyles leftSpace={leftSpace} wh={wh} bottomSpace={bottomSpace} topSpace={topSpace} {...rest}>\n            <Image src={src} width={wh} height={wh} bgColor={false} rounded={'md'} cursor={cursor} />\n            {overlay}\n        </SpellItemStyles>\n    );\n};\n\nexport default memo(SpellItem);","import { memo } from 'preact/compat';\nimport tw, { styled } from 'twin.macro';\nimport Markdown from 'preact-markdown';\n\nexport const RichText = memo(({ children, className, markdownText, ...rest }) => {\n  return (\n    <Wrapper className={className} {...rest}>\n      {markdownText && <Markdown markdown={markdownText} type=\"html\" />}\n      {children}\n    </Wrapper>\n  );\n});\n\nconst Wrapper = styled('div')(() => [\n  tw`inline-block align-middle leading-8 font-normal`,\n  {\n    'font-size': '1.4rem',\n    'color': '#8890b5',\n    'letter-spacing': '0.25px',\n    'strong': {\n      'color': '#ccae70',\n      'font-weight': '500'\n    },\n    'a': {\n      'color': '#4496dd'\n    },\n    'b, i, u': {\n      'color': '#ffffff'\n    },\n    'ul, ol': {\n      'margin': '0.4rem 0',\n      'padding-left': '2.8rem'\n    },\n  }\n]);","import { memo } from 'preact/compat';\nimport { RichText } from '../rich-text';\nimport { processCustomHtmlTags } from '../../../lib/helpers';\nimport tw, { styled } from 'twin.macro';\n\nexport const LolRichText = props => {\n    return <RichText {...props} />;\n};\n\nexport const GameItemTooltipRichText = memo(props => {\n    const { markdownText, ...rest } = props;\n    const processedMarkdown = markdownText ? processCustomHtmlTags(markdownText) : undefined;\n    return <StyledLolRichText markdownText={processedMarkdown} {...rest} />;\n});\n\nexport const StyledLolRichText = styled(LolRichText)(() => [\n    tw`relative text-sm leading-5`,\n    {\n        'color': '#b3b4d0',\n        '.custom': {\n            'display': 'inline'\n        },\n        '.stats': {\n            'display': 'block',\n            'color': '#6b6889',\n        },\n        '.attention': {\n            'font-weight': '500',\n            'color': '#ffffff',\n        },\n        'i, .unique, .active, .aura, .passive, .rarityMythic': {\n            'font-weight': '700',\n            'color': '#ffffff'\n        },\n        '.rarityMythic': {\n            'color': '#fec205'\n        },\n        '.magicDamage': {\n            'color': '#84d0fe'\n        },\n        'li': {\n            'list-style-type': 'none',\n        },\n        'li + li': {\n            'margin-top': '0.8rem'\n        },\n    },\n]);","import tw, { styled } from 'twin.macro';\n\nexport const BaseTooltipWrapper = styled('div')(() => [\n    tw`p-2.5 bg-widget-purple border border-widget-purple-border shadow leading-8`\n]);","import tw, { styled } from 'twin.macro';\n\nimport { GameItemTooltipRichText } from '../base-tooltip-rich-text';\nimport { BaseTooltipWrapper } from '../../../styles/components/base-tooltip-wrapper';\n\nexport const GameTooltip = props => {\n\n  const { iconUrl, name, description, className } = props;\n\n  return (\n    <ItemWrapper className={className}>\n      <ItemHeader>\n        {name && iconUrl ? <ItemHeaderIcon src={iconUrl} alt={name} /> : null}\n        {name && <ItemTitle>{name}</ItemTitle>}\n      </ItemHeader>\n      {description && <GameItemTooltipRichText markdownText={description} />}\n    </ItemWrapper>\n  );\n};\n\nconst ItemWrapper = styled(BaseTooltipWrapper)(() => [\n  tw`flex flex-col w-100`,\n  {\n    'max-width': 'calc(100vw - 2rem)'\n  }\n]);\n\nconst ItemHeader = styled('div')(() => [\n  tw`flex items-center mb-2.5`\n]);\n\nconst ItemHeaderIcon = styled('img')(() => [\n  tw`mr-2.5 w-10 h-10`\n]);\n\nconst ItemTitle = styled('div')(() => [\n  tw`font-normal text-lg text-widget-gold mb-1.5 mx-2`,\n]);\n\nexport const GameTooltipEmpty = tw(ItemWrapper)`h-4 opacity-0`;\n","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport RoundedGoldBorder from '../rounded-gold-border';\nimport Image from '../image';\nimport { championImage } from '../../lib/helpers';\nimport tw from 'twin.macro';\n\nconst AvatarStyles = tw.div`flex`;\n\nconst Avatar = () => {\n\n    const { daData: { data: { lol: { champion: { build: { championSlug = '' } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { sqData: { data: squidexData = {} } } = useSquidexApi();\n\n    const { championCommonInfo = [] } = squidexData;\n    const { flatData: { name = '', title = '' } = {} } = championCommonInfo[0] || {};\n\n    //Avatar URL\n    const avatarUrl = championImage(championSlug);\n\n    //Avatar title and alt text\n    const altTitle = `${name} – ${title}`;\n\n    return (\n        <AvatarStyles>\n            <RoundedGoldBorder>\n                <Image src={avatarUrl} rounded=\"full\" width={36} height={36} title={altTitle} alt={altTitle} />\n            </RoundedGoldBorder>\n        </AvatarStyles>\n    );\n};\n\nexport default memo(Avatar);","import tw from 'twin.macro';\n\nconst StandardText = tw`text-white font-normal text-xs uppercase leading-5`;\n\nexport default StandardText;","import { styled } from 'twin.macro';\nimport StandardText from '../../utils/standard-text';\nimport LoadingText from '../../utils/loading-text';\n\nconst NormalText = styled.span(({ loading }) => [\n    StandardText,\n    (loading) && LoadingText,\n]);\n\nexport default NormalText;","import { memo } from 'preact/compat';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport { useLoading } from '../../lib/context/loading';\nimport tw from 'twin.macro';\nimport NormalText from '../../styles/components/normal-text';\n\nconst NameStyles = tw.div`flex`;\n\nconst Name = () => {\n\n    const { sqData: { data: { championCommonInfo = [] } = {} } } = useSquidexApi();\n    const { loading = true } = useLoading();\n\n    const { flatData: { name = '' } = {} } = championCommonInfo[0] || {};\n\n    const isLoading = loading || !name;\n\n    const nameTitle = `${name} build`;\n\n    return (\n        <NameStyles>\n            <NormalText loading={isLoading}>{nameTitle}</NormalText>\n        </NameStyles>\n    );\n};\n\nexport default memo(Name);","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { rolenameIcon } from '../../lib/helpers';\nimport Image from '../image';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst RoleStyles = tw(FlexRow)`items-center`;\nconst RoleSmallPurpleText = tw(SmallPurpleText)`ml-1.5!`;\n\nconst Role = () => {\n\n    const { daData: { data: { lol: { champion: { build: { role: rawRole = 'XXX' } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const role = 'ADC' === rawRole ? 'bot' : rawRole.toLowerCase();\n    const roleIcon = rolenameIcon(rawRole);\n\n    const loading = isLoading || ('xxx' === role || !role);\n\n    return (\n        <RoleStyles>\n            <Image src={roleIcon} title={role} alt={role} width={11} height={11} />\n            <RoleSmallPurpleText loading={loading}>{role}</RoleSmallPurpleText>\n        </RoleStyles>\n    );\n};\n\nexport default memo(Role);","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst PatchStyles = tw(FlexRow)`pl-3.5`;\nconst PatchSmallPurpleText = tw(SmallPurpleText)`pr-1.5`;\nconst PatchSmallWhiteText = tw(SmallWhiteText)``;\n\nconst Patch = () => {\n\n    const { daData: { data: { lol: { champion: { build: { patch = 'xx.x' } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const loading = isLoading || ('xx.x' === patch || !patch);\n\n    return (\n        <PatchStyles>\n            <PatchSmallPurpleText loading={loading}>Patch</PatchSmallPurpleText>\n            <PatchSmallWhiteText loading={loading}>{patch}</PatchSmallWhiteText>\n        </PatchStyles>\n    );\n};\n\nexport default memo(Patch);","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { roundWinRate } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst WinRateStyles = tw(FlexRow)`pl-3.5`;\nconst WinRateSmallPurpleText = tw(SmallPurpleText)`pr-1`;\nconst WinRateSmallGreenText = tw(SmallPurpleText)`text-widget-green`;\n\nconst WinRate = () => {\n\n    const { daData: { data: { lol: { champion: { stats: { winRateHistory = [] } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const latestWinRateHistoryItem = winRateHistory ? winRateHistory[0] : {};\n    const { value: winRateRaw = 'XX.X' } = latestWinRateHistoryItem || {};\n\n    const { loading: isLoading = true } = useLoading();\n\n\n    const winRateFunction = useCallback(() => {\n        return roundWinRate(winRateRaw);\n    }, [winRateRaw]);\n\n    const winRate = `${'XX.X' !== winRateRaw ? winRateFunction() : 'XX.X'}%`;\n\n    const loading = isLoading || ('XX.X%' === winRate || !winRate);\n\n    return (\n        <WinRateStyles>\n            <WinRateSmallPurpleText loading={loading}>Win rate</WinRateSmallPurpleText>\n            <WinRateSmallGreenText loading={loading}>{winRate}</WinRateSmallGreenText>\n        </WinRateStyles>\n    );\n};\n\nexport default memo(WinRate);","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { commaNumber } from '../../lib/helpers';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst MatchesStyles = tw(FlexRow)`hidden md:(flex pl-1)`;\nconst MatchesSmallPurpleText = tw(SmallPurpleText)`lowercase`;\nconst MatchesSmallWhiteText = tw(SmallWhiteText)``;\n\nconst Matches = () => {\n\n    const { daData: { data: { lol: { champion: { build: { stats: { matchCount: matchCountRaw = 'x,xxx' } = {} } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const matchCount = 'x,xxx' !== matchCountRaw ? commaNumber(matchCountRaw) : matchCountRaw;\n\n    const loading = isLoading || ('x,xxx' === matchCountRaw || !matchCount);\n\n    return (\n        <MatchesStyles>\n            <MatchesSmallPurpleText loading={loading}>Based on <MatchesSmallWhiteText loading={loading}>{matchCount}</MatchesSmallWhiteText> matches</MatchesSmallPurpleText>\n        </MatchesStyles>\n    );\n};\n\nexport default memo(Matches);","import Avatar from '../avatar';\nimport Name from '../name';\nimport Role from '../role';\nimport Patch from '../patch';\nimport WinRate from '../win-rate';\nimport Matches from '../matches';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\n\nconst HeaderStyles = tw(FlexRow)`bg-widget-purple rounded-t-md px-3 py-2.5 border-b border-widget-purple-border`;\nconst NamePatchStyles = tw(FlexCol)`pl-2`;\n\nconst Header = () => {\n    return (\n        <HeaderStyles>\n            <Avatar />\n            <NamePatchStyles>\n                <Name />\n                <FlexRow>\n                    <Role />\n                    <Patch />\n                    <WinRate />\n                    <Matches />\n                </FlexRow>\n            </NamePatchStyles>\n        </HeaderStyles>\n    );\n};\n\nexport default Header;","import { memo } from 'preact/compat';\nimport loadable from '@loadable/component';\nimport { useStaticGlobalProps } from '../../lib/context/static-global-props';\n\nconst Runes = (props) => {\n\n    const { layout } = useStaticGlobalProps();\n\n    const DynamicRunes = loadable(() => import(`../${layout}-runes/index.js`));\n\n    return (\n        <DynamicRunes {...props} />\n    )\n};\n\nexport default memo(Runes);","import tw from 'twin.macro';\n\nconst SpellsDisplay = tw`flex`;\n\nexport default SpellsDisplay;","import { styled } from 'twin.macro';\nimport SpellsDisplayU from '../../utils/spells-display';\nimport LoadingText from '../../utils/loading-text';\n\nconst SpellsDisplay = styled.div(({ loading }) => [\n    SpellsDisplayU,\n    (loading) && LoadingText,\n]);\n\nexport default SpellsDisplay;","import { memo } from 'preact/compat';\nimport { useCallback, useState, useEffect } from 'preact/hooks';\nimport { summonerSpellIcon } from '../../../lib/helpers';\nimport { useTooltips } from '../../../lib/context/tooltips';\nimport { maybeFetchTooltip } from '../../../lib/tooltips';\nimport {\n    GameTooltip,\n    GameTooltipEmpty,\n} from '../game-tooltip';\n\nexport const SummonerSpellTooltip = ({ slug = false }) => {\n\n    const { ttData, setTtData } = useTooltips();\n    const [localTooltip, setLocalTooltip] = useState(false);\n\n    //Get the tooltip\n    const doTooltip = useCallback(async () => {\n        //Only get it if there's a slug set\n        if (slug) {\n            const ttRes = await maybeFetchTooltip('spell', 'slug', slug, ttData, setTtData);\n            if (ttRes) {\n                setLocalTooltip(ttRes);\n            }\n        }\n    }, [slug]);\n\n    useEffect(async () => {\n        await doTooltip();\n    }, [slug]);\n\n    return localTooltip ? (\n        <GameTooltip\n            name={localTooltip.name}\n            iconName={localTooltip.name}\n            iconUrl={summonerSpellIcon(slug)}\n            description={localTooltip.description}\n        />\n    ) : (\n        <GameTooltipEmpty />\n    );\n};\n\nexport default memo(SummonerSpellTooltip);","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport SummonerSpellTooltip from '../summoner-spell-tooltip';\nimport { TransparentTooltip } from '../../../styles/components/transparent-tooltip';\n\nconst SummonerSpellTooltipWrapper = ({ slug, children }) => {\n\n    const tooltipFn = useCallback(() => <SummonerSpellTooltip slug={slug} />, [slug]);\n\n    return (slug && (<TransparentTooltip tooltipFn={tooltipFn}>\n        <span style=\"z-index: 10;\">{children}</span>\n    </TransparentTooltip>));\n};\n\nexport default memo(SummonerSpellTooltipWrapper);","import { memo } from 'preact/compat';\nimport { useMemo } from 'preact/hooks';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport { useLoading } from '../../lib/context/loading';\nimport SpellItem from '../spell-item';\nimport tw, { styled } from 'twin.macro';\nimport FlexCol from '../../styles/components/flex-col';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport SpellsDisplay from '../../styles/components/spells-display';\nimport SummonerSpellTooltipWrapper from '../tooltips/summoner-spell-tooltip-wrapper';\n\nconst SpellsStyles = styled(FlexCol)(() => [\n    tw`w-full pt-4 lg:(pt-5) xl:(pt-0)`\n]);\nconst SpellsSmallWhiteText = tw(SmallWhiteText)`uppercase`;\nconst SpellsDisplayStyles = tw(SpellsDisplay)`uppercase pt-3`;\n\nconst Spells = () => {\n\n    const { daData: { data: { lol: { champion: { build: { spells = [] } = {} } = {} } = {} } = {} } } = useDataApi();\n    const { sqData: { data: { querySummonersSpellsV1Contents: squidexSpells = [] } = {} } = {} } = useSquidexApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const spellData = useMemo(() => {\n        return (spells.length > 0 && squidexSpells.length > 0) ? squidexSpells.filter(i => spells.includes(parseInt(i.flatData.riotId))) : [\n            {\n                flatData: {\n                    slug: false\n                }\n            },\n            {\n                flatData: {\n                    slug: false\n                }\n            }\n        ]\n    }, [spells, squidexSpells]);\n\n    const firstSlug = spellData[0].flatData.slug;\n    const secondSlug = spellData[1].flatData.slug;\n\n    const loading = isLoading || (0 === spells.length || 0 === squidexSpells.length);\n\n    return (\n        <SpellsStyles>\n            <SpellsSmallWhiteText>Spells</SpellsSmallWhiteText>\n            <FlexRow>\n                <SpellsDisplayStyles>\n                    <SummonerSpellTooltipWrapper slug={firstSlug}>\n                        <SpellItem cursor=\"help\" slug={firstSlug} type=\"spell\" />\n                    </SummonerSpellTooltipWrapper>\n                    <SummonerSpellTooltipWrapper slug={secondSlug}>\n                        <SpellItem cursor=\"help\" slug={secondSlug} type=\"spell\" leftSpace=\"small\" />\n                    </SummonerSpellTooltipWrapper>\n                </SpellsDisplayStyles>\n            </FlexRow>\n        </SpellsStyles>\n    );\n};\n\nexport default memo(Spells);","import { memo } from 'preact/compat';\nimport { useCallback, useState, useEffect } from 'preact/hooks';\nimport { gameItemIcon } from '../../../lib/helpers';\nimport { useTooltips } from '../../../lib/context/tooltips';\nimport { maybeFetchTooltip } from '../../../lib/tooltips';\nimport {\n    GameTooltip,\n    GameTooltipEmpty,\n} from '../game-tooltip';\n\nexport const GameItemTooltip = ({ by = 'riotId', identifier = false }) => {\n\n    const { ttData, setTtData } = useTooltips();\n    const [localTooltip, setLocalTooltip] = useState(false);\n\n    //Get the tooltip\n    const doTooltip = useCallback(async () => {\n        //Only get it if there's a identifier set\n        if (identifier) {\n            const ttRes = await maybeFetchTooltip('item', by, identifier, ttData, setTtData);\n            if (ttRes) {\n                setLocalTooltip(ttRes);\n            }\n        }\n    }, [identifier]);\n\n    useEffect(async () => {\n        await doTooltip();\n    }, [identifier]);\n\n    return localTooltip ? (\n        <GameTooltip\n            name={localTooltip.name}\n            iconName={localTooltip.name}\n            iconUrl={gameItemIcon(identifier)}\n            description={localTooltip.effectDescription}\n        />\n    ) : (\n        <GameTooltipEmpty />\n    );\n};\n\nexport default memo(GameItemTooltip);","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport GameItemTooltip from '../game-item-tooltip';\nimport { TransparentTooltip } from '../../../styles/components/transparent-tooltip';\n\nconst GameItemTooltipWrapper = ({ by, identifier, children }) => {\n\n    const tooltipFn = useCallback(() => <GameItemTooltip by={by} identifier={identifier} />, [identifier]);\n\n    return (identifier && (\n        <TransparentTooltip tooltipFn={tooltipFn}>\n            <span style=\"z-index: 10;\">{children}</span>\n        </TransparentTooltip>\n    ));\n};\n\nexport default memo(GameItemTooltipWrapper);","import SpellItem from '../spell-item';\nimport tw, { styled } from 'twin.macro';\nimport FlexCol from '../../styles/components/flex-col';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\nimport GameItemTooltipWrapper from '../tooltips/game-item-tooltip-wrapper';\n\nconst ItemSetStyles = styled(FlexCol)(({ leftSpace }) => [\n    tw`w-auto`,\n    'large' === leftSpace ? tw`ml-8` : tw``,\n    'normal' === leftSpace ? tw`ml-7` : tw``,\n    'small' === leftSpace ? tw`ml-5` : tw``,\n    'baseNoneMdSmall' === leftSpace ? tw`ml-0 md:(ml-5)` : tw``,\n    'very-small' === leftSpace ? tw`ml-3` : tw``,\n]);\nconst ItemSetSmallPurpleText = tw(SmallPurpleText)`capitalize`;\nconst ItemSetDisplayStyles = tw(FlexRow)`uppercase pt-1.5`;\n\nconst ItemSet = ({ name, items, loading = true, leftSpace = false }) => {\n\n    return (\n        <ItemSetStyles leftSpace={leftSpace}>\n            <ItemSetSmallPurpleText loading={loading}>{name}</ItemSetSmallPurpleText>\n            <FlexRow>\n                <ItemSetDisplayStyles>\n                    {loading && (\n                        <>\n                            <SpellItem slug={false} />\n                            <SpellItem slug={false} leftSpace=\"small\" />\n                            <SpellItem slug={false} leftSpace=\"small\" />\n                        </>\n                    )}\n                    {!loading && items.map((c, i) => {\n                        const leftSpace = 0 === i ? false : 'small';\n                        const key = `${c}-${i}`;\n                        // ❗️We're intentionally only showing THREE here❗️\n                        if (i < 3) {\n                            return (\n                                <GameItemTooltipWrapper by=\"riotId\" identifier={c}>\n                                    <SpellItem cursor=\"help\" slug={c} key={key} leftSpace={leftSpace} />\n                                </GameItemTooltipWrapper>\n                            );\n                        }\n                    })}\n                </ItemSetDisplayStyles>\n            </FlexRow>\n        </ItemSetStyles>\n    );\n};\n\nexport default ItemSet;","import tw from 'twin.macro';\n\nconst ItemsDisplay = tw`flex`;\n\nexport default ItemsDisplay;","import { styled } from 'twin.macro';\nimport ItemsDisplayU from '../../utils/items-display';\nimport LoadingText from '../../utils/loading-text';\n\nconst ItemsDisplay = styled.div(({ loading }) => [\n    ItemsDisplayU,\n    (loading) && LoadingText,\n]);\n\nexport default ItemsDisplay;","import { memo } from 'preact/compat';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport ItemSet from '../item-set';\nimport tw, { styled } from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport FlexCol from '../../styles/components/flex-col';\nimport SmallWhiteText from '../../styles/components/small-white-text';\nimport ItemsDisplay from '../../styles/components/items-display';\n\nconst ItemsStyles = tw(FlexCol)`w-full`;\nconst ItemsStylesRow = tw(FlexRow)`w-full`;\nconst ItemsSmallWhiteText = tw(SmallWhiteText)`uppercase`;\nconst ItemsDisplayStyles = tw(ItemsDisplay)`flex flex-col w-full capitalize pt-2.5 pb-1 md:(flex-row)`;\nconst ItemSetGroup = styled('div')(({ paddingTop = false }) => [\n    tw`flex flex-row w-full md:(w-auto)`,\n    'small' === paddingTop ? tw`pt-2.5 md:(pt-0)` : tw`pt-0`,\n]);\n\nconst Items = () => {\n\n    const dummyData = {\n        type: 'items',\n        items: []\n    };\n\n    const { daData: { data: { lol: { champion: { build: { items = [\n        dummyData,\n        dummyData,\n        dummyData,\n        dummyData,\n    ] } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const loading = isLoading || items[0].items.length === 0;\n\n    return (\n        <ItemsStyles>\n            <ItemsSmallWhiteText>Items</ItemsSmallWhiteText>\n            <ItemsStylesRow>\n                <ItemsDisplayStyles>\n                    <ItemSetGroup>\n                        <ItemSet name={items[0].type} items={items[0].items} loading={loading} />\n                        <ItemSet name={`${items[1].type} items`} items={items[1].items} loading={loading} leftSpace=\"small\" />\n                    </ItemSetGroup>\n                    <ItemSetGroup paddingTop=\"small\">\n                        <ItemSet name={`${items[2].type} items`} items={items[2].items} loading={loading} leftSpace=\"baseNoneMdSmall\" />\n                        <ItemSet name={`${items[3].type} items`} items={items[3].items} loading={loading} leftSpace=\"small\" />\n                    </ItemSetGroup>\n                </ItemsDisplayStyles>\n            </ItemsStylesRow>\n        </ItemsStyles>\n    );\n};\n\nexport default memo(Items);","import { memo } from 'preact/compat';\nimport loadable from '@loadable/component';\nimport { useStaticGlobalProps } from '../../lib/context/static-global-props';\n\nconst Skills = (props) => {\n\n    const { layout } = useStaticGlobalProps();\n\n    const DynamicSkills = loadable(() => import(`../${layout}-skills/index.js`));\n\n    return (\n        <DynamicSkills {...props} />\n    )\n};\n\nexport default memo(Skills);","import { memo } from 'preact/compat';\nimport { useMemo } from 'preact/hooks';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport Runes from '../runes';\nimport Spells from '../spells';\nimport Items from '../items';\nimport Skills from '../skills';\nimport { championPosterImage } from '../../lib/helpers';\nimport tw, { styled, theme } from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport { useStaticGlobalProps } from '../../lib/context/static-global-props';\n\nconst BodyStyles = styled('div')(({ layout = false, posterUrl = false }) => [\n    tw`flex flex-col bg-transparent divide-y divide-widget-white-line`,\n    ('full' === layout && posterUrl) && {\n        [`@media (min-width: ${theme('screens.lg')})`]: {\n            'background-repeat': 'no-repeat',\n            'background-position': '183px -36px',\n            'background-size': '100% auto',\n            'background-image': `radial-gradient(circle at 61% 153px, ${theme('colors.widget-purple.light-65')}, ${theme('colors.widget-purple.light')} 30%), url('${posterUrl}')`,\n        },\n    },\n]);\n\nconst BodyRowCol = styled(FlexRow)(({ pt = false, layout = false, hiddenBelowMd = false }) => [\n    true === pt ? tw`md:(pt-5) lg:(pt-7)` : tw``,\n    'full' === layout ? tw`p-3 flex-col items-start lg:(p-5) xl:(flex-row items-end)` : tw`p-3 flex-col items-start lg:(p-5) xl:(flex-row)`,\n    true === hiddenBelowMd ? tw`hidden md:(flex)` : tw``,\n]);\n\nconst Body = () => {\n\n    const { sqData: { data: { championCommonInfo = [] } = {} } } = useSquidexApi();\n    const { layout } = useStaticGlobalProps();\n\n    const { flatData: { name = '' } = {} } = championCommonInfo[0] || {};\n\n    const posterUrl = useMemo(() => {\n        return championPosterImage(name);\n    }, [name]);\n\n    return (\n        <BodyStyles layout={layout} posterUrl={posterUrl}>\n            <BodyRowCol layout={layout}>\n                <Runes />\n                <Spells />\n            </BodyRowCol>\n            <BodyRowCol pt={true}>\n                <Items />\n            </BodyRowCol>\n            <BodyRowCol pt={true} hiddenBelowMd={'full' === layout}>\n                <Skills />\n            </BodyRowCol>\n        </BodyStyles>\n    );\n};\n\nexport default memo(Body);","import DynamicSvg from '../dynamic-svg';\n\nconst PlatinumPlusIcon = ({ className }) => {\n\n    return (\n        <DynamicSvg name=\"platinum-plus\" className={className} />\n    );\n}\n\nexport default PlatinumPlusIcon;","import { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\nimport { useDataApi } from '../../lib/context/data-api';\nimport { useLoading } from '../../lib/context/loading';\nimport { commaNumber } from '../../lib/helpers';\nimport PlatinumPlusIcon from '../platinum-plus-icon';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst GamesAnalyzedStyles = tw(FlexRow)``;\nconst GamesAnalyzedSmallLightestPurpleText = tw(SmallPurpleText)`text-widget-purple-lightest lowercase pr-0.5 lg:(pr-1.5)`;\nconst GamesAnalyzedSmallPurpleTextSmaller = tw(SmallPurpleText)`flex normal-case pl-0.5 lg:(hidden) lg:(pl-1)`;\nconst GamesAnalyzedSmallPurpleTextLarger = tw(SmallPurpleText)`hidden normal-case pl-0.5 lg:(flex) lg:(pl-1)`;\n\nconst GamesAnalyzed = () => {\n\n    const { daData: { data: { lol: { champion: { build: { stats: { matchCount: matchCountRaw } = {} } = {} } = {} } = {} } = {} } = {} } = useDataApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const getMatchCount = useCallback(() => {\n        return commaNumber(matchCountRaw);\n    }, [matchCountRaw]);\n\n    const matchCount = getMatchCount();\n\n    const loading = isLoading || !matchCount;\n\n    return (\n        <GamesAnalyzedStyles>\n            <GamesAnalyzedSmallLightestPurpleText loading={loading}>2,031,593</GamesAnalyzedSmallLightestPurpleText>\n            <FlexRow>\n                <PlatinumPlusIcon />\n                <GamesAnalyzedSmallPurpleTextSmaller>games analyzed</GamesAnalyzedSmallPurpleTextSmaller>\n                <GamesAnalyzedSmallPurpleTextLarger>Platinum+ games analyzed</GamesAnalyzedSmallPurpleTextLarger>\n            </FlexRow>\n        </GamesAnalyzedStyles>\n    );\n};\n\nexport default memo(GamesAnalyzed);","import { memo } from 'preact/compat';\nimport { useSquidexApi } from '../../lib/context/squidex-api';\nimport { useLoading } from '../../lib/context/loading';\nimport MoreBuildsIcon from '../more-builds-icon';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallWhiteText from '../../styles/components/small-white-text';\n\nconst MoreBuildsStyles = tw(FlexRow)`pt-2.5 md:(pt-0)`;\nconst MoreBuildsLoading = tw(SmallWhiteText)`ml-6 lg:(ml-6)`;\nconst MoreBuildsSmallGoldText = tw(SmallWhiteText)`flex items-center text-xs! font-medium text-widget-gold normal-case transition-all hover:text-widget-gold-light svg:all:(transition-all fill-widget-gold) hover:(svg:all:(fill-widget-gold-light)) md:(pl-6)`;\nconst MoreBuildsIconStyled = tw(MoreBuildsIcon)`ml-1.5 fill-widget-gold`;\n\n\nconst MoreBuilds = () => {\n\n    const { sqData: { data: { championCommonInfo = [] } = {} } = {} } = useSquidexApi();\n    const { loading: isLoading = true } = useLoading();\n\n    const { flatData: { name = 'xxxx', slug = '' } = {} } = championCommonInfo[0] || {};\n\n    const moreBuildsLinkText = `See more ${name} builds`;\n    const moreBuildsLinkHref = `https://app.mobalytics.gg/lol/champions/${slug}/build`;\n\n    const loading = isLoading || (!name || 'xxxx' === name);\n\n    return (\n        <MoreBuildsStyles>\n            {loading && (\n                <MoreBuildsLoading loading={true}>See more xxxxx builds...</MoreBuildsLoading>\n            )}\n            {!loading && (\n                <MoreBuildsSmallGoldText as={'a'} href={moreBuildsLinkHref} target=\"_blank\" title={moreBuildsLinkText} loading={loading}>{moreBuildsLinkText}<MoreBuildsIconStyled /></MoreBuildsSmallGoldText>\n            )}\n        </MoreBuildsStyles>\n    );\n};\n\nexport default memo(MoreBuilds);","import DynamicSvg from '../dynamic-svg';\n\n\nconst MoreBuildsIcon = ({ className }) => {\n\n    return (\n        <DynamicSvg name=\"more-builds\" className={className} />\n    );\n}\n\nexport default MoreBuildsIcon;","import tw from 'twin.macro';\n\nconst BrandNameStyles = tw('a')`normal-case text-white`;\n\nconst BrandName = () => {\n\n    return (\n        <BrandNameStyles href=\"https://mobalytics.gg\" target=\"_blank\" title=\"Mobalytics\" dangerouslySetInnerHTML={{ __html: '<strong>MOB</strong>ALYTICS.gg' }} />\n    );\n};\n\nexport default BrandName;","import Mark from '../mark';\nimport BrandName from '../brand-name';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\nimport SmallPurpleText from '../../styles/components/small-purple-text';\n\nconst PoweredByStyles = tw(FlexRow)`pt-5 pb-2.5 md:(pt-0 pb-0 ml-auto)`;\nconst PoweredBySmallPurpleText = tw(SmallPurpleText)`flex items-center self-end normal-case`;\nconst PoweredByMark = tw(Mark)`ml-1 mr-1 lg:(ml-2 mr-2)`;\n\nconst PoweredBy = () => {\n\n    return (\n        <PoweredByStyles>\n            <PoweredBySmallPurpleText>Powered by <PoweredByMark /><BrandName /></PoweredBySmallPurpleText>\n        </PoweredByStyles>\n    );\n};\n\nexport default PoweredBy;","import DynamicSvg from '../dynamic-svg';\n\nconst Mark = ({ className }) => {\n\n    return (\n        <DynamicSvg name=\"mark\" className={className} />\n    );\n}\n\nexport default Mark;","import GamesAnalyzed from '../games-analyzed';\nimport MoreBuilds from '../more-builds';\nimport PoweredBy from '../powered-by';\nimport tw from 'twin.macro';\nimport FlexRow from '../../styles/components/flex-row';\n\nconst FooterStyles = tw(FlexRow)`w-full flex flex-col bg-widget-purple rounded-b-md p-3.5 border-t border-widget-purple-border md:(flex-row)`;\n\nconst Footer = () => {\n\n    return (\n        <FooterStyles>\n            <GamesAnalyzed />\n            <MoreBuilds />\n            <PoweredBy />\n        </FooterStyles>\n    );\n};\n\nexport default Footer;","import { useState, useEffect } from 'preact/hooks';\nimport Header from './components/header';\nimport Body from './components/body';\nimport Footer from './components/footer';\nimport tw, { styled } from 'twin.macro';\n\nconst Container = styled('div')(({ loaded = false }) => [\n  tw`hidden flex-col items-stretch justify-between h-full w-full min-h-full border border-widget-purple-border bg-widget-purple-light text-white rounded-md font-sans max-w-screen-xl sm:(flex)`,\n  false === loaded ? tw`lg:(min-h-914) xl:(min-h-808)` : tw``,\n]);\n\nconst App = () => {\n\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    if (!loaded) {\n      setLoaded(true);\n    }\n  }, []);\n\n  return (\n    <Container loaded={loaded}>\n      <Header />\n      <Body />\n      <Footer />\n    </Container>\n  );\n};\n\nexport default App;","import { SkillKey, SkillKeyColor, SkillKeyLetter, validateStrEnumValue } from '../helpers';\nimport { colors } from '../legacy/colors';\n\nconst verticalPlacements = [\n    'top',\n    'top-start',\n    'top-end',\n    'bottom',\n    'bottom-start',\n    'bottom-end',\n    'auto',\n    'auto-start',\n    'auto-end',\n];\n\nexport const isVerticalPlacement = (placement) => {\n    return verticalPlacements.includes(placement);\n};\n\nexport const isConnectedChampionCommonAbility = (value) => {\n    return !!(value && value.name && value.slug && value.activationKey);\n}\n\nexport const getChampionAbilityLabelAndColor = (keyOrLabel) => {\n    const key = validateStrEnumValue(SkillKey, keyOrLabel);\n\n    return key\n        ? [SkillKeyColor[key], SkillKeyLetter[key]]\n        : [keyOrLabel ? colors.skillLetterColor[keyOrLabel] || colors.text.purple : colors.text.purple, keyOrLabel];\n}\n","import { squidexApiClient } from '../graphql/client';\nimport { SPELL_BY_FILTER, PERK_BY_FILTER, ITEM_BY_FILTER, ABILITY_BY_FILTER } from '../graphql/queries';\n\nexport const queryKey = Object.freeze({\n    'spell': SPELL_BY_FILTER,\n    'perk': PERK_BY_FILTER,\n    'item': ITEM_BY_FILTER,\n    'ability': ABILITY_BY_FILTER,\n});\n\nconst getDataByFilter = async (filter, query) => {\n    return await squidexApiClient.query(query, {\n        filter,\n    }).toPromise();\n};\n\nexport const getSquidexTooltipBySlug = async (type = 'spell', identifier) => {\n\n    const tooltipQuery = queryKey[type];\n    const queryText = Number.isInteger(identifier) ? identifier : `'${identifier}'`;\n\n    return await getDataByFilter(`data/slug/iv eq ${queryText} `, tooltipQuery);\n};\n\nexport const getSquidexTooltipByRiotId = async (type = 'spell', identifier) => {\n\n    const tooltipQuery = queryKey[type];\n    const queryText = Number.isInteger(identifier) ? identifier : `'${identifier}'`;\n\n    return await getDataByFilter(`data/riotId/iv eq ${queryText} `, tooltipQuery);\n};","import { getSquidexTooltipBySlug, getSquidexTooltipByRiotId } from '../data';\nimport { firstItem } from '../helpers';\n\nexport const toolTipAlreadyFetched = (tooltip, by = 'slug', tooltips) => {\n    return typeof tooltips?.tooltips.find(t => t[by] === tooltip[by]) !== 'undefined';\n};\n\nexport const addTooltip = (tooltip, by = 'slug', tooltips, setTooltips) => {\n\n    const existingTooltip = tooltips.tooltips.find(t => t[by] === tooltip[by]) || false;\n\n    if (existingTooltip) {\n        setTooltips({\n            ...tooltips,\n            tooltips: [\n                ...tooltips.tooltips,\n                {\n                    ...existingTooltip,\n                    ...tooltip\n                }\n            ]\n        });\n    }\n    else {\n        setTooltips({\n            ...tooltips,\n            tooltips: [\n                ...tooltips.tooltips,\n                {\n                    ...tooltip\n                }\n            ]\n        });\n    }\n};\n\nexport const getTooltip = (identifier, by = 'slug', tooltips) => {\n    return tooltips.tooltips.find(t => t[by] === identifier) || false;\n};\n\nexport const setTooltipsLoading = (loading = true, tooltips, setTooltips) => {\n    return setTooltips({\n        ...tooltips,\n        loading,\n    });\n};\n\nexport const setTooltipsError = (error = false, tooltips, setTooltips) => {\n    return setTooltips({\n        ...tooltips,\n        error,\n    });\n};\n\nexport const maybeFetchTooltip = async (type = 'spell', by = 'riotId', identifier, tooltips, setTooltips) => {\n\n    let isFetchedOb = {};\n    isFetchedOb[by] = identifier;\n    const isFetched = toolTipAlreadyFetched(isFetchedOb, by, tooltips);\n\n    let tooltip;\n\n    if (!isFetched) {\n\n        setTooltipsLoading(true, tooltips, setTooltips);\n\n        const getFunc = 'slug' === by ? getSquidexTooltipBySlug : ('riotId' === by ? getSquidexTooltipByRiotId : false);\n\n        const res = await getFunc(type, identifier, tooltips, setTooltips);\n        const { data, error } = res;\n\n        setTooltipsLoading(false, tooltips, setTooltips);\n\n        if (!error) {\n            const keyType = 'ability' === type ? 'item' : type;\n            const key = `${keyType}s`;\n            tooltip = firstItem(data[key]).flatData;\n            addTooltip(tooltip, by, tooltips, setTooltips);\n            return tooltip;\n        }\n        else {\n            setTooltipsError(true, tooltips, setTooltips);\n            return false;\n        }\n    }\n    else {\n        tooltip = getTooltip(identifier, by, tooltips);\n    }\n\n    return tooltip;\n};","import tw, { styled } from 'twin.macro';\n\nconst FlexCol = styled.div(() => [\n    tw`flex flex-col items-start justify-between`,\n]);\n\nexport default FlexCol;","import tw, { styled } from 'twin.macro';\n\nconst FlexRow = styled.div(() => [\n    tw`flex flex-row items-center justify-start h-full`,\n]);\n\nexport default FlexRow;","import tw, { styled } from 'twin.macro';\nimport SmallText from '../../utils/small-text';\nimport LoadingText from '../../utils/loading-text';\n\nconst SmallPurpleText = styled.span(({ loading }) => [\n    SmallText,\n    tw`text-widget-purple-text`,\n    (loading) && LoadingText,\n]);\n\nexport default SmallPurpleText;","import tw, { styled } from 'twin.macro';\nimport SmallText from '../../utils/small-text';\nimport LoadingText from '../../utils/loading-text';\n\nconst SmallWhiteText = styled.span(({ loading }) => [\n    SmallText,\n    tw`text-white`,\n    (loading) && LoadingText,\n]);\n\nexport default SmallWhiteText;","import { memo } from 'preact/compat';\nimport { useState, useCallback, useMemo } from 'preact/hooks';\nimport Tippy from '@tippyjs/react/headless';\n\nexport const LazyTippy = memo((props) => {\n    const [mounted, setMounted] = useState(false);\n\n    const onShow = useCallback(() => setMounted(true), []);\n    const onHide = useCallback(() => setMounted(false), []);\n\n    const lazyPlugin = useMemo(\n        () => ({\n            fn: () => ({\n                onShow,\n                onHide,\n            }),\n        }),\n        [onShow, onHide]\n    );\n\n    const computedProps = useMemo(\n        () => ({\n            ...props,\n            plugins: [lazyPlugin, ...(props.plugins || [])],\n            content: mounted ? props.content : '',\n            render: props.render\n                ? (...args) => {\n                    return mounted && props.render ? props.render(...args) : null;\n                }\n                : undefined,\n        }),\n        [props, mounted, lazyPlugin]\n    );\n\n    return <Tippy {...computedProps} />;\n});","import { useCallback, useMemo } from 'preact/hooks';\nimport 'tippy.js/dist/tippy.css';\nimport 'react-popper-tooltip/dist/styles.css';\n\nimport { LazyTippy } from '../lazy-tippy';\nimport { isVerticalPlacement } from '../../../lib/tooltips/helpers';\nimport { isDef } from '../../../lib/helpers';\n\nconst defaultOffset = [0, 10];\n\nexport const TooltipWrapper = props => {\n\n    const {\n        children,\n        placement = 'top',\n        tooltip,\n        tooltipFn,\n        trigger = 'mouseenter focus',\n        isDisabled,\n        interactive = false,\n        offset,\n        hideOnClick = true,\n        visible,\n        onTooltipShow,\n        onTooltipHide,\n        onClickOutside,\n        className,\n        scale = null,\n    } = props;\n\n    // choose legacy tooltip of tooltipFn, we will get rid of this function when all tooltip moved to tooltipFn\n    const renderer = useCallback(\n        (tooltipRenderingProps) => {\n            const content = tooltipFn(tooltipRenderingProps);\n            return content ? (\n                <div {...tooltipRenderingProps} className={className}>\n                    {content}\n                </div>\n            ) : null;\n        },\n        [tooltip, tooltipFn, className]\n    );\n\n    // adds scale transformation to the popper style object\n    const popperOptionsModifyCb = useCallback(\n        ({ state }) => {\n            isDef(scale) && (state.styles.popper.transform = `${state.styles.popper.transform} scale(${scale})`);\n            return state;\n        },\n        [scale]\n    );\n\n    // default popper options base on scale fn\n    const popperOptions = useMemo(\n        () => ({\n            strategy: 'fixed',\n            modifiers: [\n                {\n                    name: 'scale',\n                    enabled: true,\n                    phase: 'beforeWrite',\n                    fn: popperOptionsModifyCb,\n                },\n            ],\n        }),\n        [popperOptionsModifyCb]\n    );\n\n    // offset calculating function for case when scale is defined\n    const offsetFn = useCallback(\n        ({ placement, popper }) => {\n            const { width, height } = popper;\n            const offsetSrc = offset || defaultOffset;\n\n            if (isDef(scale)) {\n                const skidding = offsetSrc[0];\n                const distance = offsetSrc[1];\n\n                const isVertical = isVerticalPlacement(placement);\n                const size = isVertical ? height : width;\n\n                return [skidding, (-size / 2) * (1 - scale) + distance * scale];\n            }\n            return offsetSrc;\n        },\n        [scale, offset]\n    );\n\n    // tippy has a bug which crash the app if onShow or onHide is explicitly passed with undefined\n    const onShow = useCallback(() => onTooltipShow && onTooltipShow(), [onTooltipShow]);\n    const onHide = useCallback(() => onTooltipHide && onTooltipHide(), [onTooltipHide]);\n\n    return (\n        <LazyTippy\n            render={renderer}\n            placement={placement}\n            popperOptions={popperOptions}\n            trigger={trigger}\n            disabled={isDisabled}\n            interactive={interactive}\n            offset={offsetFn}\n            hideOnClick={hideOnClick}\n            onClickOutside={onClickOutside}\n            visible={visible}\n            onShow={onShow}\n            onHide={onHide}\n        >\n            {children}\n        </LazyTippy>\n    );\n};\n\nexport default TooltipWrapper;","import TooltipWrapper from '../../../components/tooltips/tooltip-wrapper';\nimport { styled } from 'twin.macro';\n\nexport const TransparentTooltip = styled(TooltipWrapper)(() => [\n    {\n        'background-color': 'transparent',\n        'border': 'solid 1px transparent',\n    },\n]);","import tw from 'twin.macro';\n\nconst LoadingText = tw`(bg-widget-purple-skeleton-text text-transparent animate-pulse)!`;\n\nexport default LoadingText;","import tw from 'twin.macro';\n\nconst SmallText = tw`font-normal text-xs capitalize whitespace-nowrap`;\n\nexport default SmallText;","var map = {\n\t\"./compact-runes/index.js\": [\n\t\t3676,\n\t\t676\n\t],\n\t\"./full-runes/index.js\": [\n\t\t3490,\n\t\t490\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3815;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./compact-skills/index.js\": [\n\t\t2489,\n\t\t929,\n\t\t489\n\t],\n\t\"./full-skill-order-mapped-skills/index.js\": [\n\t\t1207,\n\t\t207\n\t],\n\t\"./full-skills/index.js\": [\n\t\t2870,\n\t\t929,\n\t\t870\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 5134;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./background.svg\": [\n\t\t2108,\n\t\t108\n\t],\n\t\"./mark.svg\": [\n\t\t4485,\n\t\t485\n\t],\n\t\"./mobalytics-logo.svg\": [\n\t\t6438,\n\t\t438\n\t],\n\t\"./more-builds.svg\": [\n\t\t5282,\n\t\t282\n\t],\n\t\"./platinum-plus.svg\": [\n\t\t3357,\n\t\t357\n\t],\n\t\"./right-arrow.svg\": [\n\t\t5511,\n\t\t511\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9058;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}